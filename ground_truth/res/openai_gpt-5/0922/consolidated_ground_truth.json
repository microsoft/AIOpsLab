[
  {
    "problem_id": "astronomy_shop_loadgenerator_flood_homepage-detection-1",
    "key_commands": [
      {
        "command": "exec_shell(\"kubectl get pods -n astronomy-shop\")",
        "type": "probe_command",
        "importance_score": 8,
        "description": "List all pods in the astronomy-shop namespace to identify unhealthy components and spot the failing pod.",
        "sequence_number": 1,
        "original_command": "exec_shell(\"kubectl get pods -n astronomy-shop\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n astronomy-shop fraud-detection-<POD_SUFFIX> --all-containers=true --tail=200\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "Fetch recent logs from all containers in the fraud-detection pod to gather initial failure context.",
        "sequence_number": 2,
        "original_command": "exec_shell(\"kubectl logs -n astronomy-shop fraud-detection-65868bcdb5-br2nr --all-containers=true --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "65868bcdb5-br2nr",
            "placeholder": "<POD_SUFFIX>",
            "position": 59
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl describe pod -n astronomy-shop fraud-detection-<POD_SUFFIX>\")",
        "type": "probe_command",
        "importance_score": 9,
        "description": "Inspect detailed pod state, container status, and events to confirm CrashLoopBackOff and termination details.",
        "sequence_number": 3,
        "original_command": "exec_shell(\"kubectl describe pod -n astronomy-shop fraud-detection-65868bcdb5-br2nr\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "65868bcdb5-br2nr",
            "placeholder": "<POD_SUFFIX>",
            "position": 67
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n astronomy-shop fraud-detection-<POD_SUFFIX> -<REPLICA_SUFFIX> --tail=500\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Retrieve logs from the previous container instance to investigate the cause of the last crash.",
        "sequence_number": 4,
        "original_command": "exec_shell(\"kubectl logs -n astronomy-shop fraud-detection-65868bcdb5-br2nr --previous --tail=500\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "65868bcdb5-br2nr",
            "placeholder": "<POD_SUFFIX>",
            "position": 59
          },
          {
            "type": "k8s_replicaset_suffix",
            "original": "-previous",
            "placeholder": "<REPLICA_SUFFIX>",
            "position": 73
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl get events -n astronomy-shop --sort-by=.lastTimestamp\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Review recent namespace events to corroborate restart backoffs and timing of failures.",
        "sequence_number": 5,
        "original_command": "exec_shell(\"kubectl get events -n astronomy-shop --sort-by=.lastTimestamp\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n astronomy-shop fraud-detection-<POD_SUFFIX> -c fraud<REPLICA_SUFFIX> --tail=500\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Get application container logs specifically to focus on the service's runtime output.",
        "sequence_number": 6,
        "original_command": "exec_shell(\"kubectl logs -n astronomy-shop fraud-detection-65868bcdb5-br2nr -c fraud-detection --tail=500\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "65868bcdb5-br2nr",
            "placeholder": "<POD_SUFFIX>",
            "position": 59
          },
          {
            "type": "k8s_replicaset_suffix",
            "original": "-detection",
            "placeholder": "<REPLICA_SUFFIX>",
            "position": 80
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl get pod -n astronomy-shop fraud-detection-<POD_SUFFIX> -o jsonpath='{.status.containerStatuses[0].lastState.terminated.reason} {.status.containerStatuses[0].lastState.terminated.exitCode} {.status.containerStatuses[0].state.waiting.reason}'\")",
        "type": "probe_command",
        "importance_score": 9,
        "description": "Extract key status fields to conclusively confirm termination reason, exit code, and current waiting reason (e.g., Error 137 CrashLoopBackOff).",
        "sequence_number": 7,
        "original_command": "exec_shell(\"kubectl get pod -n astronomy-shop fraud-detection-65868bcdb5-br2nr -o jsonpath='{.status.containerStatuses[0].lastState.terminated.reason} {.status.containerStatuses[0].lastState.terminated.exitCode} {.status.containerStatuses[0].state.waiting.reason}'\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "65868bcdb5-br2nr",
            "placeholder": "<POD_SUFFIX>",
            "position": 62
          }
        ]
      },
      {
        "command": "submit(\"Yes\")",
        "type": "execute_command",
        "importance_score": 10,
        "description": "Submit the final decision indicating an anomaly is detected based on collected evidence.",
        "sequence_number": 8,
        "original_command": "submit(\"Yes\")"
      }
    ]
  },
  {
    "problem_id": "wrong_bin_usage-detection-1",
    "key_commands": [
      {
        "command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "List all pods in the namespace to verify components are running and identify targets for deeper inspection.",
        "sequence_number": 1,
        "original_command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")"
      },
      {
        "command": "exec_shell(\"kubectl get svc -n test-hotel-reservation\")",
        "type": "probe_command",
        "importance_score": 3,
        "description": "List all services to review exposed ports and ensure service objects exist.",
        "sequence_number": 2,
        "original_command": "exec_shell(\"kubectl get svc -n test-hotel-reservation\")"
      },
      {
        "command": "exec_shell(\"kubectl get endpoints -n test-hotel-reservation\")",
        "type": "probe_command",
        "importance_score": 4,
        "description": "Check service endpoints to confirm pods are correctly backing services.",
        "sequence_number": 3,
        "original_command": "exec_shell(\"kubectl get endpoints -n test-hotel-reservation\")"
      },
      {
        "command": "exec_shell(\"kubectl get deploy -n test-hotel-reservation\")",
        "type": "probe_command",
        "importance_score": 4,
        "description": "List deployments to verify availability and locate specific deployment objects.",
        "sequence_number": 4,
        "original_command": "exec_shell(\"kubectl get deploy -n test-hotel-reservation\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation frontend-<POD_SUFFIX> --tail=200\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "Inspect frontend logs to observe user-facing errors indicating backend profile service issues.",
        "sequence_number": 5,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation frontend-7fc7ddc9db-55xlh --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "7fc7ddc9db-55xlh",
            "placeholder": "<POD_SUFFIX>",
            "position": 60
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation consul-<POD_SUFFIX> --tail=200\")",
        "type": "probe_command",
        "importance_score": 3,
        "description": "Review Consul logs to confirm service registration and health queries behavior.",
        "sequence_number": 6,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation consul-78c8d79bb-d5jmk --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "78c8d79bb-d5jmk",
            "placeholder": "<POD_SUFFIX>",
            "position": 58
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation search-<POD_SUFFIX> --tail=200\")",
        "type": "probe_command",
        "importance_score": 3,
        "description": "Check search service logs to verify it initializes and registers correctly, narrowing the issue scope.",
        "sequence_number": 7,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation search-5c64c8f5bc-5kvr2 --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "5c64c8f5bc-5kvr2",
            "placeholder": "<POD_SUFFIX>",
            "position": 58
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation profile-<POD_SUFFIX> --tail=200\")",
        "type": "probe_command",
        "importance_score": 9,
        "description": "Examine profile service logs revealing it runs geo binary (cmd/geo), indicating wrong binary usage.",
        "sequence_number": 8,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation profile-5fc7b778f5-2ccj5 --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "5fc7b778f5-2ccj5",
            "placeholder": "<POD_SUFFIX>",
            "position": 59
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl get deploy profile -n test-hotel-reservation -o yaml\")",
        "type": "probe_command",
        "importance_score": 10,
        "description": "Inspect profile deployment spec to confirm container command is set to \"geo\" (definitive wrong binary configuration).",
        "sequence_number": 9,
        "original_command": "exec_shell(\"kubectl get deploy profile -n test-hotel-reservation -o yaml\")"
      },
      {
        "command": "exec_shell(\"kubectl get svc profile -n test-hotel-reservation -o yaml\")",
        "type": "probe_command",
        "importance_score": 3,
        "description": "Validate profile service configuration and ports to rule out service misconfiguration as the cause.",
        "sequence_number": 10,
        "original_command": "exec_shell(\"kubectl get svc profile -n test-hotel-reservation -o yaml\")"
      }
    ]
  },
  {
    "problem_id": "auth_miss_mongodb-analysis-1",
    "key_commands": [
      {
        "command": "exec_shell(\"kubectl get pods -n test-social-network\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "List all pods in the namespace to identify failing components",
        "sequence_number": 1,
        "original_command": "exec_shell(\"kubectl get pods -n test-social-network\")"
      },
      {
        "command": "exec_shell(\"kubectl describe pod url-shorten-mongodb-<POD_SUFFIX> -n test-social-network\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "Inspect failing MongoDB pod details, mounts and events",
        "sequence_number": 2,
        "original_command": "exec_shell(\"kubectl describe pod url-shorten-mongodb-6fd8555889-rqhsx -n test-social-network\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "6fd8555889-rqhsx",
            "placeholder": "<POD_SUFFIX>",
            "position": 53
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs url-shorten-mongodb-<POD_SUFFIX> -n test-social-network -<REPLICA_SUFFIX>\")",
        "type": "probe_command",
        "importance_score": 9,
        "description": "Fetch previous container logs to capture the crash reason (certificate/SSL error)",
        "sequence_number": 3,
        "original_command": "exec_shell(\"kubectl logs url-shorten-mongodb-6fd8555889-rqhsx -n test-social-network --previous\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "6fd8555889-rqhsx",
            "placeholder": "<POD_SUFFIX>",
            "position": 45
          },
          {
            "type": "k8s_replicaset_suffix",
            "original": "-previous",
            "placeholder": "<REPLICA_SUFFIX>",
            "position": 82
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl get secret mongodb-tls -n test-social-network -o yaml\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "View the TLS secret manifest referenced by the MongoDB pod",
        "sequence_number": 4,
        "original_command": "exec_shell(\"kubectl get secret mongodb-tls -n test-social-network -o yaml\")"
      },
      {
        "command": "exec_shell(\"kubectl get secret mongodb-tls -n test-social-network -o jsonpath='{.data.tls\\\\.pem}' | base64 -d | sed -n '1,5p'\")",
        "type": "probe_command",
        "importance_score": 8,
        "description": "Decode the TLS secret content to verify it contains only a certificate (no key)",
        "sequence_number": 5,
        "original_command": "exec_shell(\"kubectl get secret mongodb-tls -n test-social-network -o jsonpath='{.data.tls\\\\.pem}' | base64 -d | sed -n '1,5p'\")"
      },
      {
        "command": "exec_shell(\"kubectl describe pod url-shorten-mongodb-<POD_SUFFIX> -n test-social-network\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Inspect the healthy MongoDB pod for comparison",
        "sequence_number": 6,
        "original_command": "exec_shell(\"kubectl describe pod url-shorten-mongodb-77894f9b76-tfdjt -n test-social-network\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "77894f9b76-tfdjt",
            "placeholder": "<POD_SUFFIX>",
            "position": 53
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs url-shorten-mongodb-<POD_SUFFIX> -n test-social-network | sed -n '1,120p'\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Review logs of the healthy pod showing TLS is off",
        "sequence_number": 7,
        "original_command": "exec_shell(\"kubectl logs url-shorten-mongodb-77894f9b76-tfdjt -n test-social-network | sed -n '1,120p'\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "77894f9b76-tfdjt",
            "placeholder": "<POD_SUFFIX>",
            "position": 45
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl get configmap url-shorten-mongodb -n test-social-network -o yaml\")",
        "type": "probe_command",
        "importance_score": 8,
        "description": "Inspect MongoDB ConfigMap (mongod.conf) which requires TLS and a certificateKeyFile",
        "sequence_number": 8,
        "original_command": "exec_shell(\"kubectl get configmap url-shorten-mongodb -n test-social-network -o yaml\")"
      },
      {
        "command": "exec_shell(\"kubectl exec -n test-social-network url-shorten-mongodb-<POD_SUFFIX> -- cat /social-network-microservices/config/mongod.conf\")",
        "type": "probe_command",
        "importance_score": 8,
        "description": "Read the effective mongod.conf in the healthy pod to confirm TLS is disabled",
        "sequence_number": 9,
        "original_command": "exec_shell(\"kubectl exec -n test-social-network url-shorten-mongodb-77894f9b76-tfdjt -- cat /social-network-microservices/config/mongod.conf\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "77894f9b76-tfdjt",
            "placeholder": "<POD_SUFFIX>",
            "position": 68
          }
        ]
      },
      {
        "command": "submit({\"system_level\": \"Application\", \"fault_type\": \"Misconfiguration\"})",
        "type": "execute_command",
        "importance_score": 10,
        "description": "Submit the final analysis identifying an application-level misconfiguration",
        "sequence_number": 10,
        "original_command": "submit({\"system_level\": \"Application\", \"fault_type\": \"Misconfiguration\"})"
      }
    ]
  },
  {
    "problem_id": "network_loss_hotel_res-detection-1",
    "key_commands": [
      {
        "command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "List all pods in the test-hotel-reservation namespace to verify component readiness and status.",
        "sequence_number": 1,
        "original_command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")"
      },
      {
        "command": "exec_shell(\"kubectl get svc -n test-hotel-reservation\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "List services to confirm Service IPs and ports, including the consul ClusterIP and port 8500.",
        "sequence_number": 2,
        "original_command": "exec_shell(\"kubectl get svc -n test-hotel-reservation\")"
      },
      {
        "command": "exec_shell(\"kubectl get deploy -n test-hotel-reservation -o wide\")",
        "type": "probe_command",
        "importance_score": 4,
        "description": "Check deployments for readiness/availability and images to ensure all components are up-to-date.",
        "sequence_number": 3,
        "original_command": "exec_shell(\"kubectl get deploy -n test-hotel-reservation -o wide\")"
      },
      {
        "command": "exec_shell(\"kubectl logs deploy/frontend -n test-hotel-reservation --tail=200\")",
        "type": "probe_command",
        "importance_score": 10,
        "description": "Inspect frontend logs which reveal repeated 'connect: connection refused' errors when contacting consul:8500, directly evidencing the network/connectivity anomaly.",
        "sequence_number": 4,
        "original_command": "exec_shell(\"kubectl logs deploy/frontend -n test-hotel-reservation --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl logs deploy/consul -n test-hotel-reservation --tail=200\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "Review consul server logs to validate its startup, leadership, and handling of health/service requests, corroborating connectivity behavior.",
        "sequence_number": 5,
        "original_command": "exec_shell(\"kubectl logs deploy/consul -n test-hotel-reservation --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl logs deploy/search -n test-hotel-reservation --tail=200\")",
        "type": "probe_command",
        "importance_score": 3,
        "description": "Check search service logs to confirm registration with consul, providing supporting evidence of service discovery health post-startup.",
        "sequence_number": 6,
        "original_command": "exec_shell(\"kubectl logs deploy/search -n test-hotel-reservation --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl logs deploy/recommendation -n test-hotel-reservation --tail=200\")",
        "type": "probe_command",
        "importance_score": 3,
        "description": "Check recommendation service logs to verify successful consul registration and normal operation.",
        "sequence_number": 7,
        "original_command": "exec_shell(\"kubectl logs deploy/recommendation -n test-hotel-reservation --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl logs deploy/profile -n test-hotel-reservation --tail=200\")",
        "type": "probe_command",
        "importance_score": 3,
        "description": "Inspect profile service logs to confirm it registers with consul successfully.",
        "sequence_number": 8,
        "original_command": "exec_shell(\"kubectl logs deploy/profile -n test-hotel-reservation --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl logs deploy/rate -n test-hotel-reservation --tail=200\")",
        "type": "probe_command",
        "importance_score": 3,
        "description": "Inspect rate service logs to validate service startup and consul registration state.",
        "sequence_number": 9,
        "original_command": "exec_shell(\"kubectl logs deploy/rate -n test-hotel-reservation --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl logs deploy/geo -n test-hotel-reservation --tail=200\")",
        "type": "probe_command",
        "importance_score": 3,
        "description": "Inspect geo service logs to confirm normal startup and consul registration.",
        "sequence_number": 10,
        "original_command": "exec_shell(\"kubectl logs deploy/geo -n test-hotel-reservation --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl logs deploy/reservation -n test-hotel-reservation --tail=200\")",
        "type": "probe_command",
        "importance_score": 3,
        "description": "Inspect reservation service logs for successful consul registration and normal operation.",
        "sequence_number": 11,
        "original_command": "exec_shell(\"kubectl logs deploy/reservation -n test-hotel-reservation --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl logs deploy/user -n test-hotel-reservation --tail=200\")",
        "type": "probe_command",
        "importance_score": 3,
        "description": "Inspect user service logs to verify successful consul registration, supporting overall service discovery health assessment.",
        "sequence_number": 12,
        "original_command": "exec_shell(\"kubectl logs deploy/user -n test-hotel-reservation --tail=200\")"
      }
    ]
  },
  {
    "problem_id": "noop_detection_astronomy_shop-1",
    "key_commands": [
      {
        "command": "exec_shell(\"kubectl get pods -n astronomy-shop\")",
        "type": "probe_command",
        "importance_score": 8,
        "description": "Lists all pods in the astronomy-shop namespace to identify any failing components.",
        "sequence_number": 1,
        "original_command": "exec_shell(\"kubectl get pods -n astronomy-shop\")"
      },
      {
        "command": "exec_shell(\"kubectl describe pod -n astronomy-shop fraud-detection-<POD_SUFFIX>\")",
        "type": "probe_command",
        "importance_score": 9,
        "description": "Inspects the failing fraud-detection pod for detailed status, events, and crash information (CrashLoopBackOff, exit code).",
        "sequence_number": 2,
        "original_command": "exec_shell(\"kubectl describe pod -n astronomy-shop fraud-detection-65868bcdb5-8cr69\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "65868bcdb5-8cr69",
            "placeholder": "<POD_SUFFIX>",
            "position": 67
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n astronomy-shop fraud-detection-<POD_SUFFIX> -<REPLICA_SUFFIX>\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Attempts to retrieve logs from the previous crash of the fraud-detection container to further diagnose the issue.",
        "sequence_number": 3,
        "original_command": "exec_shell(\"kubectl logs -n astronomy-shop fraud-detection-65868bcdb5-8cr69 --previous\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "65868bcdb5-8cr69",
            "placeholder": "<POD_SUFFIX>",
            "position": 59
          },
          {
            "type": "k8s_replicaset_suffix",
            "original": "-previous",
            "placeholder": "<REPLICA_SUFFIX>",
            "position": 73
          }
        ]
      },
      {
        "command": "submit(\"Yes\")",
        "type": "execute_command",
        "importance_score": 10,
        "description": "Submits the final decision indicating that an anomaly has been detected.",
        "sequence_number": 4,
        "original_command": "submit(\"Yes\")"
      }
    ]
  },
  {
    "problem_id": "wrong_bin_usage-analysis-1",
    "key_commands": [
      {
        "command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "List all pods in the namespace to verify service components are running.",
        "sequence_number": 1,
        "original_command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation deployment/profile --tail=200\")",
        "type": "probe_command",
        "importance_score": 10,
        "description": "Inspect profile service logs; reveals it is running the geo binary (cmd/geo), indicating wrong binary usage.",
        "sequence_number": 2,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation deployment/profile --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl describe deployment profile -n test-hotel-reservation\")",
        "type": "probe_command",
        "importance_score": 10,
        "description": "Describe the profile deployment; confirms container command is set to 'geo', pinpointing the misconfiguration.",
        "sequence_number": 3,
        "original_command": "exec_shell(\"kubectl describe deployment profile -n test-hotel-reservation\")"
      },
      {
        "command": "submit({\"system_level\": \"Application\", \"fault_type\": \"Misconfiguration\"})",
        "type": "execute_command",
        "importance_score": 8,
        "description": "Submit the root cause analysis identifying an application-level misconfiguration.",
        "sequence_number": 4,
        "original_command": "submit({\"system_level\": \"Application\", \"fault_type\": \"Misconfiguration\"})"
      }
    ]
  },
  {
    "problem_id": "pod_failure_hotel_res-detection-1",
    "key_commands": [
      {
        "command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "List all pods in the namespace to identify the failing pod with RunContainerError.",
        "sequence_number": 1,
        "original_command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")"
      },
      {
        "command": "exec_shell(\"kubectl describe pod user-<POD_SUFFIX> -n test-hotel-reservation\")",
        "type": "probe_command",
        "importance_score": 9,
        "description": "Inspect the failing pod to obtain detailed error messages indicating the container cannot execute the specified command.",
        "sequence_number": 2,
        "original_command": "exec_shell(\"kubectl describe pod user-66d5d6f874-wzrst -n test-hotel-reservation\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "66d5d6f874-wzrst",
            "placeholder": "<POD_SUFFIX>",
            "position": 38
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl get deploy user -n test-hotel-reservation -o yaml\")",
        "type": "probe_command",
        "importance_score": 8,
        "description": "Retrieve the deployment configuration to confirm the misconfigured container command causing the startup failure.",
        "sequence_number": 3,
        "original_command": "exec_shell(\"kubectl get deploy user -n test-hotel-reservation -o yaml\")"
      },
      {
        "command": "submit(\"Yes\")",
        "type": "execute_command",
        "importance_score": 10,
        "description": "Submit the final decision indicating that an anomaly has been detected.",
        "sequence_number": 4,
        "original_command": "submit(\"Yes\")"
      }
    ]
  },
  {
    "problem_id": "astronomy_shop_ad_service_failure-localization-1",
    "key_commands": [
      {
        "command": "exec_shell(\"kubectl get pods -n astronomy-shop\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "List all pods in the astronomy-shop namespace to identify failing components.",
        "sequence_number": 1,
        "original_command": "exec_shell(\"kubectl get pods -n astronomy-shop\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n astronomy-shop fraud-detection-<POD_SUFFIX> -<REPLICA_SUFFIX> --all-containers=true --tail=200\")",
        "type": "probe_command",
        "importance_score": 3,
        "description": "Attempt to retrieve previous logs from all containers of the fraud-detection pod to check prior failures.",
        "sequence_number": 2,
        "original_command": "exec_shell(\"kubectl logs -n astronomy-shop fraud-detection-65868bcdb5-qsmzg --previous --all-containers=true --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "65868bcdb5-qsmzg",
            "placeholder": "<POD_SUFFIX>",
            "position": 59
          },
          {
            "type": "k8s_replicaset_suffix",
            "original": "-previous",
            "placeholder": "<REPLICA_SUFFIX>",
            "position": 73
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n astronomy-shop fraud-detection-<POD_SUFFIX> --all-containers=true --tail=200\")",
        "type": "probe_command",
        "importance_score": 8,
        "description": "Fetch current logs from all containers of the fraud-detection pod to diagnose runtime issues.",
        "sequence_number": 3,
        "original_command": "exec_shell(\"kubectl logs -n astronomy-shop fraud-detection-65868bcdb5-qsmzg --all-containers=true --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "65868bcdb5-qsmzg",
            "placeholder": "<POD_SUFFIX>",
            "position": 59
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl describe pod -n astronomy-shop fraud-detection-<POD_SUFFIX>\")",
        "type": "probe_command",
        "importance_score": 8,
        "description": "Describe the fraud-detection pod to inspect container state, exit codes, resource limits, and events.",
        "sequence_number": 4,
        "original_command": "exec_shell(\"kubectl describe pod -n astronomy-shop fraud-detection-65868bcdb5-qsmzg\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "65868bcdb5-qsmzg",
            "placeholder": "<POD_SUFFIX>",
            "position": 67
          }
        ]
      },
      {
        "command": "submit([\"fraud<REPLICA_SUFFIX>\"])",
        "type": "execute_command",
        "importance_score": 10,
        "description": "Submit the identified faulty component(s) to the orchestrator.",
        "sequence_number": 5,
        "original_command": "submit([\"fraud-detection\"])",
        "placeholders_used": [
          {
            "type": "k8s_replicaset_suffix",
            "original": "-detection",
            "placeholder": "<REPLICA_SUFFIX>",
            "position": 14
          }
        ]
      }
    ]
  },
  {
    "problem_id": "astronomy_shop_kafka_queue_problems-detection-1",
    "key_commands": [
      {
        "command": "exec_shell(\"kubectl get pods -n astronomy-shop\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Lists all pods in the astronomy-shop namespace to spot abnormal statuses or restarts.",
        "sequence_number": 1,
        "original_command": "exec_shell(\"kubectl get pods -n astronomy-shop\")"
      },
      {
        "command": "exec_shell(\"kubectl describe pod -n astronomy-shop fraud-detection-<POD_SUFFIX>; echo '--- logs (previous) fraud ---'; kubectl logs -n astronomy-shop fraud-detection-6586<POD_SUFFIX>revious --all-containers; echo '--- logs (current) fraud ---'; kubectl logs -n astronomy-shop fraud-detection-65868bcd<POD_SUFFIX>ontainers --tail=200; echo '=== AD POD ==='; kubectl describe pod -n astronomy-shop ad-94bd576b5-66<POD_SUFFIX>logs (previous) ad ---'; kubectl logs -n astronomy-shop ad-94bd576b5-66bp2<POD_SUFFIX>ll-containers; echo '--- logs (current) ad ---'; kubectl logs -n astronomy-shop ad-94bd576b5-66bp2 --<POD_SUFFIX>--tail=200; echo '=== FLAGD INIT POD ==='; kubectl describe pod -n astronomy-shop flagd-589cb88bc7-qccf8\")<POD_SUFFIX>",
        "type": "probe_command",
        "importance_score": 7,
        "description": "Describes and gathers logs for fraud-detection, ad, and flagd pods to investigate restarts and potential Kafka-related issues.",
        "sequence_number": 2,
        "original_command": "exec_shell(\"kubectl describe pod -n astronomy-shop fraud-detection-65868bcdb5-vg2m9; echo '--- logs (previous) fraud ---'; kubectl logs -n astronomy-shop fraud-detection-65868bcdb5-vg2m9 --previous --all-containers; echo '--- logs (current) fraud ---'; kubectl logs -n astronomy-shop fraud-detection-65868bcdb5-vg2m9 --all-containers --tail=200; echo '=== AD POD ==='; kubectl describe pod -n astronomy-shop ad-94bd576b5-66bp2; echo '--- logs (previous) ad ---'; kubectl logs -n astronomy-shop ad-94bd576b5-66bp2 --previous --all-containers; echo '--- logs (current) ad ---'; kubectl logs -n astronomy-shop ad-94bd576b5-66bp2 --all-containers --tail=200; echo '=== FLAGD INIT POD ==='; kubectl describe pod -n astronomy-shop flagd-589cb88bc7-qccf8\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "65868bcdb5-vg2m9",
            "placeholder": "<POD_SUFFIX>",
            "position": 67
          },
          {
            "type": "k8s_pod_suffix",
            "original": "65868bcdb5-vg2m9",
            "placeholder": "<POD_SUFFIX>",
            "position": 170
          },
          {
            "type": "k8s_pod_suffix",
            "original": "65868bcdb5-vg2m9",
            "placeholder": "<POD_SUFFIX>",
            "position": 300
          },
          {
            "type": "k8s_pod_suffix",
            "original": "94bd576b5-66bp2",
            "placeholder": "<POD_SUFFIX>",
            "position": 411
          },
          {
            "type": "k8s_pod_suffix",
            "original": "94bd576b5-66bp2",
            "placeholder": "<POD_SUFFIX>",
            "position": 497
          },
          {
            "type": "k8s_pod_suffix",
            "original": "94bd576b5-66bp2",
            "placeholder": "<POD_SUFFIX>",
            "position": 610
          },
          {
            "type": "k8s_pod_suffix",
            "original": "589cb88bc7-qccf8",
            "placeholder": "<POD_SUFFIX>",
            "position": 731
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl describe pod -n astronomy-shop ad-<POD_SUFFIX>; echo '--- ad logs ---'; kubectl logs -n astronomy-shop ad-94b<POD_SUFFIX>all<REPLICA_SUFFIX> --tail=200; echo '=== fraud ==='; kubectl describe pod -n astronomy-shop fraud-detection-65868b<POD_SUFFIX> '--- fraud logs ---'; kubectl logs -n astronomy-shop fraud-detection-65868bcdb5<POD_SUFFIX>tainers --tail=200; echo '=== flagd new ==='; kubectl describe pod -n astronomy-shop flagd-589cb88bc7-qcc<POD_SUFFIX>ents ==='; kubectl get events -n astronomy-shop --sort-by=.metadata.creationTimestamp | tail -n 50\")",
        "type": "probe_command",
        "importance_score": 9,
        "description": "Collects detailed pod descriptions, recent logs, and recent namespace events to confirm CrashLoopBackOff and Kafka readiness signals for fraud-detection.",
        "sequence_number": 3,
        "original_command": "exec_shell(\"kubectl describe pod -n astronomy-shop ad-94bd576b5-66bp2; echo '--- ad logs ---'; kubectl logs -n astronomy-shop ad-94bd576b5-66bp2 --all-containers --tail=200; echo '=== fraud ==='; kubectl describe pod -n astronomy-shop fraud-detection-65868bcdb5-vg2m9; echo '--- fraud logs ---'; kubectl logs -n astronomy-shop fraud-detection-65868bcdb5-vg2m9 --all-containers --tail=200; echo '=== flagd new ==='; kubectl describe pod -n astronomy-shop flagd-589cb88bc7-qccf8; echo '=== events ==='; kubectl get events -n astronomy-shop --sort-by=.metadata.creationTimestamp | tail -n 50\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "94bd576b5-66bp2",
            "placeholder": "<POD_SUFFIX>",
            "position": 54
          },
          {
            "type": "k8s_pod_suffix",
            "original": "94bd576b5-66bp2",
            "placeholder": "<POD_SUFFIX>",
            "position": 129
          },
          {
            "type": "k8s_pod_suffix",
            "original": "65868bcdb5-vg2m9",
            "placeholder": "<POD_SUFFIX>",
            "position": 251
          },
          {
            "type": "k8s_pod_suffix",
            "original": "65868bcdb5-vg2m9",
            "placeholder": "<POD_SUFFIX>",
            "position": 343
          },
          {
            "type": "k8s_pod_suffix",
            "original": "589cb88bc7-qccf8",
            "placeholder": "<POD_SUFFIX>",
            "position": 460
          },
          {
            "type": "k8s_replicaset_suffix",
            "original": "-containers",
            "placeholder": "<REPLICA_SUFFIX>",
            "position": 144
          }
        ]
      },
      {
        "command": "submit(\"Yes\")",
        "type": "execute_command",
        "importance_score": 10,
        "description": "Submits the final decision that anomalies are detected.",
        "sequence_number": 4,
        "original_command": "submit(\"Yes\")"
      }
    ]
  },
  {
    "problem_id": "container_kill-localization",
    "key_commands": [
      {
        "command": "submit([])",
        "type": "execute_command",
        "importance_score": 10,
        "description": "Submit the final conclusion that no faulty components were detected.",
        "sequence_number": 1,
        "original_command": "submit([])"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation deploy/reservation --tail=200\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Check reservation service logs for DB/cache setup and Consul registration.",
        "sequence_number": 2,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation deploy/reservation --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation deploy/user --tail=200\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Check user service logs to verify DB init and Consul registration.",
        "sequence_number": 3,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation deploy/user --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation deploy/rate --tail=200\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Check rate service logs for DB/cache setup and Consul registration.",
        "sequence_number": 4,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation deploy/rate --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation deploy/profile --tail=200\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Check profile service logs for DB and cache initialization and Consul registration.",
        "sequence_number": 5,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation deploy/profile --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation deploy/consul --tail=200\")",
        "type": "probe_command",
        "importance_score": 8,
        "description": "Examine Consul agent logs to verify leader election, health endpoints, and service registration events.",
        "sequence_number": 6,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation deploy/consul --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation deploy/recommendation --tail=200\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Inspect recommendation service logs for DB initialization and Consul registration status.",
        "sequence_number": 7,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation deploy/recommendation --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation deploy/frontend --tail=200 | tail -n +1 && kubectl logs -n test-hotel-reservation deploy/search --tail=200 | tail -n +1 && kubectl logs -n test-hotel-reservation deploy/consul --tail=50 | tail -n +1 && kubectl get pods -n test-hotel-reservation -o wide\")",
        "type": "probe_command",
        "importance_score": 3,
        "description": "Aggregate logs from related services and display pod details to cross-check overall system health and timing around the geo restart.",
        "sequence_number": 8,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation deploy/frontend --tail=200 | tail -n +1 && kubectl logs -n test-hotel-reservation deploy/search --tail=200 | tail -n +1 && kubectl logs -n test-hotel-reservation deploy/consul --tail=50 | tail -n +1 && kubectl get pods -n test-hotel-reservation -o wide\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation deploy/frontend --tail=200\")",
        "type": "probe_command",
        "importance_score": 8,
        "description": "Check frontend logs for client-visible errors (e.g., Consul connection refused) indicating system health issues.",
        "sequence_number": 9,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation deploy/frontend --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl get endpoints -n test-hotel-reservation -o wide\")",
        "type": "probe_command",
        "importance_score": 4,
        "description": "Verify service endpoints to ensure backing pods are registered and discoverable.",
        "sequence_number": 10,
        "original_command": "exec_shell(\"kubectl get endpoints -n test-hotel-reservation -o wide\")"
      },
      {
        "command": "exec_shell(\"kubectl describe pod -n test-hotel-reservation -l io.kompose.service=geo\")",
        "type": "probe_command",
        "importance_score": 10,
        "description": "Describe the geo pod to confirm container termination details (Last State Exit Code 137) indicating a container kill.",
        "sequence_number": 11,
        "original_command": "exec_shell(\"kubectl describe pod -n test-hotel-reservation -l io.kompose.service=geo\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation deploy/search --tail=200\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Inspect search service logs to confirm healthy initialization and Consul registration.",
        "sequence_number": 12,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation deploy/search --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation deploy/geo --tail=200\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "Retrieve recent application logs for the geo deployment to check runtime behavior around the restart.",
        "sequence_number": 13,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation deploy/geo --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl get svc -n test-hotel-reservation -o wide\")",
        "type": "probe_command",
        "importance_score": 4,
        "description": "List services to confirm service exposure and selectors for context.",
        "sequence_number": 14,
        "original_command": "exec_shell(\"kubectl get svc -n test-hotel-reservation -o wide\")"
      },
      {
        "command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")",
        "type": "probe_command",
        "importance_score": 9,
        "description": "List all pods in the namespace to identify abnormal statuses or restarts (geo shows a recent restart).",
        "sequence_number": 15,
        "original_command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")"
      }
    ]
  },
  {
    "problem_id": "k8s_target_port-misconfig-mitigation-3",
    "key_commands": [
      {
        "command": "exec_shell(\"kubectl get pods -n test-social-network\")",
        "type": "probe_command",
        "importance_score": 3,
        "description": "List pods in the namespace to confirm workloads are running and identify target components.",
        "sequence_number": 1,
        "original_command": "exec_shell(\"kubectl get pods -n test-social-network\")"
      },
      {
        "command": "exec_shell(\"kubectl get svc,ingress -n test-social-network -o wide\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "List Services and Ingress resources to inspect service ports and potential misconfigurations.",
        "sequence_number": 2,
        "original_command": "exec_shell(\"kubectl get svc,ingress -n test-social-network -o wide\")"
      },
      {
        "command": "exec_shell(\"kubectl get endpoints -n test-social-network\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "Check Endpoints to see actual target IP:port mappings for Services and detect mismatched targetPort.",
        "sequence_number": 3,
        "original_command": "exec_shell(\"kubectl get endpoints -n test-social-network\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-social-network deploy/compose-post-service --tail=200\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Review client-side errors indicating connection refused to the post-storage-service, evidencing the impact.",
        "sequence_number": 4,
        "original_command": "exec_shell(\"kubectl logs -n test-social-network deploy/compose-post-service --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl describe svc post-storage-service -n test-social-network\")",
        "type": "probe_command",
        "importance_score": 8,
        "description": "Describe the post-storage-service to confirm the Service targetPort is misconfigured (set to 9999 instead of 9090).",
        "sequence_number": 5,
        "original_command": "exec_shell(\"kubectl describe svc post-storage-service -n test-social-network\")"
      },
      {
        "command": "exec_shell(\"kubectl describe pod -n test-social-network -l service=post-storage-service\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "Describe the backing pod to verify the container listens on port 9090, confirming the mismatch with Service targetPort.",
        "sequence_number": 6,
        "original_command": "exec_shell(\"kubectl describe pod -n test-social-network -l service=post-storage-service\")"
      },
      {
        "command": "exec_shell(\"kubectl get configmap post-storage-service -n test-social-network -o yaml\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Inspect the service configuration to verify expected port (9090) and corroborate the correct targetPort value.",
        "sequence_number": 7,
        "original_command": "exec_shell(\"kubectl get configmap post-storage-service -n test-social-network -o yaml\")"
      },
      {
        "command": "exec_shell(\"kubectl patch service post-storage-service -n test-social-network --type='json' -p='[{\\\"op\\\":\\\"replace\\\",\\\"path\\\":\\\"/spec/ports/0/targetPort\\\",\\\"value\\\":9090}]'\")",
        "type": "execute_command",
        "importance_score": 10,
        "description": "Patch the Service to replace the incorrect targetPort with 9090, directly fixing the routing issue.",
        "sequence_number": 8,
        "original_command": "exec_shell(\"kubectl patch service post-storage-service -n test-social-network --type='json' -p='[{\\\"op\\\":\\\"replace\\\",\\\"path\\\":\\\"/spec/ports/0/targetPort\\\",\\\"value\\\":9090}]'\")"
      },
      {
        "command": "exec_shell(\"kubectl get endpoints post-storage-service -n test-social-network -o wide\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "Verify that the Service now routes to the correct target port by checking the updated Endpoints.",
        "sequence_number": 9,
        "original_command": "exec_shell(\"kubectl get endpoints post-storage-service -n test-social-network -o wide\")"
      }
    ]
  },
  {
    "problem_id": "container_kill-analysis",
    "key_commands": [
      {
        "command": "submit({\"system_level\": \"Virtualization\", \"fault_type\": \"Operation Error\"})",
        "type": "execute_command",
        "importance_score": 10,
        "description": "Submit the final RCA indicating a virtualization-layer operational error due to injected pod chaos.",
        "sequence_number": 1,
        "original_command": "submit({\"system_level\": \"Virtualization\", \"fault_type\": \"Operation Error\"})"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation geo-<POD_SUFFIX> --tail=200\")",
        "type": "probe_command",
        "importance_score": 4,
        "description": "Inspect current logs for geo pod to confirm recovery and registration.",
        "sequence_number": 2,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation geo-84fbc958c7-m9zrw --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "84fbc958c7-m9zrw",
            "placeholder": "<POD_SUFFIX>",
            "position": 55
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation user-<POD_SUFFIX> --tail=200\")",
        "type": "probe_command",
        "importance_score": 3,
        "description": "Check user service logs for normal startup behavior.",
        "sequence_number": 3,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation user-66d5d6f874-nv4g6 --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "66d5d6f874-nv4g6",
            "placeholder": "<POD_SUFFIX>",
            "position": 56
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation rate-<POD_SUFFIX> --tail=200\")",
        "type": "probe_command",
        "importance_score": 3,
        "description": "Check rate service logs for normal startup behavior.",
        "sequence_number": 4,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation rate-7bdc978679-xmn4c --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "7bdc978679-xmn4c",
            "placeholder": "<POD_SUFFIX>",
            "position": 56
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation reservation-<POD_SUFFIX> --tail=200\")",
        "type": "probe_command",
        "importance_score": 3,
        "description": "Check reservation service logs for normal startup behavior.",
        "sequence_number": 5,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation reservation-78c9f7976b-58z95 --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "78c9f7976b-58z95",
            "placeholder": "<POD_SUFFIX>",
            "position": 63
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation profile-<POD_SUFFIX> --tail=200\")",
        "type": "probe_command",
        "importance_score": 3,
        "description": "Check profile service logs for normal startup behavior.",
        "sequence_number": 6,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation profile-8b6dd7c6c-48fcm --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "8b6dd7c6c-48fcm",
            "placeholder": "<POD_SUFFIX>",
            "position": 59
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation recommendation-<POD_SUFFIX> --tail=200\")",
        "type": "probe_command",
        "importance_score": 3,
        "description": "Check recommendation service logs for normal startup behavior.",
        "sequence_number": 7,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation recommendation-6879fb56bf-65r8n --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "6879fb56bf-65r8n",
            "placeholder": "<POD_SUFFIX>",
            "position": 66
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation consul-<POD_SUFFIX> --tail=200\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Review Consul agent logs to verify health and service registration requests.",
        "sequence_number": 8,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation consul-78c8d79bb-4sbzv --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "78c8d79bb-4sbzv",
            "placeholder": "<POD_SUFFIX>",
            "position": 58
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation frontend-<POD_SUFFIX> --tail=200\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Check frontend logs which showed early Consul connection refused errors, indicating transient issues.",
        "sequence_number": 9,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation frontend-7fc7ddc9db-zln7k --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "7fc7ddc9db-zln7k",
            "placeholder": "<POD_SUFFIX>",
            "position": 60
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl get events -n test-hotel-reservation --sort-by=.metadata.creationTimestamp\")",
        "type": "probe_command",
        "importance_score": 10,
        "description": "Inspect Kubernetes events to determine the cause of the restart; shows a PodChaos container-kill applied to the geo/hotel-reserv-geo container.",
        "sequence_number": 10,
        "original_command": "exec_shell(\"kubectl get events -n test-hotel-reservation --sort-by=.metadata.creationTimestamp\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation search-<POD_SUFFIX> --tail=200\")",
        "type": "probe_command",
        "importance_score": 4,
        "description": "Inspect search service logs for startup and Consul registration status.",
        "sequence_number": 11,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation search-5c64c8f5bc-m9dlz --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "5c64c8f5bc-m9dlz",
            "placeholder": "<POD_SUFFIX>",
            "position": 58
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation geo-<POD_SUFFIX> -<REPLICA_SUFFIX> --tail=200\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Fetch previous container logs for the geo pod to investigate the cause of the recent restart.",
        "sequence_number": 12,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation geo-84fbc958c7-m9zrw --previous --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "84fbc958c7-m9zrw",
            "placeholder": "<POD_SUFFIX>",
            "position": 55
          },
          {
            "type": "k8s_replicaset_suffix",
            "original": "-previous",
            "placeholder": "<REPLICA_SUFFIX>",
            "position": 69
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl get svc -n test-hotel-reservation\")",
        "type": "probe_command",
        "importance_score": 3,
        "description": "List services to verify service endpoints and ports.",
        "sequence_number": 13,
        "original_command": "exec_shell(\"kubectl get svc -n test-hotel-reservation\")"
      },
      {
        "command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")",
        "type": "probe_command",
        "importance_score": 8,
        "description": "List all pods in the namespace to identify anomalies such as restarts; reveals the geo pod had a recent restart indicating an issue.",
        "sequence_number": 14,
        "original_command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")"
      }
    ]
  },
  {
    "problem_id": "container_kill-detection-1",
    "key_commands": [
      {
        "command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "List all pods in the namespace to spot anomalies such as restarts; identifies the geo pod with a recent restart.",
        "sequence_number": 1,
        "original_command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation geo-<POD_SUFFIX> -<REPLICA_SUFFIX>\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Fetch logs from the previous instance of the geo container to investigate the cause of the prior termination.",
        "sequence_number": 2,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation geo-84fbc958c7-d9d9q --previous\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "84fbc958c7-d9d9q",
            "placeholder": "<POD_SUFFIX>",
            "position": 55
          },
          {
            "type": "k8s_replicaset_suffix",
            "original": "-previous",
            "placeholder": "<REPLICA_SUFFIX>",
            "position": 69
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl describe pod -n test-hotel-reservation geo-<POD_SUFFIX>\")",
        "type": "probe_command",
        "importance_score": 9,
        "description": "Describe the geo pod to inspect detailed state; shows Last State Terminated with Exit Code 137 indicating a container kill.",
        "sequence_number": 3,
        "original_command": "exec_shell(\"kubectl describe pod -n test-hotel-reservation geo-84fbc958c7-d9d9q\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "84fbc958c7-d9d9q",
            "placeholder": "<POD_SUFFIX>",
            "position": 63
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl get events -n test-hotel-reservation --sort-by=.lastTimestamp\")",
        "type": "probe_command",
        "importance_score": 10,
        "description": "Retrieve recent namespace events; confirms podchaos/container-kill was applied to the geo pod, directly evidencing the anomaly.",
        "sequence_number": 4,
        "original_command": "exec_shell(\"kubectl get events -n test-hotel-reservation --sort-by=.lastTimestamp\")"
      }
    ]
  },
  {
    "problem_id": "user_unregistered_mongodb-mitigation-1",
    "key_commands": [
      {
        "command": "exec_shell(\"kubectl get configmaps -n test-hotel-reservation -o wide\")",
        "type": "probe_command",
        "importance_score": 2,
        "description": "List all configmaps to understand available initialization/failure scripts",
        "sequence_number": 1,
        "original_command": "exec_shell(\"kubectl get configmaps -n test-hotel-reservation -o wide\")"
      },
      {
        "command": "exec_shell(\"kubectl get svc -n test-hotel-reservation | sed -n '1p;/mongodb-geo/p;/geo/p'\")",
        "type": "probe_command",
        "importance_score": 2,
        "description": "Verify service endpoints for geo and its MongoDB backend",
        "sequence_number": 2,
        "original_command": "exec_shell(\"kubectl get svc -n test-hotel-reservation | sed -n '1p;/mongodb-geo/p;/geo/p'\")"
      },
      {
        "command": "exec_shell(\"kubectl get svc -n test-hotel-reservation | sed -n \\'1p;/mongodb-geo/p;/geo/p\\'\")",
        "type": "probe_command",
        "importance_score": 2,
        "description": "Verify service endpoints for geo and mongodb-geo",
        "sequence_number": 3,
        "original_command": "exec_shell(\"kubectl get svc -n test-hotel-reservation | sed -n \\'1p;/mongodb-geo/p;/geo/p\\'\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation geo-<POD_SUFFIX> --tail=100\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Re-check geo service logs to assess if the mitigation affected the error",
        "sequence_number": 4,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation geo-84fbc958c7-m8jrc --tail=100\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "84fbc958c7-m8jrc",
            "placeholder": "<POD_SUFFIX>",
            "position": 55
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation deploy/profile\")",
        "type": "probe_command",
        "importance_score": 3,
        "description": "Check profile service logs to confirm successful DB connection pattern for comparison",
        "sequence_number": 5,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation deploy/profile\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation deploy/mongodb-geo --tail=200\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Check MongoDB logs to confirm access control state and readiness",
        "sequence_number": 6,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation deploy/mongodb-geo --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl get deploy -n test-hotel-reservation mongodb-profile -o yaml\")",
        "type": "probe_command",
        "importance_score": 3,
        "description": "Compare with another MongoDB-backed service to understand differences (no auth used there)",
        "sequence_number": 7,
        "original_command": "exec_shell(\"kubectl get deploy -n test-hotel-reservation mongodb-profile -o yaml\")"
      },
      {
        "command": "exec_shell(\"kubectl patch deploy -n test-hotel-reservation mongodb-geo --type='json' -p='[{\\\"op\\\":\\\"remove\\\",\\\"path\\\":\\\"/spec/template/spec/containers/0/args\\\"}]'\")",
        "type": "execute_command",
        "importance_score": 5,
        "description": "Attempt mitigation by removing '--auth' from MongoDB deployment to disable authentication",
        "sequence_number": 8,
        "original_command": "exec_shell(\"kubectl patch deploy -n test-hotel-reservation mongodb-geo --type='json' -p='[{\\\"op\\\":\\\"remove\\\",\\\"path\\\":\\\"/spec/template/spec/containers/0/args\\\"}]'\")"
      },
      {
        "command": "exec_shell(\"kubectl exec -n test-hotel-reservation deploy/mongodb-geo -- mongo admin --quiet --eval 'db.getUsers()'\")",
        "type": "probe_command",
        "importance_score": 8,
        "description": "Query MongoDB to verify existing users and detect missing/downgraded admin",
        "sequence_number": 9,
        "original_command": "exec_shell(\"kubectl exec -n test-hotel-reservation deploy/mongodb-geo -- mongo admin --quiet --eval 'db.getUsers()'\")"
      },
      {
        "command": "exec_shell(\"kubectl get configmap -n test-hotel-reservation failure-admin-geo -o yaml\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Inspect failure/mitigation scripts indicating admin privilege changes for MongoDB",
        "sequence_number": 10,
        "original_command": "exec_shell(\"kubectl get configmap -n test-hotel-reservation failure-admin-geo -o yaml\")"
      },
      {
        "command": "exec_shell(\"kubectl patch deploy -n test-hotel-reservation mongodb-geo --type=\\'json\\' -p=\\'[{\\\\\"op\\\\\":\\\\\"remove\\\\\",\\\\\"path\\\\\":\\\\\"/spec/template/spec/containers/0/args\\\\\"}]\\'\")",
        "type": "execute_command",
        "importance_score": 10,
        "description": "Mitigation: remove --auth argument from mongodb-geo deployment to disable authentication and resolve geo connection failures",
        "sequence_number": 11,
        "original_command": "exec_shell(\"kubectl patch deploy -n test-hotel-reservation mongodb-geo --type=\\'json\\' -p=\\'[{\\\\\"op\\\\\":\\\\\"remove\\\\\",\\\\\"path\\\\\":\\\\\"/spec/template/spec/containers/0/args\\\\\"}]\\'\")"
      },
      {
        "command": "exec_shell(\"kubectl get configmap -n test-hotel-reservation mongo-geo-script -o yaml\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Inspect initialization script that creates users/roles in MongoDB",
        "sequence_number": 12,
        "original_command": "exec_shell(\"kubectl get configmap -n test-hotel-reservation mongo-geo-script -o yaml\")"
      },
      {
        "command": "exec_shell(\"kubectl get deploy -n test-hotel-reservation mongodb-geo -o yaml\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "Review MongoDB deployment for geo to check authentication args and config mounts",
        "sequence_number": 13,
        "original_command": "exec_shell(\"kubectl get deploy -n test-hotel-reservation mongodb-geo -o yaml\")"
      },
      {
        "command": "exec_shell(\"kubectl get deploy -n test-hotel-reservation geo -o yaml\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Review geo service deployment configuration for runtime parameters",
        "sequence_number": 14,
        "original_command": "exec_shell(\"kubectl get deploy -n test-hotel-reservation geo -o yaml\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation geo-<POD_SUFFIX> -<REPLICA_SUFFIX>\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "Fetch previous container logs to reveal the crash reason (MongoDB auth failure)",
        "sequence_number": 15,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation geo-84fbc958c7-m8jrc --previous\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "84fbc958c7-m8jrc",
            "placeholder": "<POD_SUFFIX>",
            "position": 55
          },
          {
            "type": "k8s_replicaset_suffix",
            "original": "-previous",
            "placeholder": "<REPLICA_SUFFIX>",
            "position": 69
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl describe pod -n test-hotel-reservation geo-<POD_SUFFIX>\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Inspect detailed status and recent events of the crashing geo pod",
        "sequence_number": 16,
        "original_command": "exec_shell(\"kubectl describe pod -n test-hotel-reservation geo-84fbc958c7-m8jrc\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "84fbc958c7-m8jrc",
            "placeholder": "<POD_SUFFIX>",
            "position": 63
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "List all pods in the namespace to identify failing components",
        "sequence_number": 17,
        "original_command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")"
      }
    ]
  },
  {
    "problem_id": "pod_failure_hotel_res-localization-1",
    "key_commands": [
      {
        "command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "Lists all pods in the test-hotel-reservation namespace to identify failing components.",
        "sequence_number": 1,
        "original_command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")"
      },
      {
        "command": "exec_shell(\"kubectl describe pod user-<POD_SUFFIX> -n test-hotel-reservation\")",
        "type": "probe_command",
        "importance_score": 9,
        "description": "Inspects the failing user pod to determine the root cause (RunContainerError due to missing executable).",
        "sequence_number": 2,
        "original_command": "exec_shell(\"kubectl describe pod user-66d5d6f874-465dq -n test-hotel-reservation\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "66d5d6f874-465dq",
            "placeholder": "<POD_SUFFIX>",
            "position": 38
          }
        ]
      },
      {
        "command": "submit([\"user\"])",
        "type": "execute_command",
        "importance_score": 10,
        "description": "Submits the identified faulty component (user) as the root cause.",
        "sequence_number": 3,
        "original_command": "submit([\"user\"])"
      }
    ]
  },
  {
    "problem_id": "redeploy_without_PV-detection-1",
    "key_commands": [
      {
        "command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "List all pods in the namespace to verify component readiness and status.",
        "sequence_number": 1,
        "original_command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")"
      },
      {
        "command": "exec_shell(\"kubectl get svc -n test-hotel-reservation\")",
        "type": "probe_command",
        "importance_score": 4,
        "description": "List services to confirm service exposure, ClusterIPs, and ports.",
        "sequence_number": 2,
        "original_command": "exec_shell(\"kubectl get svc -n test-hotel-reservation\")"
      },
      {
        "command": "exec_shell(\"kubectl get deploy -n test-hotel-reservation -o wide\")",
        "type": "probe_command",
        "importance_score": 4,
        "description": "Show deployments with details like container images and selectors to verify rollout state.",
        "sequence_number": 3,
        "original_command": "exec_shell(\"kubectl get deploy -n test-hotel-reservation -o wide\")"
      },
      {
        "command": "exec_shell(\"kubectl get events -n test-hotel-reservation --sort-by=.lastTimestamp\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Review recent namespace events in chronological order to surface warnings or provisioning issues.",
        "sequence_number": 4,
        "original_command": "exec_shell(\"kubectl get events -n test-hotel-reservation --sort-by=.lastTimestamp\")"
      },
      {
        "command": "exec_shell(\"kubectl get endpoints -n test-hotel-reservation\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Check service endpoints to ensure backing pod IP:ports are registered and routable.",
        "sequence_number": 5,
        "original_command": "exec_shell(\"kubectl get endpoints -n test-hotel-reservation\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation frontend-<POD_SUFFIX> --tail=200\")",
        "type": "probe_command",
        "importance_score": 10,
        "description": "Inspect frontend logs; reveals multiple 'connection refused' errors to consul:8500 indicating a service discovery anomaly.",
        "sequence_number": 6,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation frontend-7fc7ddc9db-kvh6k --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "7fc7ddc9db-kvh6k",
            "placeholder": "<POD_SUFFIX>",
            "position": 60
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation consul-<POD_SUFFIX> --tail=200\")",
        "type": "probe_command",
        "importance_score": 8,
        "description": "Inspect Consul agent logs to correlate its availability and health with client connection errors.",
        "sequence_number": 7,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation consul-78c8d79bb-twdt9 --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "78c8d79bb-twdt9",
            "placeholder": "<POD_SUFFIX>",
            "position": 58
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation search-<POD_SUFFIX> --tail=200\")",
        "type": "probe_command",
        "importance_score": 4,
        "description": "Check search service logs to confirm Consul registration and rule out broader service issues.",
        "sequence_number": 8,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation search-5c64c8f5bc-wbgf4 --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "5c64c8f5bc-wbgf4",
            "placeholder": "<POD_SUFFIX>",
            "position": 58
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation profile-<POD_SUFFIX> --tail=200\")",
        "type": "probe_command",
        "importance_score": 4,
        "description": "Check profile service logs to verify DB connectivity and Consul registration status.",
        "sequence_number": 9,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation profile-8b6dd7c6c-fh2lm --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "8b6dd7c6c-fh2lm",
            "placeholder": "<POD_SUFFIX>",
            "position": 59
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation rate-<POD_SUFFIX> --tail=200\")",
        "type": "probe_command",
        "importance_score": 4,
        "description": "Review rate service logs for successful DB initialization and Consul registration.",
        "sequence_number": 10,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation rate-7bdc978679-sscd8 --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "7bdc978679-sscd8",
            "placeholder": "<POD_SUFFIX>",
            "position": 56
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation recommendation-<POD_SUFFIX> --tail=200\")",
        "type": "probe_command",
        "importance_score": 4,
        "description": "Review recommendation service logs to verify DB initialization and Consul registration.",
        "sequence_number": 11,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation recommendation-6879fb56bf-rwrcm --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "6879fb56bf-rwrcm",
            "placeholder": "<POD_SUFFIX>",
            "position": 66
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation reservation-<POD_SUFFIX> --tail=200\")",
        "type": "probe_command",
        "importance_score": 4,
        "description": "Review reservation service logs to confirm DB initialization and Consul registration.",
        "sequence_number": 12,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation reservation-78c9f7976b-57b6l --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "78c9f7976b-57b6l",
            "placeholder": "<POD_SUFFIX>",
            "position": 63
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation geo-<POD_SUFFIX> --tail=200\")",
        "type": "probe_command",
        "importance_score": 4,
        "description": "Review geo service logs to verify DB initialization and Consul registration.",
        "sequence_number": 13,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation geo-84fbc958c7-x4ts5 --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "84fbc958c7-x4ts5",
            "placeholder": "<POD_SUFFIX>",
            "position": 55
          }
        ]
      }
    ]
  },
  {
    "problem_id": "scale_pod_zero_social_net-analysis-1",
    "key_commands": [
      {
        "command": "exec_shell(\"kubectl get pods -n test-social-network\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Lists all pods in the namespace to check running workloads and identify missing pods like user-service.",
        "sequence_number": 1,
        "original_command": "exec_shell(\"kubectl get pods -n test-social-network\")"
      },
      {
        "command": "exec_shell(\"kubectl get svc -n test-social-network -o wide\")",
        "type": "probe_command",
        "importance_score": 3,
        "description": "Lists services to verify service exposure; provides auxiliary context.",
        "sequence_number": 2,
        "original_command": "exec_shell(\"kubectl get svc -n test-social-network -o wide\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-social-network deploy/nginx-thrift --tail=200\")",
        "type": "probe_command",
        "importance_score": 1,
        "description": "Attempts to fetch logs from the frontend deployment; low relevance to root cause.",
        "sequence_number": 3,
        "original_command": "exec_shell(\"kubectl logs -n test-social-network deploy/nginx-thrift --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-social-network pod/nginx-thrift-7c48f57-h8t4f --tail=200\")",
        "type": "probe_command",
        "importance_score": 1,
        "description": "Attempts to fetch logs from a specific nginx-thrift pod; low relevance to root cause.",
        "sequence_number": 4,
        "original_command": "exec_shell(\"kubectl logs -n test-social-network pod/nginx-thrift-7c48f57-h8t4f --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-social-network deploy/user-service --tail=200\")",
        "type": "probe_command",
        "importance_score": 4,
        "description": "Attempts to fetch user-service logs; the timeout suggests no pods running, supporting the zero-replica finding.",
        "sequence_number": 5,
        "original_command": "exec_shell(\"kubectl logs -n test-social-network deploy/user-service --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl get deploy -n test-social-network -o wide\")",
        "type": "probe_command",
        "importance_score": 9,
        "description": "Lists all deployments with status; reveals user-service has 0 replicas available indicating it is scaled to zero.",
        "sequence_number": 6,
        "original_command": "exec_shell(\"kubectl get deploy -n test-social-network -o wide\")"
      },
      {
        "command": "exec_shell(\"kubectl get deploy user-service -n test-social-network -o yaml\")",
        "type": "probe_command",
        "importance_score": 10,
        "description": "Describes the user-service deployment in detail; confirms spec.replicas: 0, directly identifying the misconfiguration.",
        "sequence_number": 7,
        "original_command": "exec_shell(\"kubectl get deploy user-service -n test-social-network -o yaml\")"
      }
    ]
  },
  {
    "problem_id": "container_kill-mitigation-1",
    "key_commands": [
      {
        "command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "List all pods in the namespace to assess overall service status and detect restarts.",
        "sequence_number": 1,
        "original_command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation geo-<POD_SUFFIX> -<REPLICA_SUFFIX>\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Inspect previous container logs of the geo pod to understand the cause of the recent restart.",
        "sequence_number": 2,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation geo-84fbc958c7-n5892 --previous\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "84fbc958c7-n5892",
            "placeholder": "<POD_SUFFIX>",
            "position": 55
          },
          {
            "type": "k8s_replicaset_suffix",
            "original": "-previous",
            "placeholder": "<REPLICA_SUFFIX>",
            "position": 69
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl describe pod -n test-hotel-reservation geo-<POD_SUFFIX>\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Describe the geo pod to review lifecycle details, termination reason, and exit code.",
        "sequence_number": 3,
        "original_command": "exec_shell(\"kubectl describe pod -n test-hotel-reservation geo-84fbc958c7-n5892\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "84fbc958c7-n5892",
            "placeholder": "<POD_SUFFIX>",
            "position": 63
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl get pods -n test-hotel-reservation -o wide && kubectl get events -n test-hotel-reservation --sort-by=.lastTimestamp\")",
        "type": "probe_command",
        "importance_score": 9,
        "description": "Get pod details and sorted events to identify the PodChaos 'container-kill' event applied to the geo container.",
        "sequence_number": 4,
        "original_command": "exec_shell(\"kubectl get pods -n test-hotel-reservation -o wide && kubectl get events -n test-hotel-reservation --sort-by=.lastTimestamp\")"
      },
      {
        "command": "exec_shell(\"kubectl get podchaos -n test-hotel-reservation -o wide || kubectl get podchaos --all<REPLICA_SUFFIX>\")",
        "type": "probe_command",
        "importance_score": 8,
        "description": "List Chaos Mesh PodChaos experiments to confirm the active chaos resource affecting the service.",
        "sequence_number": 5,
        "original_command": "exec_shell(\"kubectl get podchaos -n test-hotel-reservation -o wide || kubectl get podchaos --all-namespaces\")",
        "placeholders_used": [
          {
            "type": "k8s_replicaset_suffix",
            "original": "-namespaces",
            "placeholder": "<REPLICA_SUFFIX>",
            "position": 96
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl get podchaos container-kill -n test-hotel-reservation -o yaml\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "Fetch full YAML of the 'container-kill' PodChaos to verify action, selector, target container, and duration.",
        "sequence_number": 6,
        "original_command": "exec_shell(\"kubectl get podchaos container-kill -n test-hotel-reservation -o yaml\")"
      },
      {
        "command": "exec_shell(\"kubectl delete podchaos container-kill -n test-hotel-reservation\")",
        "type": "execute_command",
        "importance_score": 10,
        "description": "Remove the Chaos Mesh PodChaos experiment to stop further container kills and restore service stability.",
        "sequence_number": 7,
        "original_command": "exec_shell(\"kubectl delete podchaos container-kill -n test-hotel-reservation\")"
      },
      {
        "command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Verify post-mitigation that all pods are running and stable.",
        "sequence_number": 8,
        "original_command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")"
      }
    ]
  },
  {
    "problem_id": "pod_kill_hotel_res-analysis-1",
    "key_commands": [
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation mongodb-recommendation-<POD_SUFFIX> --tail=200\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Inspect recommendation MongoDB logs for readiness and client interactions.",
        "sequence_number": 1,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation mongodb-recommendation-55699465f7-b5vc8 --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "55699465f7-b5vc8",
            "placeholder": "<POD_SUFFIX>",
            "position": 74
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation mongodb-profile-<POD_SUFFIX> --tail=200\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Review profile MongoDB logs for startup warnings and client connections.",
        "sequence_number": 2,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation mongodb-profile-758cb77f9f-mxgfh --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "758cb77f9f-mxgfh",
            "placeholder": "<POD_SUFFIX>",
            "position": 67
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation memcached-profile-<POD_SUFFIX> --tail=100\")",
        "type": "probe_command",
        "importance_score": 3,
        "description": "Tail profile Memcached logs to confirm cache process state (auxiliary check).",
        "sequence_number": 3,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation memcached-profile-679775b4d4-n6njc --tail=100\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "679775b4d4-n6njc",
            "placeholder": "<POD_SUFFIX>",
            "position": 69
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation mongodb-rate-<POD_SUFFIX> --tail=100\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Check rate MongoDB logs for startup, authentication, and connection activity.",
        "sequence_number": 4,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation mongodb-rate-56cc8659c9-gw74t --tail=100\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "56cc8659c9-gw74t",
            "placeholder": "<POD_SUFFIX>",
            "position": 64
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation geo-<POD_SUFFIX>\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Verify geo service initialization and Consul registration state.",
        "sequence_number": 5,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation geo-84fbc958c7-sdrwg\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "84fbc958c7-sdrwg",
            "placeholder": "<POD_SUFFIX>",
            "position": 55
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation frontend-<POD_SUFFIX> --tail=200\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Re-check recent frontend log tail for transient errors and current status.",
        "sequence_number": 6,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation frontend-7fc7ddc9db-zs789 --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "7fc7ddc9db-zs789",
            "placeholder": "<POD_SUFFIX>",
            "position": 60
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation user-<POD_SUFFIX>\")",
        "type": "probe_command",
        "importance_score": 8,
        "description": "Analyze user service logs (faulty target) to confirm health, DB connectivity, and registration.",
        "sequence_number": 7,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation user-66d5d6f874-v558d\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "66d5d6f874-v558d",
            "placeholder": "<POD_SUFFIX>",
            "position": 56
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation reservation-<POD_SUFFIX>\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "Review reservation service logs for database and cache initialization and Consul registration.",
        "sequence_number": 8,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation reservation-78c9f7976b-q5hjf\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "78c9f7976b-q5hjf",
            "placeholder": "<POD_SUFFIX>",
            "position": 63
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation rate-<POD_SUFFIX>\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "Inspect rate service logs for DB and cache connectivity and registration.",
        "sequence_number": 9,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation rate-7bdc978679-w2tc5\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "7bdc978679-w2tc5",
            "placeholder": "<POD_SUFFIX>",
            "position": 56
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation profile-<POD_SUFFIX>\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "Check profile service logs for data store connections and successful startup.",
        "sequence_number": 10,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation profile-8b6dd7c6c-wk2n4\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "8b6dd7c6c-wk2n4",
            "placeholder": "<POD_SUFFIX>",
            "position": 59
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation recommendation-<POD_SUFFIX>\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "Examine recommendation service logs for DB connectivity and Consul registration.",
        "sequence_number": 11,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation recommendation-6879fb56bf-5jq6w\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "6879fb56bf-5jq6w",
            "placeholder": "<POD_SUFFIX>",
            "position": 66
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation consul-<POD_SUFFIX>\")",
        "type": "probe_command",
        "importance_score": 9,
        "description": "Review Consul agent logs to validate health, leadership, and service discovery behavior.",
        "sequence_number": 12,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation consul-78c8d79bb-mr9dv\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "78c8d79bb-mr9dv",
            "placeholder": "<POD_SUFFIX>",
            "position": 58
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation frontend-<POD_SUFFIX>\")",
        "type": "probe_command",
        "importance_score": 9,
        "description": "Check frontend logs for client-facing errors and dependency connectivity issues (e.g., Consul).",
        "sequence_number": 13,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation frontend-7fc7ddc9db-zs789\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "7fc7ddc9db-zs789",
            "placeholder": "<POD_SUFFIX>",
            "position": 60
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation search-<POD_SUFFIX>\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "Inspect search service logs for initialization and Consul registration status.",
        "sequence_number": 14,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation search-5c64c8f5bc-26wx5\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "5c64c8f5bc-26wx5",
            "placeholder": "<POD_SUFFIX>",
            "position": 58
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl get svc -n test-hotel-reservation\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "List Kubernetes services to confirm endpoints and ports for inter-service communication.",
        "sequence_number": 15,
        "original_command": "exec_shell(\"kubectl get svc -n test-hotel-reservation\")"
      },
      {
        "command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "List all pods in the test-hotel-reservation namespace to verify component readiness and restarts.",
        "sequence_number": 16,
        "original_command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")"
      }
    ]
  },
  {
    "problem_id": "network_delay_hotel_res-mitigation-1",
    "key_commands": [
      {
        "command": "exec_shell(\"kubectl exec -n test-hotel-reservation frontend-<POD_SUFFIX> -- curl -sS 'http://localhost:5000/recommendations?inDate=2025-12-20&outDate=2025-12-25&lat=37.7749&lon=-122.4194&locale=en_US&currency=USD'\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Functional probe of recommendations API to verify dependent services and routing through Consul.",
        "sequence_number": 1,
        "original_command": "exec_shell(\"kubectl exec -n test-hotel-reservation frontend-7fc7ddc9db-tbvt7 -- curl -sS 'http://localhost:5000/recommendations?inDate=2025-12-20&outDate=2025-12-25&lat=37.7749&lon=-122.4194&locale=en_US&currency=USD'\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "7fc7ddc9db-tbvt7",
            "placeholder": "<POD_SUFFIX>",
            "position": 60
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl exec -n test-hotel-reservation frontend-<POD_SUFFIX> -- curl -sS 'http://localhost:5000/hotels?inDate=2025-12-20&outDate=2025-12-25&lat=37.7749&lon=-122.4194&locale=en_US&currency=USD'\")",
        "type": "probe_command",
        "importance_score": 10,
        "description": "End-to-end functional check of the core hotels search API via the frontend, confirming successful mitigation.",
        "sequence_number": 2,
        "original_command": "exec_shell(\"kubectl exec -n test-hotel-reservation frontend-7fc7ddc9db-tbvt7 -- curl -sS 'http://localhost:5000/hotels?inDate=2025-12-20&outDate=2025-12-25&lat=37.7749&lon=-122.4194&locale=en_US&currency=USD'\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "7fc7ddc9db-tbvt7",
            "placeholder": "<POD_SUFFIX>",
            "position": 60
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl exec -n test-hotel-reservation frontend-<POD_SUFFIX> -- curl -sS http://consul:8500/v1/catalog/services | jq -r 'to_entries[] | .key'\")",
        "type": "probe_command",
        "importance_score": 8,
        "description": "Query Consul service catalog from the frontend pod to verify service discovery is functioning.",
        "sequence_number": 3,
        "original_command": "exec_shell(\"kubectl exec -n test-hotel-reservation frontend-7fc7ddc9db-tbvt7 -- curl -sS http://consul:8500/v1/catalog/services | jq -r 'to_entries[] | .key'\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "7fc7ddc9db-tbvt7",
            "placeholder": "<POD_SUFFIX>",
            "position": 60
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl exec -n test-hotel-reservation frontend-<POD_SUFFIX> -- curl -sS http://localhost:5000/health || kubectl exec -n test-hotel-reservation frontend-7fc7<POD_SUFFIX>curl -sS http://localhost:5000/\")",
        "type": "probe_command",
        "importance_score": 4,
        "description": "Attempt basic frontend HTTP health/landing check from inside the pod to validate HTTP serving.",
        "sequence_number": 4,
        "original_command": "exec_shell(\"kubectl exec -n test-hotel-reservation frontend-7fc7ddc9db-tbvt7 -- curl -sS http://localhost:5000/health || kubectl exec -n test-hotel-reservation frontend-7fc7ddc9db-tbvt7 -- curl -sS http://localhost:5000/\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "7fc7ddc9db-tbvt7",
            "placeholder": "<POD_SUFFIX>",
            "position": 60
          },
          {
            "type": "k8s_pod_suffix",
            "original": "7fc7ddc9db-tbvt7",
            "placeholder": "<POD_SUFFIX>",
            "position": 169
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation reservation-<POD_SUFFIX> --tail=200\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Check reservation service logs to confirm DB/cache initialization and registration.",
        "sequence_number": 5,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation reservation-78c9f7976b-nvxpq --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "78c9f7976b-nvxpq",
            "placeholder": "<POD_SUFFIX>",
            "position": 63
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation user-<POD_SUFFIX> --tail=200\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Check user service logs to confirm DB initialization and Consul registration.",
        "sequence_number": 6,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation user-66d5d6f874-pzrsv --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "66d5d6f874-pzrsv",
            "placeholder": "<POD_SUFFIX>",
            "position": 56
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation rate-<POD_SUFFIX> --tail=200\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Check rate service logs for DB and cache initialization plus registration.",
        "sequence_number": 7,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation rate-7bdc978679-2crh7 --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "7bdc978679-2crh7",
            "placeholder": "<POD_SUFFIX>",
            "position": 56
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation profile-<POD_SUFFIX> --tail=200\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Check profile service logs for DB init, cache init, and Consul registration.",
        "sequence_number": 8,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation profile-8b6dd7c6c-825mm --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "8b6dd7c6c-825mm",
            "placeholder": "<POD_SUFFIX>",
            "position": 59
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation geo-<POD_SUFFIX> --tail=200\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Check geo service logs to confirm DB connectivity and successful registration.",
        "sequence_number": 9,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation geo-84fbc958c7-lqknz --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "84fbc958c7-lqknz",
            "placeholder": "<POD_SUFFIX>",
            "position": 55
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation recommendation-<POD_SUFFIX> --tail=200\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Check recommendation service logs for DB initialization and Consul registration.",
        "sequence_number": 10,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation recommendation-6879fb56bf-5xj58 --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "6879fb56bf-5xj58",
            "placeholder": "<POD_SUFFIX>",
            "position": 66
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation search-<POD_SUFFIX> --tail=200\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Check search service logs to verify successful registration with Consul and readiness.",
        "sequence_number": 11,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation search-5c64c8f5bc-kptq9 --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "5c64c8f5bc-kptq9",
            "placeholder": "<POD_SUFFIX>",
            "position": 58
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl get deploy -n test-hotel-reservation consul -o yaml\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Inspect Consul Deployment to confirm container ports and runtime configuration.",
        "sequence_number": 12,
        "original_command": "exec_shell(\"kubectl get deploy -n test-hotel-reservation consul -o yaml\")"
      },
      {
        "command": "exec_shell(\"kubectl get deploy -n test-hotel-reservation frontend -o yaml\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Inspect frontend Deployment spec (image, ports, resources) to ensure configuration is correct.",
        "sequence_number": 13,
        "original_command": "exec_shell(\"kubectl get deploy -n test-hotel-reservation frontend -o yaml\")"
      },
      {
        "command": "exec_shell(\"kubectl get endpoints -n test-hotel-reservation\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "Verify that Services have healthy endpoints and that pods are properly registered for discovery.",
        "sequence_number": 14,
        "original_command": "exec_shell(\"kubectl get endpoints -n test-hotel-reservation\")"
      },
      {
        "command": "exec_shell(\"kubectl get svc consul -n test-hotel-reservation -o yaml\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Review Consul Service configuration (ports and selectors) to validate correct exposure of 8500 and related ports.",
        "sequence_number": 15,
        "original_command": "exec_shell(\"kubectl get svc consul -n test-hotel-reservation -o yaml\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation consul-<POD_SUFFIX> --tail=200\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "Check Consul agent logs to confirm service registry availability and health.",
        "sequence_number": 16,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation consul-78c8d79bb-l6mf8 --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "78c8d79bb-l6mf8",
            "placeholder": "<POD_SUFFIX>",
            "position": 58
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation frontend-<POD_SUFFIX> --tail=200\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "Inspect frontend logs to identify errors (e.g., connection to Consul) affecting request flow.",
        "sequence_number": 17,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation frontend-7fc7ddc9db-tbvt7 --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "7fc7ddc9db-tbvt7",
            "placeholder": "<POD_SUFFIX>",
            "position": 60
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl get svc -n test-hotel-reservation\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "List services to verify service exposure and ports for inter-service communication.",
        "sequence_number": 18,
        "original_command": "exec_shell(\"kubectl get svc -n test-hotel-reservation\")"
      },
      {
        "command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "List all pods in the namespace to assess component readiness and restarts.",
        "sequence_number": 19,
        "original_command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")"
      }
    ]
  },
  {
    "problem_id": "misconfig_app_hotel_res-detection-1",
    "key_commands": [
      {
        "command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "List pods in the namespace to identify failing components (geo pod in Error state).",
        "sequence_number": 1,
        "original_command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")"
      },
      {
        "command": "exec_shell(\"kubectl describe pod geo-<POD_SUFFIX> -n test-hotel-reservation\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Describe the failing geo pod to inspect container state, restarts, and events.",
        "sequence_number": 2,
        "original_command": "exec_shell(\"kubectl describe pod geo-c47ff745-bglj8 -n test-hotel-reservation\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "c47ff745-bglj8",
            "placeholder": "<POD_SUFFIX>",
            "position": 37
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs geo-<POD_SUFFIX> -n test-hotel-reservation -<REPLICA_SUFFIX>\")",
        "type": "probe_command",
        "importance_score": 9,
        "description": "Retrieve previous container logs to expose the root cause (DB URL mongodb-geo:27777 leading to 'no reachable servers').",
        "sequence_number": 3,
        "original_command": "exec_shell(\"kubectl logs geo-c47ff745-bglj8 -n test-hotel-reservation --previous\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "c47ff745-bglj8",
            "placeholder": "<POD_SUFFIX>",
            "position": 29
          },
          {
            "type": "k8s_replicaset_suffix",
            "original": "-previous",
            "placeholder": "<REPLICA_SUFFIX>",
            "position": 69
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl get svc -n test-hotel-reservation -o wide\")",
        "type": "probe_command",
        "importance_score": 8,
        "description": "List services to verify the correct MongoDB service port (mongodb-geo on 27017), confirming the port mismatch.",
        "sequence_number": 4,
        "original_command": "exec_shell(\"kubectl get svc -n test-hotel-reservation -o wide\")"
      },
      {
        "command": "exec_shell(\"kubectl get deploy geo -n test-hotel-reservation -o yaml\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Inspect deployment configuration for geo service to review container image/command and related settings.",
        "sequence_number": 5,
        "original_command": "exec_shell(\"kubectl get deploy geo -n test-hotel-reservation -o yaml\")"
      }
    ]
  },
  {
    "problem_id": "user_unregistered_mongodb-detection-2",
    "key_commands": [
      {
        "command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "List all pods in the namespace to identify the failing component (rate pod in Error state).",
        "sequence_number": 1,
        "original_command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation rate-<POD_SUFFIX> -<REPLICA_SUFFIX>\")",
        "type": "probe_command",
        "importance_score": 9,
        "description": "Inspect previous logs of the failing rate pod to reveal SASL authentication failure when connecting to MongoDB.",
        "sequence_number": 2,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation rate-7bdc978679-x869b --previous\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "7bdc978679-x869b",
            "placeholder": "<POD_SUFFIX>",
            "position": 56
          },
          {
            "type": "k8s_replicaset_suffix",
            "original": "-previous",
            "placeholder": "<REPLICA_SUFFIX>",
            "position": 70
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation mongodb-rate-<POD_SUFFIX>\")",
        "type": "probe_command",
        "importance_score": 10,
        "description": "Check MongoDB rate pod logs, confirming authentication errors due to missing admin user, pinpointing the root cause.",
        "sequence_number": 3,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation mongodb-rate-56cc8659c9-ndqc7\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "56cc8659c9-ndqc7",
            "placeholder": "<POD_SUFFIX>",
            "position": 64
          }
        ]
      }
    ]
  },
  {
    "problem_id": "container_kill-localization-1",
    "key_commands": [
      {
        "command": "submit([])",
        "type": "execute_command",
        "importance_score": 10,
        "description": "Submit final assessment indicating no faulty components detected",
        "sequence_number": 1,
        "original_command": "submit([])"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation frontend-<POD_SUFFIX> --since=10m\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Fetch extended frontend logs to correlate any transient errors during startup",
        "sequence_number": 2,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation frontend-7fc7ddc9db-scq7r --since=10m\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "7fc7ddc9db-scq7r",
            "placeholder": "<POD_SUFFIX>",
            "position": 60
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl exec -n test-hotel-reservation frontend-<POD_SUFFIX> -- sh -lc \\'apk add --no-cache curl >/dev/null 2>&1 || true; curl -sS http://localhost:5000/health || curl -sS http://localhost:5000/\\'\")",
        "type": "execute_command",
        "importance_score": 7,
        "description": "Execute in- pod health check from frontend (installs curl if missing and probes HTTP endpoint)",
        "sequence_number": 3,
        "original_command": "exec_shell(\"kubectl exec -n test-hotel-reservation frontend-7fc7ddc9db-scq7r -- sh -lc \\'apk add --no-cache curl >/dev/null 2>&1 || true; curl -sS http://localhost:5000/health || curl -sS http://localhost:5000/\\'\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "7fc7ddc9db-scq7r",
            "placeholder": "<POD_SUFFIX>",
            "position": 60
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation user-<POD_SUFFIX> --tail=200\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Inspect user service logs for DB connectivity and registration",
        "sequence_number": 4,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation user-66d5d6f874-wbdtx --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "66d5d6f874-wbdtx",
            "placeholder": "<POD_SUFFIX>",
            "position": 56
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation reservation-<POD_SUFFIX> --tail=200\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Inspect reservation service logs for DB/cache connectivity and registration",
        "sequence_number": 5,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation reservation-78c9f7976b-5v98v --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "78c9f7976b-5v98v",
            "placeholder": "<POD_SUFFIX>",
            "position": 63
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation rate-<POD_SUFFIX> --tail=200\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Inspect rate service logs for DB/cache connectivity and registration",
        "sequence_number": 6,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation rate-7bdc978679-zmpsf --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "7bdc978679-zmpsf",
            "placeholder": "<POD_SUFFIX>",
            "position": 56
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation recommendation-<POD_SUFFIX> --tail=200\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Inspect recommendation service logs for DB connectivity and registration",
        "sequence_number": 7,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation recommendation-6879fb56bf-r8vx8 --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "6879fb56bf-r8vx8",
            "placeholder": "<POD_SUFFIX>",
            "position": 66
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation profile-<POD_SUFFIX> --tail=200\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Inspect profile service logs for DB connectivity and registration",
        "sequence_number": 8,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation profile-8b6dd7c6c-j9s5k --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "8b6dd7c6c-j9s5k",
            "placeholder": "<POD_SUFFIX>",
            "position": 59
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation consul-<POD_SUFFIX> --tail=200\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "Review Consul logs to confirm health service registry availability and queries",
        "sequence_number": 9,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation consul-78c8d79bb-nsmzm --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "78c8d79bb-nsmzm",
            "placeholder": "<POD_SUFFIX>",
            "position": 58
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation search-<POD_SUFFIX> --tail=200\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Check search service logs for successful startup and registration",
        "sequence_number": 10,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation search-5c64c8f5bc-xkq2g --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "5c64c8f5bc-xkq2g",
            "placeholder": "<POD_SUFFIX>",
            "position": 58
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl get endpoints -n test-hotel-reservation -o wide\")",
        "type": "probe_command",
        "importance_score": 3,
        "description": "Verify that service endpoints exist and are routing to running pods; supportive validation.",
        "sequence_number": 11,
        "original_command": "exec_shell(\"kubectl get endpoints -n test-hotel-reservation -o wide\")"
      },
      {
        "command": "exec_shell(\"kubectl describe pod -n test-hotel-reservation geo-<POD_SUFFIX>\")",
        "type": "probe_command",
        "importance_score": 9,
        "description": "Get detailed pod state showing Last State Terminated with Exit Code 137, confirming container kill/restart for geo.",
        "sequence_number": 12,
        "original_command": "exec_shell(\"kubectl describe pod -n test-hotel-reservation geo-84fbc958c7-jlz6p\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "84fbc958c7-jlz6p",
            "placeholder": "<POD_SUFFIX>",
            "position": 63
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation frontend-<POD_SUFFIX> --tail=200\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "Inspect frontend service logs to check client-facing behavior and dependency errors",
        "sequence_number": 13,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation frontend-7fc7ddc9db-scq7r --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "7fc7ddc9db-scq7r",
            "placeholder": "<POD_SUFFIX>",
            "position": 60
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation geo-<POD_SUFFIX> --tail=200\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Inspect geo service logs to verify startup behavior and corroborate issues around the restart.",
        "sequence_number": 14,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation geo-84fbc958c7-jlz6p --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "84fbc958c7-jlz6p",
            "placeholder": "<POD_SUFFIX>",
            "position": 55
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl get svc -n test-hotel-reservation\")",
        "type": "probe_command",
        "importance_score": 3,
        "description": "List services to understand service exposure and context; supportive to overall diagnosis.",
        "sequence_number": 15,
        "original_command": "exec_shell(\"kubectl get svc -n test-hotel-reservation\")"
      },
      {
        "command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "List pods and check for restarts to identify potentially faulty services (geo shows a recent restart).",
        "sequence_number": 16,
        "original_command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")"
      }
    ]
  },
  {
    "problem_id": "redeploy_without_PV-analysis-1",
    "key_commands": [
      {
        "command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "List all pods in the test-hotel-reservation namespace to verify workload readiness and status.",
        "sequence_number": 1,
        "original_command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")"
      },
      {
        "command": "exec_shell(\"kubectl get svc -n test-hotel-reservation -o wide\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "List all services in the namespace with details to confirm service exposure and endpoints.",
        "sequence_number": 2,
        "original_command": "exec_shell(\"kubectl get svc -n test-hotel-reservation -o wide\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation deploy/frontend --tail=200\")",
        "type": "probe_command",
        "importance_score": 8,
        "description": "Inspect recent frontend deployment logs to check for runtime errors and service readiness.",
        "sequence_number": 3,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation deploy/frontend --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation deploy/consul --tail=200\")",
        "type": "probe_command",
        "importance_score": 8,
        "description": "Inspect Consul deployment logs to verify service discovery health and registrations.",
        "sequence_number": 4,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation deploy/consul --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation deploy/search --tail=200\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Check search service logs for initialization and registration status.",
        "sequence_number": 5,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation deploy/search --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation deploy/profile --tail=200\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Check profile service logs for DB connectivity and readiness.",
        "sequence_number": 6,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation deploy/profile --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation deploy/recommendation --tail=200\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Check recommendation service logs for DB initialization and service registration.",
        "sequence_number": 7,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation deploy/recommendation --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation deploy/rate --tail=200\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Check rate service logs for DB and cache initialization and readiness.",
        "sequence_number": 8,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation deploy/rate --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation deploy/reservation --tail=200\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Check reservation service logs for DB connectivity and readiness.",
        "sequence_number": 9,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation deploy/reservation --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation deploy/user --tail=200\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Check user service logs for DB initialization and successful Consul registration.",
        "sequence_number": 10,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation deploy/user --tail=200\")"
      },
      {
        "command": "submit(\"None\")",
        "type": "execute_command",
        "importance_score": 10,
        "description": "Submit the analysis conclusion indicating no faults were detected.",
        "sequence_number": 11,
        "original_command": "submit(\"None\")"
      }
    ]
  },
  {
    "problem_id": "k8s_target_port-misconfig-detection-2",
    "key_commands": [
      {
        "command": "exec_shell(\"kubectl get svc user-service -n test-social-network -o yaml\")",
        "type": "probe_command",
        "importance_score": 1,
        "description": "Retrieve user-service Service manifest for comparison and cross-validation of port configuration patterns.",
        "sequence_number": 1,
        "original_command": "exec_shell(\"kubectl get svc user-service -n test-social-network -o yaml\")"
      },
      {
        "command": "exec_shell(\"kubectl get configmap text-service -n test-social-network -o yaml\")",
        "type": "probe_command",
        "importance_score": 3,
        "description": "Fetch the text-service ConfigMap contents to validate service-specific configuration references.",
        "sequence_number": 2,
        "original_command": "exec_shell(\"kubectl get configmap text-service -n test-social-network -o yaml\")"
      },
      {
        "command": "exec_shell(\"kubectl get configmap -n test-social-network -o wide\")",
        "type": "probe_command",
        "importance_score": 2,
        "description": "List all ConfigMaps in the namespace to verify presence of required configurations.",
        "sequence_number": 3,
        "original_command": "exec_shell(\"kubectl get configmap -n test-social-network -o wide\")"
      },
      {
        "command": "submit(\"Yes\")",
        "type": "execute_command",
        "importance_score": 6,
        "description": "Submit detection result indicating an anomaly (Service targetPort misconfiguration).",
        "sequence_number": 4,
        "original_command": "submit(\"Yes\")"
      },
      {
        "command": "exec_shell(\"kubectl logs deploy/nginx-thrift -n test-social-network --tail=200\")",
        "type": "probe_command",
        "importance_score": 2,
        "description": "Check frontend gateway logs for potential client-side or routing issues.",
        "sequence_number": 5,
        "original_command": "exec_shell(\"kubectl logs deploy/nginx-thrift -n test-social-network --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl logs deploy/text-service -n test-social-network --tail=200\")",
        "type": "probe_command",
        "importance_score": 2,
        "description": "Check text-service logs for runtime errors; supports diagnosis though not core to mismatch detection.",
        "sequence_number": 6,
        "original_command": "exec_shell(\"kubectl logs deploy/text-service -n test-social-network --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl get deploy text-service -n test-social-network -o yaml\")",
        "type": "probe_command",
        "importance_score": 9,
        "description": "Examine text-service Deployment; shows containerPort is 9090, evidencing a targetPort mismatch.",
        "sequence_number": 7,
        "original_command": "exec_shell(\"kubectl get deploy text-service -n test-social-network -o yaml\")"
      },
      {
        "command": "exec_shell(\"kubectl get svc text-service -n test-social-network -o yaml\")",
        "type": "probe_command",
        "importance_score": 10,
        "description": "Examine text-service Service spec; confirms targetPort is set to 8080.",
        "sequence_number": 8,
        "original_command": "exec_shell(\"kubectl get svc text-service -n test-social-network -o yaml\")"
      },
      {
        "command": "exec_shell(\"kubectl get endpoints -n test-social-network -o wide\")",
        "type": "probe_command",
        "importance_score": 9,
        "description": "Inspect resolved service endpoints and backend ports; reveals text-service routing to port 8080.",
        "sequence_number": 9,
        "original_command": "exec_shell(\"kubectl get endpoints -n test-social-network -o wide\")"
      },
      {
        "command": "exec_shell(\"kubectl get deploy,svc,ingress -n test-social-network -o wide\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Summarize deployments and services to see declared service ports and selectors.",
        "sequence_number": 10,
        "original_command": "exec_shell(\"kubectl get deploy,svc,ingress -n test-social-network -o wide\")"
      },
      {
        "command": "exec_shell(\"kubectl get events -n test-social-network --sort-by=.metadata.creationTimestamp\")",
        "type": "probe_command",
        "importance_score": 2,
        "description": "Review recent cluster events for any warnings or anomalies.",
        "sequence_number": 11,
        "original_command": "exec_shell(\"kubectl get events -n test-social-network --sort-by=.metadata.creationTimestamp\")"
      },
      {
        "command": "exec_shell(\"kubectl get pods -n test-social-network\")",
        "type": "probe_command",
        "importance_score": 3,
        "description": "List all pods in the namespace to verify workloads are running.",
        "sequence_number": 12,
        "original_command": "exec_shell(\"kubectl get pods -n test-social-network\")"
      }
    ]
  },
  {
    "problem_id": "pod_kill_hotel_res-mitigation-1",
    "key_commands": [
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation deployment/user --since=10m\")",
        "type": "probe_command",
        "importance_score": 4,
        "description": "Verify user service DB connection and Consul registration.",
        "sequence_number": 1,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation deployment/user --since=10m\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation deployment/reservation --since=10m\")",
        "type": "probe_command",
        "importance_score": 4,
        "description": "Verify reservation service DB/cache initialization and Consul registration.",
        "sequence_number": 2,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation deployment/reservation --since=10m\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation deployment/profile --since=10m\")",
        "type": "probe_command",
        "importance_score": 4,
        "description": "Verify profile service DB/cache initialization and Consul registration.",
        "sequence_number": 3,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation deployment/profile --since=10m\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation deployment/rate --since=10m\")",
        "type": "probe_command",
        "importance_score": 4,
        "description": "Verify rate service initialization, cache connectivity, and Consul registration.",
        "sequence_number": 4,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation deployment/rate --since=10m\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation deployment/recommendation --since=10m\")",
        "type": "probe_command",
        "importance_score": 4,
        "description": "Check recommendation service DB connection and Consul registration.",
        "sequence_number": 5,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation deployment/recommendation --since=10m\")"
      },
      {
        "command": "exec_shell(\"kubectl get deployment geo -n test-hotel-reservation -o yaml\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Inspect geo deployment config (image, env, resources) for correctness.",
        "sequence_number": 6,
        "original_command": "exec_shell(\"kubectl get deployment geo -n test-hotel-reservation -o yaml\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation deployment/search --since=10m\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Validate that the search service initializes and registers in Consul.",
        "sequence_number": 7,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation deployment/search --since=10m\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation deployment/frontend --since=10m\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Check frontend logs for Consul discovery errors and subsequent recovery.",
        "sequence_number": 8,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation deployment/frontend --since=10m\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation deployment/consul --since=10m\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "Confirm Consul registry health and that services are registering successfully.",
        "sequence_number": 9,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation deployment/consul --since=10m\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation pod/geo-<POD_SUFFIX> --since=10m\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "Verify current geo pod logs to confirm successful DB connection and service registration.",
        "sequence_number": 10,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation pod/geo-84fbc958c7-xfstn --since=10m\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "84fbc958c7-xfstn",
            "placeholder": "<POD_SUFFIX>",
            "position": 59
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation deployment/mongodb-geo --since=10m\")",
        "type": "probe_command",
        "importance_score": 8,
        "description": "Check MongoDB for geo service startup, binding, auth, and connection acceptance to confirm DB availability.",
        "sequence_number": 11,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation deployment/mongodb-geo --since=10m\")"
      },
      {
        "command": "submit()",
        "type": "execute_command",
        "importance_score": 2,
        "description": "Submit the completed mitigation for evaluation.",
        "sequence_number": 12,
        "original_command": "submit()"
      },
      {
        "command": "exec_shell(\"kubectl delete podchaos pod-kill -n test-hotel-reservation\")",
        "type": "execute_command",
        "importance_score": 10,
        "description": "Mitigate the issue by deleting the active PodChaos resource, stopping ongoing pod-kill chaos.",
        "sequence_number": 13,
        "original_command": "exec_shell(\"kubectl delete podchaos pod-kill -n test-hotel-reservation\")"
      },
      {
        "command": "exec_shell(\"kubectl get svc -n test-hotel-reservation -o wide\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Verify service endpoints (e.g., mongodb-geo) and networking details.",
        "sequence_number": 14,
        "original_command": "exec_shell(\"kubectl get svc -n test-hotel-reservation -o wide\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation geo-<POD_SUFFIX> -<REPLICA_SUFFIX>\")",
        "type": "probe_command",
        "importance_score": 8,
        "description": "Inspect previous logs of the geo pod to diagnose the crash (panic: no reachable servers).",
        "sequence_number": 15,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation geo-84fbc958c7-xfstn --previous\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "84fbc958c7-xfstn",
            "placeholder": "<POD_SUFFIX>",
            "position": 55
          },
          {
            "type": "k8s_replicaset_suffix",
            "original": "-previous",
            "placeholder": "<REPLICA_SUFFIX>",
            "position": 69
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl get podchaos -n test-hotel-reservation -o yaml || kubectl get podchaos -A\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "Retrieve details of active PodChaos experiments to confirm the chaos configuration targeting the user service.",
        "sequence_number": 16,
        "original_command": "exec_shell(\"kubectl get podchaos -n test-hotel-reservation -o yaml || kubectl get podchaos -A\")"
      },
      {
        "command": "exec_shell(\"kubectl get events -n test-hotel-reservation --sort-by=.lastTimestamp\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Inspect recent namespace events to detect anomalies, revealing PodChaos activity affecting pods.",
        "sequence_number": 17,
        "original_command": "exec_shell(\"kubectl get events -n test-hotel-reservation --sort-by=.lastTimestamp\")"
      },
      {
        "command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "List all pods in the namespace to assess overall service health and detect restarts.",
        "sequence_number": 18,
        "original_command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")"
      }
    ]
  },
  {
    "problem_id": "astronomy_shop_product_catalog_service_failure-localization-1",
    "key_commands": [
      {
        "command": "exec_shell(\"kubectl get pods -n astronomy-shop\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "List all pods in the astronomy-shop namespace to identify any failing services.",
        "sequence_number": 1,
        "original_command": "exec_shell(\"kubectl get pods -n astronomy-shop\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n astronomy-shop fraud-detection-<POD_SUFFIX> --tail=200\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Fetch recent logs from the default container in the failing fraud-detection pod for initial triage.",
        "sequence_number": 2,
        "original_command": "exec_shell(\"kubectl logs -n astronomy-shop fraud-detection-65868bcdb5-xjdth --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "65868bcdb5-xjdth",
            "placeholder": "<POD_SUFFIX>",
            "position": 59
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n astronomy-shop fraud-detection-<POD_SUFFIX> -<REPLICA_SUFFIX<REPLICA_SUFFIX>tainers\")",
        "type": "probe_command",
        "importance_score": 3,
        "description": "Attempt to retrieve logs from previous instances of all containers in the pod to check prior crash details.",
        "sequence_number": 3,
        "original_command": "exec_shell(\"kubectl logs -n astronomy-shop fraud-detection-65868bcdb5-xjdth --previous --all-containers\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "65868bcdb5-xjdth",
            "placeholder": "<POD_SUFFIX>",
            "position": 59
          },
          {
            "type": "k8s_replicaset_suffix",
            "original": "-previous",
            "placeholder": "<REPLICA_SUFFIX>",
            "position": 73
          },
          {
            "type": "k8s_replicaset_suffix",
            "original": "-containers",
            "placeholder": "<REPLICA_SUFFIX>",
            "position": 88
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl describe pod -n astronomy-shop fraud-detection-<POD_SUFFIX>\")",
        "type": "probe_command",
        "importance_score": 9,
        "description": "Describe the failing pod to get detailed status, last exit code, environment variables, and events indicating CrashLoopBackOff.",
        "sequence_number": 4,
        "original_command": "exec_shell(\"kubectl describe pod -n astronomy-shop fraud-detection-65868bcdb5-xjdth\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "65868bcdb5-xjdth",
            "placeholder": "<POD_SUFFIX>",
            "position": 67
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n astronomy-shop fraud-detection-<POD_SUFFIX> -c fraud<REPLICA_SUF<REPLICA_SUFFIX>evious --tail=200\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Retrieve logs from the previously terminated fraud-detection container to confirm behavior before the crash.",
        "sequence_number": 5,
        "original_command": "exec_shell(\"kubectl logs -n astronomy-shop fraud-detection-65868bcdb5-xjdth -c fraud-detection --previous --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "65868bcdb5-xjdth",
            "placeholder": "<POD_SUFFIX>",
            "position": 59
          },
          {
            "type": "k8s_replicaset_suffix",
            "original": "-detection",
            "placeholder": "<REPLICA_SUFFIX>",
            "position": 80
          },
          {
            "type": "k8s_replicaset_suffix",
            "original": "-previous",
            "placeholder": "<REPLICA_SUFFIX>",
            "position": 92
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n astronomy-shop fraud-detection-<POD_SUFFIX> -c fraud<REPLICA_SUFFIX> --tail=200\")",
        "type": "probe_command",
        "importance_score": 4,
        "description": "Retrieve current logs from the fraud-detection container to observe runtime behavior.",
        "sequence_number": 6,
        "original_command": "exec_shell(\"kubectl logs -n astronomy-shop fraud-detection-65868bcdb5-xjdth -c fraud-detection --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "65868bcdb5-xjdth",
            "placeholder": "<POD_SUFFIX>",
            "position": 59
          },
          {
            "type": "k8s_replicaset_suffix",
            "original": "-detection",
            "placeholder": "<REPLICA_SUFFIX>",
            "position": 80
          }
        ]
      },
      {
        "command": "submit([\"fraud<REPLICA_SUFFIX>\"])",
        "type": "execute_command",
        "importance_score": 10,
        "description": "Submit the identified faulty component to complete the localization task.",
        "sequence_number": 7,
        "original_command": "submit([\"fraud-detection\"])",
        "placeholders_used": [
          {
            "type": "k8s_replicaset_suffix",
            "original": "-detection",
            "placeholder": "<REPLICA_SUFFIX>",
            "position": 14
          }
        ]
      }
    ]
  },
  {
    "problem_id": "auth_miss_mongodb-mitigation-1",
    "key_commands": [
      {
        "command": "exec_shell(\"kubectl get pods -n test-social-network\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "List all pods in the namespace to identify the failing component",
        "sequence_number": 1,
        "original_command": "exec_shell(\"kubectl get pods -n test-social-network\")"
      },
      {
        "command": "exec_shell(\"kubectl describe pod url-shorten-mongodb-<POD_SUFFIX> -n test-social-network\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "Inspect the failing MongoDB pod for config, mounts, and recent events",
        "sequence_number": 2,
        "original_command": "exec_shell(\"kubectl describe pod url-shorten-mongodb-7f8c54769c-6zpc7 -n test-social-network\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "7f8c54769c-6zpc7",
            "placeholder": "<POD_SUFFIX>",
            "position": 53
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs url-shorten-mongodb-<POD_SUFFIX> -n test-social-network -<REPLICA_SUFFIX>\")",
        "type": "probe_command",
        "importance_score": 8,
        "description": "Fetch previous container logs to pinpoint the TLS PEM error causing crashes",
        "sequence_number": 3,
        "original_command": "exec_shell(\"kubectl logs url-shorten-mongodb-7f8c54769c-6zpc7 -n test-social-network --previous\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "7f8c54769c-6zpc7",
            "placeholder": "<POD_SUFFIX>",
            "position": 45
          },
          {
            "type": "k8s_replicaset_suffix",
            "original": "-previous",
            "placeholder": "<REPLICA_SUFFIX>",
            "position": 82
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl get secret mongodb-tls -n test-social-network -o yaml\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Review the TLS secret referenced by the pod to validate contents and keys",
        "sequence_number": 4,
        "original_command": "exec_shell(\"kubectl get secret mongodb-tls -n test-social-network -o yaml\")"
      },
      {
        "command": "exec_shell(\"kubectl get secret mongodb-tls -n test-social-network -o jsonpath='{.data.tls\\\\.pem}' | base64 -d | sed -n '1,200p'\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "Decode the tls.pem data to confirm it is only a certificate and missing a key",
        "sequence_number": 5,
        "original_command": "exec_shell(\"kubectl get secret mongodb-tls -n test-social-network -o jsonpath='{.data.tls\\\\.pem}' | base64 -d | sed -n '1,200p'\")"
      },
      {
        "command": "exec_shell(\"kubectl get configmap url-shorten-mongodb -n test-social-network -o yaml\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "Check the MongoDB configuration which requires TLS and references the PEM",
        "sequence_number": 6,
        "original_command": "exec_shell(\"kubectl get configmap url-shorten-mongodb -n test-social-network -o yaml\")"
      },
      {
        "command": "exec_shell(\"kubectl get configmap user-mongodb -n test-social-network -o yaml\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Use a working MongoDB service's config as reference (TLS disabled) to guide mitigation",
        "sequence_number": 7,
        "original_command": "exec_shell(\"kubectl get configmap user-mongodb -n test-social-network -o yaml\")"
      },
      {
        "command": "exec_shell(\"kubectl patch configmap url-shorten-mongodb -n test-social-network --type='json' -p='[{\\\"op\\\":\\\"replace\\\",\\\"path\\\":\\\"/data/mongod.conf\\\",\\\"value\\\":\\\"net:\\\\n  tls:\\\\n    mode: disabled\\\\n\\\"}]'\")",
        "type": "execute_command",
        "importance_score": 10,
        "description": "Mitigate by disabling TLS in the url-shorten-mongodb ConfigMap to avoid invalid PEM usage",
        "sequence_number": 8,
        "original_command": "exec_shell(\"kubectl patch configmap url-shorten-mongodb -n test-social-network --type='json' -p='[{\\\"op\\\":\\\"replace\\\",\\\"path\\\":\\\"/data/mongod.conf\\\",\\\"value\\\":\\\"net:\\\\n  tls:\\\\n    mode: disabled\\\\n\\\"}]'\")"
      },
      {
        "command": "exec_shell(\"kubectl delete pod url-shorten-mongodb-<POD_SUFFIX> -n test-social-network\")",
        "type": "execute_command",
        "importance_score": 9,
        "description": "Force the pod to restart and pick up the updated (TLS disabled) configuration",
        "sequence_number": 9,
        "original_command": "exec_shell(\"kubectl delete pod url-shorten-mongodb-7f8c54769c-6zpc7 -n test-social-network\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "7f8c54769c-6zpc7",
            "placeholder": "<POD_SUFFIX>",
            "position": 51
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl get pods -n test-social-network -w --field-selector=metadata.name=url-shorten-mongodb-<POD_SUFFIX> --request-timeout=10s\")",
        "type": "probe_command",
        "importance_score": 3,
        "description": "Watch the old pod termination to ensure rollout progress",
        "sequence_number": 10,
        "original_command": "exec_shell(\"kubectl get pods -n test-social-network -w --field-selector=metadata.name=url-shorten-mongodb-7f8c54769c-6zpc7 --request-timeout=10s\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "7f8c54769c-6zpc7",
            "placeholder": "<POD_SUFFIX>",
            "position": 106
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl get pods -n test-social-network -l app=url-shorten-mongodb -o wide\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Confirm a new MongoDB pod is running after the config change",
        "sequence_number": 11,
        "original_command": "exec_shell(\"kubectl get pods -n test-social-network -l app=url-shorten-mongodb -o wide\")"
      },
      {
        "command": "exec_shell(\"kubectl logs url-shorten-mongodb-<POD_SUFFIX> -n test-social-network --tail=200\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "Verify the new MongoDB instance starts with TLS disabled and accepts connections",
        "sequence_number": 12,
        "original_command": "exec_shell(\"kubectl logs url-shorten-mongodb-7f8c54769c-mk799 -n test-social-network --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "7f8c54769c-mk799",
            "placeholder": "<POD_SUFFIX>",
            "position": 45
          }
        ]
      }
    ]
  },
  {
    "problem_id": "assign_to_non_existent_node_social_net-mitigation-1",
    "key_commands": [
      {
        "command": "exec_shell(\"kubectl get pods -n test-social-network\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "List pods in the namespace to identify the pending user-service pod.",
        "sequence_number": 1,
        "original_command": "exec_shell(\"kubectl get pods -n test-social-network\")"
      },
      {
        "command": "exec_shell(\"kubectl describe pod user-service-<POD_SUFFIX> -n test-social-network\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "Inspect the pending pod to find scheduling failure details and confirm nodeSelector mismatch.",
        "sequence_number": 2,
        "original_command": "exec_shell(\"kubectl describe pod user-service-5b549cc8dc-fbjqt -n test-social-network\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "5b549cc8dc-fbjqt",
            "placeholder": "<POD_SUFFIX>",
            "position": 46
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl get nodes --show-labels\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "List nodes and their labels to determine valid scheduling targets and available labels.",
        "sequence_number": 3,
        "original_command": "exec_shell(\"kubectl get nodes --show-labels\")"
      },
      {
        "command": "exec_shell(\"kubectl get deploy user-service -n test-social-network -o yaml\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Review the deployment spec to confirm the incorrect nodeSelector (extra-node).",
        "sequence_number": 4,
        "original_command": "exec_shell(\"kubectl get deploy user-service -n test-social-network -o yaml\")"
      },
      {
        "command": "exec_shell(\"kubectl patch deployment user-service -n test-social-network --type='json' -p='[{\\\"op\\\":\\\"replace\\\",\\\"path\\\":\\\"/spec/template/spec/nodeSelector\\\",\\\"value\\\":{\\\"kubernetes.io/hostname\\\":\\\"kind-worker\\\"}}]'\")",
        "type": "execute_command",
        "importance_score": 10,
        "description": "Core fix: replace the deployment's nodeSelector to schedule on an existing node (kind-worker).",
        "sequence_number": 5,
        "original_command": "exec_shell(\"kubectl patch deployment user-service -n test-social-network --type='json' -p='[{\\\"op\\\":\\\"replace\\\",\\\"path\\\":\\\"/spec/template/spec/nodeSelector\\\",\\\"value\\\":{\\\"kubernetes.io/hostname\\\":\\\"kind-worker\\\"}}]'\")"
      },
      {
        "command": "exec_shell(\"kubectl get pods -n test-social-network -o wide\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Verify that the user-service pod is now running and scheduled on the correct node.",
        "sequence_number": 6,
        "original_command": "exec_shell(\"kubectl get pods -n test-social-network -o wide\")"
      }
    ]
  },
  {
    "problem_id": "revoke_auth_mongodb-localization-2",
    "key_commands": [
      {
        "command": "submit([\"mongodb-rate\"])",
        "type": "execute_command",
        "importance_score": 10,
        "description": "Submit the identified faulty component (mongodb-rate) as the root cause.",
        "sequence_number": 1,
        "original_command": "submit([\"mongodb-rate\"])"
      },
      {
        "command": "exec_shell(\"kubectl get pods -n test-hotel-reservation -o wide && echo \\'---\\' && kubectl get deploy rate -n test-hotel-reservation -o yaml\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "Get broader pod status and the rate deployment spec to validate configuration.",
        "sequence_number": 2,
        "original_command": "exec_shell(\"kubectl get pods -n test-hotel-reservation -o wide && echo \\'---\\' && kubectl get deploy rate -n test-hotel-reservation -o yaml\")"
      },
      {
        "command": "exec_shell(\"kubectl get pods -n test-hotel-reservation -o wide && echo '---' && kubectl get deploy rate -n test-hotel-reservation -o yaml\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Inspect pod placement/details and the rate deployment manifest to verify configuration and rule out deployment misconfigurations.",
        "sequence_number": 3,
        "original_command": "exec_shell(\"kubectl get pods -n test-hotel-reservation -o wide && echo '---' && kubectl get deploy rate -n test-hotel-reservation -o yaml\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation mongodb-rate-<POD_SUFFIX> && echo \\'---\\' && kubectl describe pod -n test-hotel-reservation rate-7bdc<POD_SUFFIX>",
        "type": "probe_command",
        "importance_score": 9,
        "description": "Inspect mongodb-rate logs for auth/config issues and describe the rate pod for crash details.",
        "sequence_number": 4,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation mongodb-rate-56cc8659c9-56772 && echo \\'---\\' && kubectl describe pod -n test-hotel-reservation rate-7bdc978679-xgm2v\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "56cc8659c9-56772",
            "placeholder": "<POD_SUFFIX>",
            "position": 64
          },
          {
            "type": "k8s_pod_suffix",
            "original": "7bdc978679-xgm2v",
            "placeholder": "<POD_SUFFIX>",
            "position": 152
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation mongodb-rate-<POD_SUFFIX> && echo '---' && kubectl describe pod -n test-hotel-reservation rate-7bdc<POD_SUFFIX>",
        "type": "probe_command",
        "importance_score": 8,
        "description": "Review MongoDB rate pod logs and describe the rate pod to confirm MongoDB authorization is enabled and that client requests are unauthorized.",
        "sequence_number": 5,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation mongodb-rate-56cc8659c9-56772 && echo '---' && kubectl describe pod -n test-hotel-reservation rate-7bdc978679-xgm2v\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "56cc8659c9-56772",
            "placeholder": "<POD_SUFFIX>",
            "position": 64
          },
          {
            "type": "k8s_pod_suffix",
            "original": "7bdc978679-xgm2v",
            "placeholder": "<POD_SUFFIX>",
            "position": 150
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation rate-<POD_SUFFIX>\")",
        "type": "probe_command",
        "importance_score": 9,
        "description": "Fetch logs from the rate service pod, revealing MongoDB authorization errors indicating the likely root cause.",
        "sequence_number": 6,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation rate-7bdc978679-xgm2v\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "7bdc978679-xgm2v",
            "placeholder": "<POD_SUFFIX>",
            "position": 56
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "List all pods in the namespace to identify failing components and focus investigation.",
        "sequence_number": 7,
        "original_command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")"
      }
    ]
  },
  {
    "problem_id": "astronomy_shop_product_catalog_service_failure-detection-1",
    "key_commands": [
      {
        "command": "exec_shell(\"kubectl get pods -n astronomy-shop\")",
        "type": "probe_command",
        "importance_score": 9,
        "description": "List all pods in the astronomy-shop namespace to identify any pods in error or restarting states.",
        "sequence_number": 1,
        "original_command": "exec_shell(\"kubectl get pods -n astronomy-shop\")"
      },
      {
        "command": "exec_shell(\"kubectl describe pod fraud-detection-<POD_SUFFIX> -n astronomy-shop\")",
        "type": "probe_command",
        "importance_score": 9,
        "description": "Inspect detailed status of the failing fraud-detection pod to find exit codes, resource limits, and restart/backoff reasons.",
        "sequence_number": 2,
        "original_command": "exec_shell(\"kubectl describe pod fraud-detection-65868bcdb5-jsn6w -n astronomy-shop\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "65868bcdb5-jsn6w",
            "placeholder": "<POD_SUFFIX>",
            "position": 49
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n astronomy-shop fraud-detection-<POD_SUFFIX> -<REPLICA_SUFFIX>\")",
        "type": "probe_command",
        "importance_score": 3,
        "description": "Attempt to retrieve logs from the previous instance of the fraud-detection container for failure clues.",
        "sequence_number": 3,
        "original_command": "exec_shell(\"kubectl logs -n astronomy-shop fraud-detection-65868bcdb5-jsn6w --previous\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "65868bcdb5-jsn6w",
            "placeholder": "<POD_SUFFIX>",
            "position": 59
          },
          {
            "type": "k8s_replicaset_suffix",
            "original": "-previous",
            "placeholder": "<REPLICA_SUFFIX>",
            "position": 73
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n astronomy-shop fraud-detection-<POD_SUFFIX>\")",
        "type": "probe_command",
        "importance_score": 3,
        "description": "Fetch current logs from the fraud-detection container to corroborate failure symptoms.",
        "sequence_number": 4,
        "original_command": "exec_shell(\"kubectl logs -n astronomy-shop fraud-detection-65868bcdb5-jsn6w\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "65868bcdb5-jsn6w",
            "placeholder": "<POD_SUFFIX>",
            "position": 59
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl get events -n astronomy-shop --sort-by=.lastTimestamp\")",
        "type": "probe_command",
        "importance_score": 8,
        "description": "Review recent namespace events to confirm backoff/restart patterns and correlate timing across services.",
        "sequence_number": 5,
        "original_command": "exec_shell(\"kubectl get events -n astronomy-shop --sort-by=.lastTimestamp\")"
      },
      {
        "command": "exec_shell(\"kubectl describe pod ad-<POD_SUFFIX> -n astronomy-shop\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Describe the ad service pod to verify it also experienced restarts, indicating broader anomalies.",
        "sequence_number": 6,
        "original_command": "exec_shell(\"kubectl describe pod ad-94bd576b5-w42bl -n astronomy-shop\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "94bd576b5-w42bl",
            "placeholder": "<POD_SUFFIX>",
            "position": 36
          }
        ]
      },
      {
        "command": "submit(\"Yes\")",
        "type": "execute_command",
        "importance_score": 10,
        "description": "Submit the final decision that anomalies are detected based on evidence gathered.",
        "sequence_number": 7,
        "original_command": "submit(\"Yes\")"
      }
    ]
  },
  {
    "problem_id": "astronomy_shop_cart_service_failure-detection-1",
    "key_commands": [
      {
        "command": "exec_shell(\"kubectl get pods -n astronomy-shop\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "List all pods in the astronomy-shop namespace to identify any failing components.",
        "sequence_number": 1,
        "original_command": "exec_shell(\"kubectl get pods -n astronomy-shop\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n astronomy-shop fraud-detection-<POD_SUFFIX> --all-containers=true --tail=200 -<REPLICA_SUFFIX>\")",
        "type": "probe_command",
        "importance_score": 3,
        "description": "Attempt to fetch previous logs from all containers in the fraud-detection pod to investigate crash history.",
        "sequence_number": 2,
        "original_command": "exec_shell(\"kubectl logs -n astronomy-shop fraud-detection-65868bcdb5-267c4 --all-containers=true --tail=200 --previous\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "65868bcdb5-267c4",
            "placeholder": "<POD_SUFFIX>",
            "position": 59
          },
          {
            "type": "k8s_replicaset_suffix",
            "original": "-previous",
            "placeholder": "<REPLICA_SUFFIX>",
            "position": 106
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl describe pod -n astronomy-shop fraud-detection-<POD_SUFFIX>\")",
        "type": "probe_command",
        "importance_score": 9,
        "description": "Describe the fraud-detection pod to get detailed status, events, and crash information indicating CrashLoopBackOff and exit code.",
        "sequence_number": 3,
        "original_command": "exec_shell(\"kubectl describe pod -n astronomy-shop fraud-detection-65868bcdb5-267c4\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "65868bcdb5-267c4",
            "placeholder": "<POD_SUFFIX>",
            "position": 67
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n astronomy-shop fraud-detection-<POD_SUFFIX> --tail=200\")",
        "type": "probe_command",
        "importance_score": 2,
        "description": "Fetch current container logs for the fraud-detection pod to look for runtime errors.",
        "sequence_number": 4,
        "original_command": "exec_shell(\"kubectl logs -n astronomy-shop fraud-detection-65868bcdb5-267c4 --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "65868bcdb5-267c4",
            "placeholder": "<POD_SUFFIX>",
            "position": 59
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n astronomy-shop fraud-detection-<POD_SUFFIX> -c fraud<REPLICA_SUF<REPLICA_SUFFIX>evious --tail=200\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Fetch previous logs for the fraud-detection container to inspect output prior to the crash.",
        "sequence_number": 5,
        "original_command": "exec_shell(\"kubectl logs -n astronomy-shop fraud-detection-65868bcdb5-267c4 -c fraud-detection --previous --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "65868bcdb5-267c4",
            "placeholder": "<POD_SUFFIX>",
            "position": 59
          },
          {
            "type": "k8s_replicaset_suffix",
            "original": "-detection",
            "placeholder": "<REPLICA_SUFFIX>",
            "position": 80
          },
          {
            "type": "k8s_replicaset_suffix",
            "original": "-previous",
            "placeholder": "<REPLICA_SUFFIX>",
            "position": 92
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl get pod -n astronomy-shop fraud-detection-<POD_SUFFIX> -o jsonpath='{.status.containerStatuses[0].lastState.terminated.reason} {.status.containerStatuses[0].lastState.terminated.exitCode} {.status.containerStatuses[0].lastState.terminated.finishedAt} {.status.containerStatuses[0].state.waiting.reason}'\")",
        "type": "probe_command",
        "importance_score": 10,
        "description": "Extract precise termination details and waiting reason from the pod status to conclusively identify CrashLoopBackOff and exit code 137.",
        "sequence_number": 6,
        "original_command": "exec_shell(\"kubectl get pod -n astronomy-shop fraud-detection-65868bcdb5-267c4 -o jsonpath='{.status.containerStatuses[0].lastState.terminated.reason} {.status.containerStatuses[0].lastState.terminated.exitCode} {.status.containerStatuses[0].lastState.terminated.finishedAt} {.status.containerStatuses[0].state.waiting.reason}'\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "65868bcdb5-267c4",
            "placeholder": "<POD_SUFFIX>",
            "position": 62
          }
        ]
      },
      {
        "command": "submit(\"Yes\")",
        "type": "execute_command",
        "importance_score": 10,
        "description": "Submit the final decision indicating anomalies were detected.",
        "sequence_number": 7,
        "original_command": "submit(\"Yes\")"
      }
    ]
  },
  {
    "problem_id": "scale_pod_zero_social_net-detection-1",
    "key_commands": [
      {
        "command": "exec_shell(\"kubectl get pods -n test-social-network\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "List all pods in the namespace to spot anomalies; reveals user-service pod in Terminating state.",
        "sequence_number": 1,
        "original_command": "exec_shell(\"kubectl get pods -n test-social-network\")"
      },
      {
        "command": "exec_shell(\"kubectl describe pod user-service-<POD_SUFFIX> -n test-social-network\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "Inspect the terminating user-service pod for events and status details indicating it is being killed.",
        "sequence_number": 2,
        "original_command": "exec_shell(\"kubectl describe pod user-service-6d5985bd55-bhp92 -n test-social-network\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "6d5985bd55-bhp92",
            "placeholder": "<POD_SUFFIX>",
            "position": 46
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl describe deploy user-service -n test-social-network\")",
        "type": "probe_command",
        "importance_score": 10,
        "description": "Core evidence: shows the user-service Deployment with 0 desired replicas, confirming scale-to-zero.",
        "sequence_number": 3,
        "original_command": "exec_shell(\"kubectl describe deploy user-service -n test-social-network\")"
      },
      {
        "command": "exec_shell(\"kubectl get deploy -n test-social-network; kubectl get hpa -n test-social-network\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Check for deployments and any HPA that might affect scaling; validates deployment state/HPA presence.",
        "sequence_number": 4,
        "original_command": "exec_shell(\"kubectl get deploy -n test-social-network; kubectl get hpa -n test-social-network\")"
      },
      {
        "command": "exec_shell(\"kubectl get rs -n test-social-network; kubectl get svc -n test-social-network\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Confirm ReplicaSet desired replicas for user-service is 0 and list Services; supports scale-to-zero finding.",
        "sequence_number": 5,
        "original_command": "exec_shell(\"kubectl get rs -n test-social-network; kubectl get svc -n test-social-network\")"
      },
      {
        "command": "submit(\"Yes\")",
        "type": "execute_command",
        "importance_score": 8,
        "description": "Submit the detection result indicating anomalies are present.",
        "sequence_number": 6,
        "original_command": "submit(\"Yes\")"
      }
    ]
  },
  {
    "problem_id": "astronomy_shop_payment_service_failure-detection-1",
    "key_commands": [
      {
        "command": "exec_shell(\"kubectl get pods -n astronomy-shop\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "List all pods in the astronomy-shop namespace to identify non-healthy services and spot anomalies.",
        "sequence_number": 1,
        "original_command": "exec_shell(\"kubectl get pods -n astronomy-shop\")"
      },
      {
        "command": "exec_shell(\"kubectl describe pod -n astronomy-shop fraud-detection-<POD_SUFFIX>\")",
        "type": "probe_command",
        "importance_score": 9,
        "description": "Inspect the failing fraud-detection pod for detailed status, CrashLoopBackOff reason, and recent events.",
        "sequence_number": 2,
        "original_command": "exec_shell(\"kubectl describe pod -n astronomy-shop fraud-detection-65868bcdb5-kbqls\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "65868bcdb5-kbqls",
            "placeholder": "<POD_SUFFIX>",
            "position": 67
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n astronomy-shop fraud-detection-<POD_SUFFIX> -c fraud<REPLICA_SUF<REPLICA_SUFFIX>evious\")",
        "type": "probe_command",
        "importance_score": 9,
        "description": "Retrieve logs from the previously crashed container instance to confirm and understand the failure.",
        "sequence_number": 3,
        "original_command": "exec_shell(\"kubectl logs -n astronomy-shop fraud-detection-65868bcdb5-kbqls -c fraud-detection --previous\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "65868bcdb5-kbqls",
            "placeholder": "<POD_SUFFIX>",
            "position": 59
          },
          {
            "type": "k8s_replicaset_suffix",
            "original": "-detection",
            "placeholder": "<REPLICA_SUFFIX>",
            "position": 80
          },
          {
            "type": "k8s_replicaset_suffix",
            "original": "-previous",
            "placeholder": "<REPLICA_SUFFIX>",
            "position": 92
          }
        ]
      },
      {
        "command": "submit(\"Yes\")",
        "type": "execute_command",
        "importance_score": 10,
        "description": "Submit the final decision indicating that anomalies are detected.",
        "sequence_number": 4,
        "original_command": "submit(\"Yes\")"
      }
    ]
  },
  {
    "problem_id": "pod_kill_hotel_res-localization-1",
    "key_commands": [
      {
        "command": "exec_shell(\"kubectl exec -n test-hotel-reservation frontend-<POD_SUFFIX> -- curl -sS -H 'Accept: application/json' 'http://localhost:5000/recommendations?inDate=2015-04-09&outDate=2015-04-10&lat=37.7749&lon=-122.4194' || true\")",
        "type": "probe_command",
        "importance_score": 3,
        "description": "Attempt to verify recommendations endpoint behavior from frontend (response indicates missing required params).",
        "sequence_number": 1,
        "original_command": "exec_shell(\"kubectl exec -n test-hotel-reservation frontend-7fc7ddc9db-qf9mb -- curl -sS -H 'Accept: application/json' 'http://localhost:5000/recommendations?inDate=2015-04-09&outDate=2015-04-10&lat=37.7749&lon=-122.4194' || true\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "7fc7ddc9db-qf9mb",
            "placeholder": "<POD_SUFFIX>",
            "position": 60
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl exec -n test-hotel-reservation frontend-<POD_SUFFIX> -- curl -sS -H 'Accept: application/json' 'http://localhost:5000/hotels?inDate=2015-04-09&outDate=2015-04-10&lat=37.7749&lon=-122.4194' || true\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "Validate core functionality by querying hotels endpoint and ensuring valid JSON response.",
        "sequence_number": 2,
        "original_command": "exec_shell(\"kubectl exec -n test-hotel-reservation frontend-7fc7ddc9db-qf9mb -- curl -sS -H 'Accept: application/json' 'http://localhost:5000/hotels?inDate=2015-04-09&outDate=2015-04-10&lat=37.7749&lon=-122.4194' || true\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "7fc7ddc9db-qf9mb",
            "placeholder": "<POD_SUFFIX>",
            "position": 60
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl exec -n test-hotel-reservation frontend-<POD_SUFFIX> -- curl -sS -H \\'Accept: application/json\\' \\'http://localhost:5000/hotels?inDate=2015-04-09&outDate=2015-04-10&lat=37.7749&lon=-122.4194\\' || true\")",
        "type": "probe_command",
        "importance_score": 4,
        "description": "Validate application functionality by querying the hotels API through the frontend to ensure the system works end-to-end.",
        "sequence_number": 3,
        "original_command": "exec_shell(\"kubectl exec -n test-hotel-reservation frontend-7fc7ddc9db-qf9mb -- curl -sS -H \\'Accept: application/json\\' \\'http://localhost:5000/hotels?inDate=2015-04-09&outDate=2015-04-10&lat=37.7749&lon=-122.4194\\' || true\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "7fc7ddc9db-qf9mb",
            "placeholder": "<POD_SUFFIX>",
            "position": 60
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl exec -n test-hotel-reservation frontend-<POD_SUFFIX> -- sh -c 'for p in / /hotels /search /recommendations; do echo ==== $p ====; curl -sS \\\"http://localhost:5000$p\\\" || true; echo; done'\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Probe multiple frontend routes to verify end-to-end readiness and responses.",
        "sequence_number": 4,
        "original_command": "exec_shell(\"kubectl exec -n test-hotel-reservation frontend-7fc7ddc9db-qf9mb -- sh -c 'for p in / /hotels /search /recommendations; do echo ==== $p ====; curl -sS \\\"http://localhost:5000$p\\\" || true; echo; done'\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "7fc7ddc9db-qf9mb",
            "placeholder": "<POD_SUFFIX>",
            "position": 60
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl exec -n test-hotel-reservation frontend-<POD_SUFFIX> -- sh -c \\'for p in / /hotels /search /recommendations; do echo ==== $p ====; curl -sS \\\\\"http://localhost:5000$p\\\\\" || true; echo; done\\'\")",
        "type": "probe_command",
        "importance_score": 3,
        "description": "Probe multiple frontend endpoints from within the pod to assess route availability and app responses.",
        "sequence_number": 5,
        "original_command": "exec_shell(\"kubectl exec -n test-hotel-reservation frontend-7fc7ddc9db-qf9mb -- sh -c \\'for p in / /hotels /search /recommendations; do echo ==== $p ====; curl -sS \\\\\"http://localhost:5000$p\\\\\" || true; echo; done\\'\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "7fc7ddc9db-qf9mb",
            "placeholder": "<POD_SUFFIX>",
            "position": 60
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl exec -n test-hotel-reservation frontend-<POD_SUFFIX> -- curl -sS http://localhost:5000/health || true\")",
        "type": "probe_command",
        "importance_score": 4,
        "description": "Perform a basic health endpoint check from inside the frontend pod.",
        "sequence_number": 6,
        "original_command": "exec_shell(\"kubectl exec -n test-hotel-reservation frontend-7fc7ddc9db-qf9mb -- curl -sS http://localhost:5000/health || true\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "7fc7ddc9db-qf9mb",
            "placeholder": "<POD_SUFFIX>",
            "position": 60
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation reservation-<POD_SUFFIX> --tail=200\")",
        "type": "probe_command",
        "importance_score": 4,
        "description": "Verify reservation service logs for normal operation.",
        "sequence_number": 7,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation reservation-78c9f7976b-4656n --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "78c9f7976b-4656n",
            "placeholder": "<POD_SUFFIX>",
            "position": 63
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation rate-<POD_SUFFIX> --tail=200\")",
        "type": "probe_command",
        "importance_score": 4,
        "description": "Verify rate service logs for normal operation.",
        "sequence_number": 8,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation rate-7bdc978679-c8tnp --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "7bdc978679-c8tnp",
            "placeholder": "<POD_SUFFIX>",
            "position": 56
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation profile-<POD_SUFFIX> --tail=200\")",
        "type": "probe_command",
        "importance_score": 4,
        "description": "Verify profile service logs for normal operation.",
        "sequence_number": 9,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation profile-8b6dd7c6c-wvsqd --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "8b6dd7c6c-wvsqd",
            "placeholder": "<POD_SUFFIX>",
            "position": 59
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation user-<POD_SUFFIX> --tail=200\")",
        "type": "probe_command",
        "importance_score": 4,
        "description": "Verify user service logs for normal operation.",
        "sequence_number": 10,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation user-66d5d6f874-g2w4w --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "66d5d6f874-g2w4w",
            "placeholder": "<POD_SUFFIX>",
            "position": 56
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation geo-<POD_SUFFIX> --tail=200\")",
        "type": "probe_command",
        "importance_score": 4,
        "description": "Verify geo service logs to ensure it is healthy.",
        "sequence_number": 11,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation geo-84fbc958c7-l5dkg --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "84fbc958c7-l5dkg",
            "placeholder": "<POD_SUFFIX>",
            "position": 55
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation search-<POD_SUFFIX> --tail=200\")",
        "type": "probe_command",
        "importance_score": 4,
        "description": "Verify search service logs as part of dependency health checks.",
        "sequence_number": 12,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation search-5c64c8f5bc-gqz4c --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "5c64c8f5bc-gqz4c",
            "placeholder": "<POD_SUFFIX>",
            "position": 58
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation frontend-<POD_SUFFIX> --tail=200\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Check frontend logs to see interaction with Consul and downstream services health.",
        "sequence_number": 13,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation frontend-7fc7ddc9db-qf9mb --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "7fc7ddc9db-qf9mb",
            "placeholder": "<POD_SUFFIX>",
            "position": 60
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation consul-<POD_SUFFIX> --tail=200\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Inspect Consul agent logs to confirm service registrations and health checks across components.",
        "sequence_number": 14,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation consul-78c8d79bb-7w9jv --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "78c8d79bb-7w9jv",
            "placeholder": "<POD_SUFFIX>",
            "position": 58
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl describe pod -n test-hotel-reservation recommendation-<POD_SUFFIX>\")",
        "type": "probe_command",
        "importance_score": 9,
        "description": "Describe the recommendation pod to verify restart count, last state, and event history confirming the crash and restart.",
        "sequence_number": 15,
        "original_command": "exec_shell(\"kubectl describe pod -n test-hotel-reservation recommendation-6879fb56bf-w5w6d\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "6879fb56bf-w5w6d",
            "placeholder": "<POD_SUFFIX>",
            "position": 74
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation recommendation-<POD_SUFFIX> --tail=200\")",
        "type": "probe_command",
        "importance_score": 9,
        "description": "Fetch current logs of the recommendation pod to confirm successful recovery and normal operation.",
        "sequence_number": 16,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation recommendation-6879fb56bf-w5w6d --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "6879fb56bf-w5w6d",
            "placeholder": "<POD_SUFFIX>",
            "position": 66
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation mongodb-recommendation-<POD_SUFFIX> --tail=200\")",
        "type": "probe_command",
        "importance_score": 8,
        "description": "Check MongoDB for recommendation logs to confirm DB availability and readiness.",
        "sequence_number": 17,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation mongodb-recommendation-55699465f7-2kqtj --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "55699465f7-2kqtj",
            "placeholder": "<POD_SUFFIX>",
            "position": 74
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl get svc -n test-hotel-reservation -o wide\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "List services to verify service names and ports (e.g., mongodb-recommendation) used by the pod.",
        "sequence_number": 18,
        "original_command": "exec_shell(\"kubectl get svc -n test-hotel-reservation -o wide\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation recommendation-<POD_SUFFIX> -<REPLICA_SUFFIX>\")",
        "type": "probe_command",
        "importance_score": 10,
        "description": "Fetch previous container logs for the recommendation pod to reveal the crash reason (no reachable MongoDB servers).",
        "sequence_number": 19,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation recommendation-6879fb56bf-w5w6d --previous\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "6879fb56bf-w5w6d",
            "placeholder": "<POD_SUFFIX>",
            "position": 66
          },
          {
            "type": "k8s_replicaset_suffix",
            "original": "-previous",
            "placeholder": "<REPLICA_SUFFIX>",
            "position": 80
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "List all pods in the namespace to identify any restarts or abnormal statuses.",
        "sequence_number": 20,
        "original_command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")"
      }
    ]
  },
  {
    "problem_id": "k8s_target_port-misconfig-mitigation-1",
    "key_commands": [
      {
        "command": "exec_shell(\"kubectl get pods -n test-social-network\")",
        "type": "probe_command",
        "importance_score": 3,
        "description": "List all pods in the namespace to confirm workloads are running.",
        "sequence_number": 1,
        "original_command": "exec_shell(\"kubectl get pods -n test-social-network\")"
      },
      {
        "command": "exec_shell(\"kubectl get svc -n test-social-network -o wide\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "List services and exposed ports to understand service port configurations.",
        "sequence_number": 2,
        "original_command": "exec_shell(\"kubectl get svc -n test-social-network -o wide\")"
      },
      {
        "command": "exec_shell(\"kubectl get endpoints -n test-social-network\")",
        "type": "probe_command",
        "importance_score": 8,
        "description": "Check service endpoints to see the backend IP:port targets; reveals user-service targeting port 9999.",
        "sequence_number": 3,
        "original_command": "exec_shell(\"kubectl get endpoints -n test-social-network\")"
      },
      {
        "command": "exec_shell(\"kubectl describe svc user-service -n test-social-network\")",
        "type": "probe_command",
        "importance_score": 9,
        "description": "Inspect user-service details; confirms TargetPort is incorrectly set to 9999.",
        "sequence_number": 4,
        "original_command": "exec_shell(\"kubectl describe svc user-service -n test-social-network\")"
      },
      {
        "command": "exec_shell(\"kubectl get deploy user-service -n test-social-network -o yaml\")",
        "type": "probe_command",
        "importance_score": 8,
        "description": "Review deployment specification; shows containerPort is 9090, confirming mismatch with service TargetPort.",
        "sequence_number": 5,
        "original_command": "exec_shell(\"kubectl get deploy user-service -n test-social-network -o yaml\")"
      },
      {
        "command": "exec_shell(\"kubectl patch svc user-service -n test-social-network -p '{\\\"spec\\\":{\\\"ports\\\":[{\\\"port\\\":9090,\\\"protocol\\\":\\\"TCP\\\",\\\"targetPort\\\":9090}]}}'\")",
        "type": "execute_command",
        "importance_score": 10,
        "description": "Fix the misconfiguration by setting the service TargetPort to 9090 to match the container port.",
        "sequence_number": 6,
        "original_command": "exec_shell(\"kubectl patch svc user-service -n test-social-network -p '{\\\"spec\\\":{\\\"ports\\\":[{\\\"port\\\":9090,\\\"protocol\\\":\\\"TCP\\\",\\\"targetPort\\\":9090}]}}'\")"
      },
      {
        "command": "exec_shell(\"kubectl get endpoints user-service -n test-social-network -o wide\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "Verify the fix by ensuring the user-service endpoints now target port 9090.",
        "sequence_number": 7,
        "original_command": "exec_shell(\"kubectl get endpoints user-service -n test-social-network -o wide\")"
      }
    ]
  },
  {
    "problem_id": "auth_miss_mongodb-detection-1",
    "key_commands": [
      {
        "command": "exec_shell(\"kubectl get pods -n test-social-network\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "List all pods in the namespace to identify any unhealthy components; reveals the url-shorten-mongodb pod in Error.",
        "sequence_number": 1,
        "original_command": "exec_shell(\"kubectl get pods -n test-social-network\")"
      },
      {
        "command": "exec_shell(\"kubectl describe pod url-shorten-mongodb-<POD_SUFFIX> -n test-social-network\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "Inspect the failing pod's detailed status, events, and mounts; confirms CrashLoopBackOff and TLS secret/config mounts.",
        "sequence_number": 2,
        "original_command": "exec_shell(\"kubectl describe pod url-shorten-mongodb-bbc7d85f7-d8tr9 -n test-social-network\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "bbc7d85f7-d8tr9",
            "placeholder": "<POD_SUFFIX>",
            "position": 53
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs url-shorten-mongodb-<POD_SUFFIX> -n test-social-network -<REPLICA_SUFFIX>\")",
        "type": "probe_command",
        "importance_score": 10,
        "description": "Retrieve previous container logs to find root cause; shows InvalidSSLConfiguration due to unreadable PEM at /etc/tls/tls.pem.",
        "sequence_number": 3,
        "original_command": "exec_shell(\"kubectl logs url-shorten-mongodb-bbc7d85f7-d8tr9 -n test-social-network --previous\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "bbc7d85f7-d8tr9",
            "placeholder": "<POD_SUFFIX>",
            "position": 45
          },
          {
            "type": "k8s_replicaset_suffix",
            "original": "-previous",
            "placeholder": "<REPLICA_SUFFIX>",
            "position": 82
          }
        ]
      },
      {
        "command": "submit(\"Yes\")",
        "type": "execute_command",
        "importance_score": 10,
        "description": "Submit the detection result confirming anomalies are present.",
        "sequence_number": 4,
        "original_command": "submit(\"Yes\")"
      }
    ]
  },
  {
    "problem_id": "k8s_target_port-misconfig-analysis-1",
    "key_commands": [
      {
        "command": "exec_shell(\"kubectl get pods -n test-social-network\")",
        "type": "probe_command",
        "importance_score": 4,
        "description": "List all pods in the namespace to verify component readiness and establish baseline status.",
        "sequence_number": 1,
        "original_command": "exec_shell(\"kubectl get pods -n test-social-network\")"
      },
      {
        "command": "exec_shell(\"kubectl get svc -n test-social-network -o wide\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "List services and ports to identify the exposed port for user-service and other services.",
        "sequence_number": 2,
        "original_command": "exec_shell(\"kubectl get svc -n test-social-network -o wide\")"
      },
      {
        "command": "exec_shell(\"kubectl get pods -n test-social-network -o name | xargs -I{} sh -c 'echo {}; kubectl logs -n test-social-network {} --tail=200 2>/dev/null | egrep -i \\\"error|fail|exception|timeout|refus|unavail\\\" || true'\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Scan all pod logs for recent errors to surface connection refusals pointing to user-service reachability issues.",
        "sequence_number": 3,
        "original_command": "exec_shell(\"kubectl get pods -n test-social-network -o name | xargs -I{} sh -c 'echo {}; kubectl logs -n test-social-network {} --tail=200 2>/dev/null | egrep -i \\\"error|fail|exception|timeout|refus|unavail\\\" || true'\")"
      },
      {
        "command": "exec_shell(\"kubectl get endpoints -n test-social-network user-service -o yaml\")",
        "type": "probe_command",
        "importance_score": 10,
        "description": "Inspect the user-service Endpoints to confirm backend IPs and actual target port, revealing the port mismatch (port 9999 under name \"9090\").",
        "sequence_number": 4,
        "original_command": "exec_shell(\"kubectl get endpoints -n test-social-network user-service -o yaml\")"
      },
      {
        "command": "submit({\"system_level\": \"Virtualization\", \"fault_type\": \"Misconfiguration\"})",
        "type": "execute_command",
        "importance_score": 8,
        "description": "Submit the final analysis identifying a misconfiguration as the root cause.",
        "sequence_number": 5,
        "original_command": "submit({\"system_level\": \"Virtualization\", \"fault_type\": \"Misconfiguration\"})"
      }
    ]
  },
  {
    "problem_id": "network_loss_hotel_res-mitigation-1",
    "key_commands": [
      {
        "command": "exec_shell(\"kubectl run -n test-hotel-reservation tmp-curl-2 --rm -i --restart=Never --image=curlimages/curl -- curl -v http://frontend:5000/hotels?inDate=2015-04-09&outDate=2015-04-10&lat=37.7749&lon=-122.4194 || true\")",
        "type": "execute_command",
        "importance_score": 8,
        "description": "Ephemeral curl pod with verbose output to confirm HTTP status and headers for the hotels API request.",
        "sequence_number": 1,
        "original_command": "exec_shell(\"kubectl run -n test-hotel-reservation tmp-curl-2 --rm -i --restart=Never --image=curlimages/curl -- curl -v http://frontend:5000/hotels?inDate=2015-04-09&outDate=2015-04-10&lat=37.7749&lon=-122.4194 || true\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation deploy/user --tail=200\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Verify user service initialization and Consul registration.",
        "sequence_number": 2,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation deploy/user --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl get deploy -n test-hotel-reservation search -o yaml\")",
        "type": "probe_command",
        "importance_score": 4,
        "description": "Inspect search deployment spec for configuration validation.",
        "sequence_number": 3,
        "original_command": "exec_shell(\"kubectl get deploy -n test-hotel-reservation search -o yaml\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation deploy/reservation --tail=200\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Verify reservation service initialization and Consul registration.",
        "sequence_number": 4,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation deploy/reservation --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl get deploy -n test-hotel-reservation frontend -o yaml\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Inspect frontend deployment spec (ports, image, resources) for configuration issues.",
        "sequence_number": 5,
        "original_command": "exec_shell(\"kubectl get deploy -n test-hotel-reservation frontend -o yaml\")"
      },
      {
        "command": "exec_shell(\"kubectl run -n test-hotel-reservation tmp-curl-verify --rm -i --restart=Never --image=curlimages/curl -- sh -lc 'curl -sS \\\"http://frontend:5000/hotels?inDate=2015-04-09&outDate=2015-04-10&lat=37.7749&lon=-122.4194\\\" | head -c 500 || true'\")",
        "type": "execute_command",
        "importance_score": 6,
        "description": "Post-mitigation verification using ephemeral curl pod to ensure API responds with data.",
        "sequence_number": 6,
        "original_command": "exec_shell(\"kubectl run -n test-hotel-reservation tmp-curl-verify --rm -i --restart=Never --image=curlimages/curl -- sh -lc 'curl -sS \\\"http://frontend:5000/hotels?inDate=2015-04-09&outDate=2015-04-10&lat=37.7749&lon=-122.4194\\\" | head -c 500 || true'\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation deploy/rate --tail=200\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Verify rate service DB/memcached connectivity and registration in Consul.",
        "sequence_number": 7,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation deploy/rate --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl delete networkchaos loss -n test-hotel-reservation\")",
        "type": "execute_command",
        "importance_score": 10,
        "description": "Remove the active NetworkChaos fault (packet loss) to restore network connectivity.",
        "sequence_number": 8,
        "original_command": "exec_shell(\"kubectl delete networkchaos loss -n test-hotel-reservation\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation deploy/geo --tail=200\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Verify geo service DB connectivity and Consul registration.",
        "sequence_number": 9,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation deploy/geo --tail=200\")"
      },
      {
        "command": "submit()",
        "type": "execute_command",
        "importance_score": 5,
        "description": "Submit the mitigation solution for evaluation.",
        "sequence_number": 10,
        "original_command": "submit()"
      },
      {
        "command": "exec_shell(\"kubectl get networkchaos -A -o wide\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "Identify active NetworkChaos experiments across all namespaces to confirm ongoing fault.",
        "sequence_number": 11,
        "original_command": "exec_shell(\"kubectl get networkchaos -A -o wide\")"
      },
      {
        "command": "exec_shell(\"kubectl get events -n test-hotel-reservation --sort-by=.metadata.creationTimestamp | tail -n 50\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "Review recent namespace events; reveals Chaos Mesh NetworkChaos activity causing packet loss.",
        "sequence_number": 12,
        "original_command": "exec_shell(\"kubectl get events -n test-hotel-reservation --sort-by=.metadata.creationTimestamp | tail -n 50\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation deploy/profile --tail=200\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Verify profile service DB/memcached connectivity and registration in Consul.",
        "sequence_number": 13,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation deploy/profile --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl run -n test-hotel-reservation tmp-curl --rm -i --restart=Never --image=curlimages/curl -- curl -sS http://frontend:5000/hotels?inDate=2015-04-09&outDate=2015-04-10&lat=37.7749&lon=-122.4194 || true\")",
        "type": "execute_command",
        "importance_score": 5,
        "description": "Ephemeral curl pod to reproduce/verify functional API behavior for hotels query.",
        "sequence_number": 14,
        "original_command": "exec_shell(\"kubectl run -n test-hotel-reservation tmp-curl --rm -i --restart=Never --image=curlimages/curl -- curl -sS http://frontend:5000/hotels?inDate=2015-04-09&outDate=2015-04-10&lat=37.7749&lon=-122.4194 || true\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation deploy/recommendation --tail=200\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Verify recommendation service DB connectivity and registration in Consul.",
        "sequence_number": 15,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation deploy/recommendation --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl run -n test-hotel-reservation tmp-shell --rm -i --restart=Never --image=curlimages/curl -- curl -sS http://frontend:5000/health || true\")",
        "type": "execute_command",
        "importance_score": 5,
        "description": "Ephemeral curl pod to probe frontend health endpoint from inside the cluster.",
        "sequence_number": 16,
        "original_command": "exec_shell(\"kubectl run -n test-hotel-reservation tmp-shell --rm -i --restart=Never --image=curlimages/curl -- curl -sS http://frontend:5000/health || true\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation deploy/search --tail=200\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Verify search service startup and registration in Consul.",
        "sequence_number": 17,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation deploy/search --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation deploy/consul --tail=200\")",
        "type": "probe_command",
        "importance_score": 4,
        "description": "Inspect Consul logs to understand service discovery and potential connectivity problems.",
        "sequence_number": 18,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation deploy/consul --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation deploy/frontend --tail=200\")",
        "type": "probe_command",
        "importance_score": 4,
        "description": "Check frontend logs for errors indicating upstream connectivity issues.",
        "sequence_number": 19,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation deploy/frontend --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl get svc -n test-hotel-reservation -o wide\")",
        "type": "probe_command",
        "importance_score": 2,
        "description": "List services to confirm service endpoints and ports.",
        "sequence_number": 20,
        "original_command": "exec_shell(\"kubectl get svc -n test-hotel-reservation -o wide\")"
      },
      {
        "command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")",
        "type": "probe_command",
        "importance_score": 3,
        "description": "List pods in the namespace to assess overall workload health and readiness.",
        "sequence_number": 21,
        "original_command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")"
      }
    ]
  },
  {
    "problem_id": "network_delay_hotel_res-detection-1",
    "key_commands": [
      {
        "command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "List all pods in the namespace to verify overall service health and readiness before deeper investigation.",
        "sequence_number": 1,
        "original_command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")"
      },
      {
        "command": "exec_shell(\"kubectl get events -n test-hotel-reservation --sort-by=.lastTimestamp\")",
        "type": "probe_command",
        "importance_score": 9,
        "description": "Inspect recent namespace events to detect signs of injected network delay (Chaos Mesh networkchaos) affecting the user service.",
        "sequence_number": 2,
        "original_command": "exec_shell(\"kubectl get events -n test-hotel-reservation --sort-by=.lastTimestamp\")"
      },
      {
        "command": "submit(\"Yes\")",
        "type": "execute_command",
        "importance_score": 9,
        "description": "Submit the anomaly detection result indicating that an issue (network delay) was found.",
        "sequence_number": 3,
        "original_command": "submit(\"Yes\")"
      }
    ]
  },
  {
    "problem_id": "network_delay_hotel_res-analysis-1",
    "key_commands": [
      {
        "command": "submit({\"system_level\": \"Application\", \"fault_type\": \"Network/Storage Issue\"})",
        "type": "execute_command",
        "importance_score": 9,
        "description": "Submit the final root cause classification based on evidence of injected network delay.",
        "sequence_number": 1,
        "original_command": "submit({\"system_level\": \"Application\", \"fault_type\": \"Network/Storage Issue\"})"
      },
      {
        "command": "exec_shell(\"kubectl get events -n test-hotel-reservation --sort-by=.metadata.creationTimestamp\")",
        "type": "probe_command",
        "importance_score": 10,
        "description": "Review ordered namespace events; reveals NetworkChaos delay applied to a user pod, identifying a network delay fault.",
        "sequence_number": 2,
        "original_command": "exec_shell(\"kubectl get events -n test-hotel-reservation --sort-by=.metadata.creationTimestamp\")"
      },
      {
        "command": "exec_shell(\"kubectl get endpoints -n test-hotel-reservation\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "List service endpoints to confirm backend pod IPs/ports are correctly associated.",
        "sequence_number": 3,
        "original_command": "exec_shell(\"kubectl get endpoints -n test-hotel-reservation\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation deployment/user --tail=200\")",
        "type": "probe_command",
        "importance_score": 4,
        "description": "Inspect user service logs for successful startup and registration.",
        "sequence_number": 4,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation deployment/user --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation deployment/reservation --tail=200\")",
        "type": "probe_command",
        "importance_score": 4,
        "description": "Inspect reservation service logs for normal operation and registration.",
        "sequence_number": 5,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation deployment/reservation --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation deployment/rate --tail=200\")",
        "type": "probe_command",
        "importance_score": 4,
        "description": "Check rate service logs for DB and cache initialization to rule out errors.",
        "sequence_number": 6,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation deployment/rate --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation deployment/profile --tail=200\")",
        "type": "probe_command",
        "importance_score": 4,
        "description": "Check profile service logs for normal startup and caching configuration.",
        "sequence_number": 7,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation deployment/profile --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation deployment/geo --tail=200\")",
        "type": "probe_command",
        "importance_score": 4,
        "description": "Verify geo service startup and data initialization to exclude internal failures.",
        "sequence_number": 8,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation deployment/geo --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation deployment/recommendation --tail=200\")",
        "type": "probe_command",
        "importance_score": 4,
        "description": "Verify recommendation service startup and Consul registration.",
        "sequence_number": 9,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation deployment/recommendation --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation deployment/search --tail=200\")",
        "type": "probe_command",
        "importance_score": 4,
        "description": "Verify search service initialization and Consul registration to rule out app-level faults.",
        "sequence_number": 10,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation deployment/search --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation deployment/consul --tail=200\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Check Consul service discovery logs for registration/lookup behavior and possible network errors.",
        "sequence_number": 11,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation deployment/consul --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation deployment/frontend --tail=200\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "Inspect frontend logs for client-visible errors and connectivity issues to dependencies (e.g., Consul).",
        "sequence_number": 12,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation deployment/frontend --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl get svc -n test-hotel-reservation\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "List services to confirm exposure and ports for inter-service communication.",
        "sequence_number": 13,
        "original_command": "exec_shell(\"kubectl get svc -n test-hotel-reservation\")"
      },
      {
        "command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "List all pods in the hotel reservation namespace to verify workload health and readiness.",
        "sequence_number": 14,
        "original_command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")"
      }
    ]
  },
  {
    "problem_id": "k8s_target_port-misconfig-localization-2",
    "key_commands": [
      {
        "command": "exec_shell(\"kubectl get pods -n test-social-network\")",
        "type": "probe_command",
        "importance_score": 4,
        "description": "List all pods in the namespace to get component and pod names for further inspection.",
        "sequence_number": 1,
        "original_command": "exec_shell(\"kubectl get pods -n test-social-network\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-social-network nginx-thrift-7c48f57-nlwtr --tail=200\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Check frontend (nginx-thrift) logs; reveals connection refused errors on port 8080.",
        "sequence_number": 2,
        "original_command": "exec_shell(\"kubectl logs -n test-social-network nginx-thrift-7c48f57-nlwtr --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl get pods -n test-social-network -o name | xargs -I{} sh -c 'echo === {}; kubectl logs -n test-social-network {} --tail=200 2>&1 | grep -i -E \\\"error|exception|fail|panic|fatal\\\" | head -n 10'\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "Scan recent logs from all pods for errors; shows compose-post-service failing to connect to text-service.",
        "sequence_number": 3,
        "original_command": "exec_shell(\"kubectl get pods -n test-social-network -o name | xargs -I{} sh -c 'echo === {}; kubectl logs -n test-social-network {} --tail=200 2>&1 | grep -i -E \\\"error|exception|fail|panic|fatal\\\" | head -n 10'\")"
      },
      {
        "command": "exec_shell(\"kubectl get svc -n test-social-network -o wide\")",
        "type": "probe_command",
        "importance_score": 8,
        "description": "List services and ports; confirms text-service is exposed on service port 9090.",
        "sequence_number": 4,
        "original_command": "exec_shell(\"kubectl get svc -n test-social-network -o wide\")"
      },
      {
        "command": "exec_shell(\"kubectl get endpoints -n test-social-network text-service user-mongodb url-shorten-mongodb post-storage-mongodb compose-post-service -o wide\")",
        "type": "probe_command",
        "importance_score": 8,
        "description": "Check endpoints and target ports; shows text-service endpoints on 8080 indicating potential targetPort mismatch.",
        "sequence_number": 5,
        "original_command": "exec_shell(\"kubectl get endpoints -n test-social-network text-service user-mongodb url-shorten-mongodb post-storage-mongodb compose-post-service -o wide\")"
      },
      {
        "command": "exec_shell(\"kubectl -n test-social-network describe svc text-service; echo '---'; kubectl -n test-social-network get deploy text-service -o yaml\")",
        "type": "probe_command",
        "importance_score": 10,
        "description": "Describe Service and Deployment; confirms Service targetPort is 8080 while containerPort is 9090, identifying the misconfiguration.",
        "sequence_number": 6,
        "original_command": "exec_shell(\"kubectl -n test-social-network describe svc text-service; echo '---'; kubectl -n test-social-network get deploy text-service -o yaml\")"
      },
      {
        "command": "exec_shell(\"kubectl -n test-social-network logs text-service-<POD_SUFFIX> --tail=200\")",
        "type": "probe_command",
        "importance_score": 3,
        "description": "Check text-service pod logs; shows the service started, supporting that the issue is port mapping, not crash.",
        "sequence_number": 7,
        "original_command": "exec_shell(\"kubectl -n test-social-network logs text-service-585f7cbc5f-tlwh4 --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "585f7cbc5f-tlwh4",
            "placeholder": "<POD_SUFFIX>",
            "position": 61
          }
        ]
      },
      {
        "command": "submit([\"text-service\"])",
        "type": "execute_command",
        "importance_score": 10,
        "description": "Submit localized faulty component based on evidence of Service targetPort/containerPort mismatch.",
        "sequence_number": 8,
        "original_command": "submit([\"text-service\"])"
      }
    ]
  },
  {
    "problem_id": "revoke_auth_mongodb-mitigation-1",
    "key_commands": [
      {
        "command": "exec_shell(\"kubectl exec -n test-hotel-reservation mongodb-geo-<POD_SUFFIX> -- bash -lc \\'mongo admin -u admin -p admin --authenticationDatabase admin --eval \\\\\\\"db.grantRolesToUser(\\\\\\\\\\\\\"admin\\\\\\\\\\\\\", [{role: \\\\\\\\\\\\\"readWrite\\\\\\\\\\\\\", db: \\\\\\\\\\\\\"geo-db\\\\\\\\\\\\\"}]); db.getUser(\\\\\\\\\\\\\"admin\\\\\\\\\\\\\")\\\\\\\"\\'\\\")",
        "type": "execute_command",
        "importance_score": 9,
        "description": "Directly grant readWrite role to admin on geo-db and verify user roles as a targeted fix.",
        "sequence_number": 1,
        "original_command": "exec_shell(\"kubectl exec -n test-hotel-reservation mongodb-geo-5ff578bcb8-7p9cb -- bash -lc \\'mongo admin -u admin -p admin --authenticationDatabase admin --eval \\\\\\\"db.grantRolesToUser(\\\\\\\\\\\\\"admin\\\\\\\\\\\\\", [{role: \\\\\\\\\\\\\"readWrite\\\\\\\\\\\\\", db: \\\\\\\\\\\\\"geo-db\\\\\\\\\\\\\"}]); db.getUser(\\\\\\\\\\\\\"admin\\\\\\\\\\\\\")\\\\\\\"\\'\\\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "5ff578bcb8-7p9cb",
            "placeholder": "<POD_SUFFIX>",
            "position": 63
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl exec -n test-hotel-reservation mongodb-geo-<POD_SUFFIX> -- bash -lc 'mongo admin -u admin -p admin --authenticationDatabase admin --eval \\\"db.grantRolesToUser(\\\\\\\"admin\\\\\\\", [{role: \\\\\\\"readWrite\\\\\\\", db: \\\\\\\"geo-db\\\\\\\"}]); db.getUser(\\\\\\\"admin\\\\\\\")\\\"'\")",
        "type": "execute_command",
        "importance_score": 8,
        "description": "Directly grant readWrite role to admin on geo-db and verify user roles as an alternate/confirmatory fix",
        "sequence_number": 2,
        "original_command": "exec_shell(\"kubectl exec -n test-hotel-reservation mongodb-geo-5ff578bcb8-7p9cb -- bash -lc 'mongo admin -u admin -p admin --authenticationDatabase admin --eval \\\"db.grantRolesToUser(\\\\\\\"admin\\\\\\\", [{role: \\\\\\\"readWrite\\\\\\\", db: \\\\\\\"geo-db\\\\\\\"}]); db.getUser(\\\\\\\"admin\\\\\\\")\\\"'\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "5ff578bcb8-7p9cb",
            "placeholder": "<POD_SUFFIX>",
            "position": 63
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl get pods -n test-hotel-reservation -o wide\")",
        "type": "probe_command",
        "importance_score": 3,
        "description": "Check overall pod status and placement after applying the fix.",
        "sequence_number": 3,
        "original_command": "exec_shell(\"kubectl get pods -n test-hotel-reservation -o wide\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation geo-<POD_SUFFIX> --tail=200\")",
        "type": "probe_command",
        "importance_score": 4,
        "description": "Verify whether the geo service regains authorization after mitigation.",
        "sequence_number": 4,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation geo-84fbc958c7-9nnqr --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "84fbc958c7-9nnqr",
            "placeholder": "<POD_SUFFIX>",
            "position": 55
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl exec -n test-hotel-reservation mongodb-geo-<POD_SUFFIX> -- bash -lc 'bash /scripts/revoke-miti<POD_SUFFIX>-mongo.sh'\")",
        "type": "execute_command",
        "importance_score": 10,
        "description": "Execute mitigation script in mongodb-geo pod to restore admin readWrite privileges on geo-db.",
        "sequence_number": 5,
        "original_command": "exec_shell(\"kubectl exec -n test-hotel-reservation mongodb-geo-5ff578bcb8-7p9cb -- bash -lc 'bash /scripts/revoke-mitigate-admin-geo-mongo.sh'\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "5ff578bcb8-7p9cb",
            "placeholder": "<POD_SUFFIX>",
            "position": 63
          },
          {
            "type": "k8s_pod_suffix",
            "original": "mitigate-admin",
            "placeholder": "<POD_SUFFIX>",
            "position": 114
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl exec -n test-hotel-reservation mongodb-geo-<POD_SUFFIX> -- bash -lc \\'bash /scripts/revoke-miti<POD_SUFFIX>-mongo.sh\\'\")",
        "type": "execute_command",
        "importance_score": 10,
        "description": "Execute remediation script inside mongodb-geo pod to restore admin readWrite role on geo-db.",
        "sequence_number": 6,
        "original_command": "exec_shell(\"kubectl exec -n test-hotel-reservation mongodb-geo-5ff578bcb8-7p9cb -- bash -lc \\'bash /scripts/revoke-mitigate-admin-geo-mongo.sh\\'\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "5ff578bcb8-7p9cb",
            "placeholder": "<POD_SUFFIX>",
            "position": 63
          },
          {
            "type": "k8s_pod_suffix",
            "original": "mitigate-admin",
            "placeholder": "<POD_SUFFIX>",
            "position": 115
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation deploy/mongodb-geo --tail=200; kubectl get configmap -n test-hotel-reservation mongo-geo-script -o yaml; kubectl get configmap -n test-hotel-reservation failure-admin-geo -o yaml\")",
        "type": "probe_command",
        "importance_score": 8,
        "description": "Review mongodb-geo logs and inspect init/failure scripts to identify revoke and mitigation actions.",
        "sequence_number": 7,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation deploy/mongodb-geo --tail=200; kubectl get configmap -n test-hotel-reservation mongo-geo-script -o yaml; kubectl get configmap -n test-hotel-reservation failure-admin-geo -o yaml\")"
      },
      {
        "command": "exec_shell(\"kubectl get deploy -n test-hotel-reservation mongodb-profile -o yaml; kubectl get deploy -n test-hotel-reservation profile -o yaml\")",
        "type": "probe_command",
        "importance_score": 3,
        "description": "Compare related services and databases for reference configuration.",
        "sequence_number": 8,
        "original_command": "exec_shell(\"kubectl get deploy -n test-hotel-reservation mongodb-profile -o yaml; kubectl get deploy -n test-hotel-reservation profile -o yaml\")"
      },
      {
        "command": "exec_shell(\"kubectl get deploy,sts,po,svc -n test-hotel-reservation | grep mongodb-geo -n; kubectl get all -n test-hotel-reservation | grep mongodb-geo; kubectl get deploy -n test-hotel-reservation mongodb-geo -o yaml || kubectl get sts -n test-hotel-reservation mongodb-geo -o yaml\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "Locate and inspect mongodb-geo resources and their configuration.",
        "sequence_number": 9,
        "original_command": "exec_shell(\"kubectl get deploy,sts,po,svc -n test-hotel-reservation | grep mongodb-geo -n; kubectl get all -n test-hotel-reservation | grep mongodb-geo; kubectl get deploy -n test-hotel-reservation mongodb-geo -o yaml || kubectl get sts -n test-hotel-reservation mongodb-geo -o yaml\")"
      },
      {
        "command": "exec_shell(\"kubectl get deploy -n test-hotel-reservation geo -o yaml\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Review geo deployment configuration for environment and connectivity settings.",
        "sequence_number": 10,
        "original_command": "exec_shell(\"kubectl get deploy -n test-hotel-reservation geo -o yaml\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation geo-<POD_SUFFIX> --all-containers=true --tail=200\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "Inspect geo service logs to confirm authorization errors against MongoDB.",
        "sequence_number": 11,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation geo-84fbc958c7-9nnqr --all-containers=true --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "84fbc958c7-9nnqr",
            "placeholder": "<POD_SUFFIX>",
            "position": 55
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "List all pods in the namespace to identify failing components.",
        "sequence_number": 12,
        "original_command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")"
      }
    ]
  },
  {
    "problem_id": "user_unregistered_mongodb-analysis-1",
    "key_commands": [
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation mongodb-profile-<POD_SUFFIX> --tail=50\")",
        "type": "probe_command",
        "importance_score": 3,
        "description": "Obtains logs from another MongoDB instance (profile DB) for comparison of auth settings and behavior.",
        "sequence_number": 1,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation mongodb-profile-758cb77f9f-nq96g --tail=50\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "758cb77f9f-nq96g",
            "placeholder": "<POD_SUFFIX>",
            "position": 67
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl get deploy -n test-hotel-reservation geo -o yaml\")",
        "type": "probe_command",
        "importance_score": 4,
        "description": "Checks the geo service deployment configuration for environment and connectivity expectations.",
        "sequence_number": 2,
        "original_command": "exec_shell(\"kubectl get deploy -n test-hotel-reservation geo -o yaml\")"
      },
      {
        "command": "exec_shell(\"kubectl get configmap -n test-hotel-reservation failure-admin-geo -o yaml\")",
        "type": "probe_command",
        "importance_score": 8,
        "description": "Inspects failure/mitigation scripts that remove or alter admin privileges, explaining why the admin user is missing.",
        "sequence_number": 3,
        "original_command": "exec_shell(\"kubectl get configmap -n test-hotel-reservation failure-admin-geo -o yaml\")"
      },
      {
        "command": "exec_shell(\"kubectl get configmap -n test-hotel-reservation mongo-geo-script -o yaml\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "Reads the MongoDB initialization script that creates admin/root users, verifying intended user setup.",
        "sequence_number": 4,
        "original_command": "exec_shell(\"kubectl get configmap -n test-hotel-reservation mongo-geo-script -o yaml\")"
      },
      {
        "command": "exec_shell(\"kubectl get configmap -n test-hotel-reservation -o wide\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Lists ConfigMaps to discover initialization and failure scripts related to MongoDB user management.",
        "sequence_number": 5,
        "original_command": "exec_shell(\"kubectl get configmap -n test-hotel-reservation -o wide\")"
      },
      {
        "command": "exec_shell(\"kubectl get deploy -n test-hotel-reservation mongodb-geo -o yaml\")",
        "type": "probe_command",
        "importance_score": 8,
        "description": "Examines the MongoDB geo deployment configuration (e.g., --auth and mounted scripts) to understand auth setup and init sources.",
        "sequence_number": 6,
        "original_command": "exec_shell(\"kubectl get deploy -n test-hotel-reservation mongodb-geo -o yaml\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation mongodb-geo-<POD_SUFFIX> --tail=200\")",
        "type": "probe_command",
        "importance_score": 9,
        "description": "Fetches MongoDB geo pod logs confirming 'UserNotFound' for admin, pinpointing the authentication root cause.",
        "sequence_number": 7,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation mongodb-geo-5ff578bcb8-mhzrb --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "5ff578bcb8-mhzrb",
            "placeholder": "<POD_SUFFIX>",
            "position": 63
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation geo-<POD_SUFFIX> -<REPLICA_SUFFIX>\")",
        "type": "probe_command",
        "importance_score": 9,
        "description": "Retrieves previous logs for the geo service pod to reveal the application error, showing MongoDB authentication failure.",
        "sequence_number": 8,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation geo-84fbc958c7-nz4rw --previous\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "84fbc958c7-nz4rw",
            "placeholder": "<POD_SUFFIX>",
            "position": 55
          },
          {
            "type": "k8s_replicaset_suffix",
            "original": "-previous",
            "placeholder": "<REPLICA_SUFFIX>",
            "position": 69
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Lists all pods in the namespace to identify failing components and targets for deeper inspection.",
        "sequence_number": 9,
        "original_command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")"
      }
    ]
  },
  {
    "problem_id": "container_kill-detection",
    "key_commands": [
      {
        "command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")",
        "type": "probe_command",
        "importance_score": 8,
        "description": "List all pods in the namespace to identify abnormal statuses or restarts; shows geo pod has restarted, indicating a potential container kill.",
        "sequence_number": 1,
        "original_command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation geo-<POD_SUFFIX> -<REPLICA_SUFFIX>\")",
        "type": "probe_command",
        "importance_score": 9,
        "description": "Retrieve previous logs of the geo pod to confirm a prior container instance existed and likely crashed/restarted, supporting container kill detection.",
        "sequence_number": 2,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation geo-84fbc958c7-ttts8 --previous\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "84fbc958c7-ttts8",
            "placeholder": "<POD_SUFFIX>",
            "position": 55
          },
          {
            "type": "k8s_replicaset_suffix",
            "original": "-previous",
            "placeholder": "<REPLICA_SUFFIX>",
            "position": 69
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation geo-<POD_SUFFIX> --tail=200\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Check current logs of the geo pod to verify it restarted and is running post-restart.",
        "sequence_number": 3,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation geo-84fbc958c7-ttts8 --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "84fbc958c7-ttts8",
            "placeholder": "<POD_SUFFIX>",
            "position": 55
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation search-<POD_SUFFIX> --tail=200\")",
        "type": "probe_command",
        "importance_score": 3,
        "description": "Inspect search service logs for cross-validation of overall system behavior; auxiliary to the main detection.",
        "sequence_number": 4,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation search-5c64c8f5bc-crdl4 --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "5c64c8f5bc-crdl4",
            "placeholder": "<POD_SUFFIX>",
            "position": 58
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation frontend-<POD_SUFFIX> --tail=200\")",
        "type": "probe_command",
        "importance_score": 3,
        "description": "Inspect frontend service logs for errors and service discovery issues; auxiliary validation.",
        "sequence_number": 5,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation frontend-7fc7ddc9db-fnnz2 --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "7fc7ddc9db-fnnz2",
            "placeholder": "<POD_SUFFIX>",
            "position": 60
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl get events -n test-hotel-reservation --sort-by=.metadata.creationTimestamp\")",
        "type": "probe_command",
        "importance_score": 10,
        "description": "Retrieve Kubernetes events to find explicit evidence of PodChaos container-kill applied to geo/hotel-reserv-geo, conclusively identifying the anomaly.",
        "sequence_number": 6,
        "original_command": "exec_shell(\"kubectl get events -n test-hotel-reservation --sort-by=.metadata.creationTimestamp\")"
      },
      {
        "command": "submit(\"Yes\")",
        "type": "execute_command",
        "importance_score": 10,
        "description": "Submit the anomaly detection decision to complete the task.",
        "sequence_number": 7,
        "original_command": "submit(\"Yes\")"
      }
    ]
  },
  {
    "problem_id": "k8s_target_port-misconfig-localization-1",
    "key_commands": [
      {
        "command": "exec_shell(\"kubectl get pods -n test-social-network\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "List pods in the namespace to verify components are running and obtain pod names.",
        "sequence_number": 1,
        "original_command": "exec_shell(\"kubectl get pods -n test-social-network\")"
      },
      {
        "command": "exec_shell(\"kubectl get pods -n test-social-network -o name | xargs -I{} sh -c 'echo ==== {}; kubectl logs -n test-social-network --since=10m {} 2>&1 | grep -Ei \\\"error|exception|fail|timeout|refused|unavailable|panic\\\" || echo no-errors'\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "Aggregate recent pod logs and filter for errors to detect connection issues pointing toward user-service.",
        "sequence_number": 2,
        "original_command": "exec_shell(\"kubectl get pods -n test-social-network -o name | xargs -I{} sh -c 'echo ==== {}; kubectl logs -n test-social-network --since=10m {} 2>&1 | grep -Ei \\\"error|exception|fail|timeout|refused|unavailable|panic\\\" || echo no-errors'\")"
      },
      {
        "command": "exec_shell(\"kubectl get svc -n test-social-network -o wide && echo '---' && kubectl get endpoints -n test-social-network\")",
        "type": "probe_command",
        "importance_score": 9,
        "description": "Show Services and their Endpoints to spot port mismatches; reveals user-service endpoints exposing port 8080.",
        "sequence_number": 3,
        "original_command": "exec_shell(\"kubectl get svc -n test-social-network -o wide && echo '---' && kubectl get endpoints -n test-social-network\")"
      },
      {
        "command": "exec_shell(\"kubectl describe pod -n test-social-network user-service-<POD_SUFFIX>\")",
        "type": "probe_command",
        "importance_score": 8,
        "description": "Inspect the user-service pod to confirm the container's listening port (9090).",
        "sequence_number": 4,
        "original_command": "exec_shell(\"kubectl describe pod -n test-social-network user-service-6d5985bd55-sgg26\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "6d5985bd55-sgg26",
            "placeholder": "<POD_SUFFIX>",
            "position": 69
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl get svc user-service -n test-social-network -o yaml\")",
        "type": "probe_command",
        "importance_score": 10,
        "description": "Fetch the user-service Service spec; confirms targetPort is misconfigured to 8080 (should be 9090).",
        "sequence_number": 5,
        "original_command": "exec_shell(\"kubectl get svc user-service -n test-social-network -o yaml\")"
      },
      {
        "command": "submit([\"user-service\"])",
        "type": "execute_command",
        "importance_score": 8,
        "description": "Submit the localized faulty component based on the detected targetPort misconfiguration.",
        "sequence_number": 6,
        "original_command": "submit([\"user-service\"])"
      }
    ]
  },
  {
    "problem_id": "network_loss_hotel_res-localization-1",
    "key_commands": [
      {
        "command": "exec_shell(\"kubectl run -n test-hotel-reservation curl --restart=Never --rm -i --image=curlimages/curl -- sh -lc \\'curl -sS -v \\\\\"http://frontend:5000/recommendations?inDate=2015-04-09&outDate=2015-04-10&lat=37.7749&lon=-122.4194&require=rate\\\\\\\"\\'\")",
        "type": "execute_command",
        "importance_score": 9,
        "description": "E2E test for recommendations endpoint with required parameter; confirms successful end-to-end behavior.",
        "sequence_number": 1,
        "original_command": "exec_shell(\"kubectl run -n test-hotel-reservation curl --restart=Never --rm -i --image=curlimages/curl -- sh -lc \\'curl -sS -v \\\\\"http://frontend:5000/recommendations?inDate=2015-04-09&outDate=2015-04-10&lat=37.7749&lon=-122.4194&require=rate\\\\\\\"\\'\")"
      },
      {
        "command": "exec_shell(\"kubectl run -n test-hotel-reservation curl --restart=Never --rm -i --image=curlimages/curl -- sh -lc 'curl -sS -v \\\"http://frontend:5000/reservation?hotelId=1&inDate=2015-04-09&outDate=2015-04-10&customerName=John\\\"'\")",
        "type": "execute_command",
        "importance_score": 5,
        "description": "Ephemeral curl pod to exercise reservation flow and observe request validation behavior",
        "sequence_number": 2,
        "original_command": "exec_shell(\"kubectl run -n test-hotel-reservation curl --restart=Never --rm -i --image=curlimages/curl -- sh -lc 'curl -sS -v \\\"http://frontend:5000/reservation?hotelId=1&inDate=2015-04-09&outDate=2015-04-10&customerName=John\\\"'\")"
      },
      {
        "command": "exec_shell(\"kubectl run -n test-hotel-reservation curl --restart=Never --rm -i --image=curlimages/curl -- sh -lc 'curl -sS -v \\\"http://frontend:5000/recommendations?inDate=2015-04-09&outDate=2015-04-10&lat=37.7749&lon=-122.4194&require=rate\\\"'\")",
        "type": "execute_command",
        "importance_score": 7,
        "description": "Ephemeral curl pod to validate recommendations endpoint with required parameter (expects 200)",
        "sequence_number": 3,
        "original_command": "exec_shell(\"kubectl run -n test-hotel-reservation curl --restart=Never --rm -i --image=curlimages/curl -- sh -lc 'curl -sS -v \\\"http://frontend:5000/recommendations?inDate=2015-04-09&outDate=2015-04-10&lat=37.7749&lon=-122.4194&require=rate\\\"'\")"
      },
      {
        "command": "exec_shell(\"kubectl run -n test-hotel-reservation curl --restart=Never --rm -i --image=curlimages/curl -- curl -sS -v http://frontend:5000/reservation?hotelId=1&inDate=2015-04-09&outDate=2015-04-10&customerName=John\")",
        "type": "execute_command",
        "importance_score": 3,
        "description": "Attempt to place a reservation to validate end-to-end booking path",
        "sequence_number": 4,
        "original_command": "exec_shell(\"kubectl run -n test-hotel-reservation curl --restart=Never --rm -i --image=curlimages/curl -- curl -sS -v http://frontend:5000/reservation?hotelId=1&inDate=2015-04-09&outDate=2015-04-10&customerName=John\")"
      },
      {
        "command": "exec_shell(\"kubectl run -n test-hotel-reservation curl --restart=Never --rm -i --image=curlimages/curl -- curl -sS -v 'http://frontend:5000/recommendations?inDate=2015-04-09&outDate=2015-04-10&lat=37.7749&lon=-122.4194'\")",
        "type": "execute_command",
        "importance_score": 4,
        "description": "Ephemeral curl pod to test recommendations endpoint (observes 400 without required params)",
        "sequence_number": 5,
        "original_command": "exec_shell(\"kubectl run -n test-hotel-reservation curl --restart=Never --rm -i --image=curlimages/curl -- curl -sS -v 'http://frontend:5000/recommendations?inDate=2015-04-09&outDate=2015-04-10&lat=37.7749&lon=-122.4194'\")"
      },
      {
        "command": "exec_shell(\"kubectl run -n test-hotel-reservation curl --restart=Never --rm -i --image=curlimages/curl -- curl -sS -v \\'http://frontend:5000/recommendations?inDate=2015-04-09&outDate=2015-04-10&lat=37.7749&lon=-122.4194\\'\")",
        "type": "execute_command",
        "importance_score": 9,
        "description": "Call recommendations endpoint to reveal client-side 400 due to missing required parameter, indicating no backend fault",
        "sequence_number": 6,
        "original_command": "exec_shell(\"kubectl run -n test-hotel-reservation curl --restart=Never --rm -i --image=curlimages/curl -- curl -sS -v \\'http://frontend:5000/recommendations?inDate=2015-04-09&outDate=2015-04-10&lat=37.7749&lon=-122.4194\\'\")"
      },
      {
        "command": "exec_shell(\"kubectl run -n test-hotel-reservation curl --restart=Never --rm -i --image=curlimages/curl -- curl -sS -v 'http://frontend:5000/hotels?inDate=2015-04-09&outDate=2015-04-10&lat=37.7749&lon=-122.4194'\")",
        "type": "execute_command",
        "importance_score": 7,
        "description": "Ephemeral curl pod to exercise hotels search flow across backend services",
        "sequence_number": 7,
        "original_command": "exec_shell(\"kubectl run -n test-hotel-reservation curl --restart=Never --rm -i --image=curlimages/curl -- curl -sS -v 'http://frontend:5000/hotels?inDate=2015-04-09&outDate=2015-04-10&lat=37.7749&lon=-122.4194'\")"
      },
      {
        "command": "exec_shell(\"kubectl run -n test-hotel-reservation curl --restart=Never --rm -i --image=curlimages/curl -- curl -sS -v \\'http://frontend:5000/hotels?inDate=2015-04-09&outDate=2015-04-10&lat=37.7749&lon=-122.4194\\'\")",
        "type": "execute_command",
        "importance_score": 8,
        "description": "Call hotels endpoint to verify core functionality returns valid data (200 OK)",
        "sequence_number": 8,
        "original_command": "exec_shell(\"kubectl run -n test-hotel-reservation curl --restart=Never --rm -i --image=curlimages/curl -- curl -sS -v \\'http://frontend:5000/hotels?inDate=2015-04-09&outDate=2015-04-10&lat=37.7749&lon=-122.4194\\'\")"
      },
      {
        "command": "exec_shell(\"kubectl run -n test-hotel-reservation curl --restart=Never --rm -i --image=curlimages/curl -- curl -sS http://frontend:5000/\")",
        "type": "execute_command",
        "importance_score": 6,
        "description": "Launch an ephemeral curl pod to verify the frontend homepage responds",
        "sequence_number": 9,
        "original_command": "exec_shell(\"kubectl run -n test-hotel-reservation curl --restart=Never --rm -i --image=curlimages/curl -- curl -sS http://frontend:5000/\")"
      },
      {
        "command": "exec_shell(\"kubectl describe deploy -n test-hotel-reservation frontend search recommendation profile rate geo user reservation | sed -n '1,200p'\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Describe deployments to validate images, ports, env vars, and rollout status",
        "sequence_number": 10,
        "original_command": "exec_shell(\"kubectl describe deploy -n test-hotel-reservation frontend search recommendation profile rate geo user reservation | sed -n '1,200p'\")"
      },
      {
        "command": "exec_shell(\"kubectl describe deploy -n test-hotel-reservation frontend search recommendation profile rate geo user reservation | sed -n \\'1,200p\\'\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Describe multiple deployments to verify images, commands, resources, and conditions.",
        "sequence_number": 11,
        "original_command": "exec_shell(\"kubectl describe deploy -n test-hotel-reservation frontend search recommendation profile rate geo user reservation | sed -n \\'1,200p\\'\")"
      },
      {
        "command": "exec_shell(\"kubectl get pods -n test-hotel-reservation -o wide\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Get pod IPs and node placement to assist with network path analysis",
        "sequence_number": 12,
        "original_command": "exec_shell(\"kubectl get pods -n test-hotel-reservation -o wide\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation deploy/reservation --tail=200\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Inspect reservation service logs for DB/memcached connectivity and Consul registration",
        "sequence_number": 13,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation deploy/reservation --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation deploy/geo --tail=200\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Inspect geo service logs for DB connectivity and Consul registration",
        "sequence_number": 14,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation deploy/geo --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation deploy/rate --tail=200\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Inspect rate service logs for DB/memcached connectivity and Consul registration",
        "sequence_number": 15,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation deploy/rate --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation deploy/profile --tail=200\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Inspect profile service logs for DB/memcached connectivity and Consul registration",
        "sequence_number": 16,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation deploy/profile --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation deploy/recommendation --tail=200\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Inspect recommendation service logs for DB init and Consul registration",
        "sequence_number": 17,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation deploy/recommendation --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation deploy/search --tail=200\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Inspect search service logs for health and Consul registration",
        "sequence_number": 18,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation deploy/search --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation deploy/user --tail=200\")",
        "type": "probe_command",
        "importance_score": 8,
        "description": "Review user service logs for health, DB connectivity, and registration status",
        "sequence_number": 19,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation deploy/user --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation deploy/consul --tail=200\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Check Consul control-plane logs for service registration and health queries",
        "sequence_number": 20,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation deploy/consul --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation deploy/frontend --tail=200\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "Inspect frontend logs for client-facing errors and upstream connectivity (e.g., Consul lookups)",
        "sequence_number": 21,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation deploy/frontend --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl get svc -n test-hotel-reservation\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "List services and ports to understand service discovery and cluster IPs",
        "sequence_number": 22,
        "original_command": "exec_shell(\"kubectl get svc -n test-hotel-reservation\")"
      },
      {
        "command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "List all pods in the namespace to verify component readiness and restarts",
        "sequence_number": 23,
        "original_command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")"
      }
    ]
  },
  {
    "problem_id": "user_unregistered_mongodb-localization-1",
    "key_commands": [
      {
        "command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "List all pods in the namespace to identify failing components.",
        "sequence_number": 1,
        "original_command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation geo-<POD_SUFFIX> -<REPLICA_SUFFIX>\")",
        "type": "probe_command",
        "importance_score": 4,
        "description": "Attempt to retrieve previous logs from the failing geo pod to inspect prior crashes.",
        "sequence_number": 2,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation geo-84fbc958c7-9dw68 --previous\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "84fbc958c7-9dw68",
            "placeholder": "<POD_SUFFIX>",
            "position": 55
          },
          {
            "type": "k8s_replicaset_suffix",
            "original": "-previous",
            "placeholder": "<REPLICA_SUFFIX>",
            "position": 69
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl describe pod -n test-hotel-reservation geo-<POD_SUFFIX>\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Describe the geo pod to review status, events, and restart reasons.",
        "sequence_number": 3,
        "original_command": "exec_shell(\"kubectl describe pod -n test-hotel-reservation geo-84fbc958c7-9dw68\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "84fbc958c7-9dw68",
            "placeholder": "<POD_SUFFIX>",
            "position": 63
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation geo-<POD_SUFFIX>\")",
        "type": "probe_command",
        "importance_score": 8,
        "description": "Fetch current logs from the geo service revealing MongoDB authentication failure.",
        "sequence_number": 4,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation geo-84fbc958c7-9dw68\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "84fbc958c7-9dw68",
            "placeholder": "<POD_SUFFIX>",
            "position": 55
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation mongodb-geo-<POD_SUFFIX> --tail=200\")",
        "type": "probe_command",
        "importance_score": 10,
        "description": "Inspect MongoDB geo logs showing 'UserNotFound' for admin, pinpointing the root cause.",
        "sequence_number": 5,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation mongodb-geo-5ff578bcb8-td8ck --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "5ff578bcb8-td8ck",
            "placeholder": "<POD_SUFFIX>",
            "position": 63
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl get deploy -n test-hotel-reservation geo -o yaml\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Review geo deployment configuration for environment and command details.",
        "sequence_number": 6,
        "original_command": "exec_shell(\"kubectl get deploy -n test-hotel-reservation geo -o yaml\")"
      },
      {
        "command": "exec_shell(\"kubectl get deploy -n test-hotel-reservation mongodb-geo -o yaml\")",
        "type": "probe_command",
        "importance_score": 8,
        "description": "Review mongodb-geo deployment configuration showing --auth and init/failure scripts references.",
        "sequence_number": 7,
        "original_command": "exec_shell(\"kubectl get deploy -n test-hotel-reservation mongodb-geo -o yaml\")"
      },
      {
        "command": "exec_shell(\"kubectl get configmap -n test-hotel-reservation failure-admin-geo mongo-geo-script -o yaml\")",
        "type": "probe_command",
        "importance_score": 9,
        "description": "Fetch ConfigMaps that contain scripts modifying MongoDB users/roles, confirming admin user manipulation.",
        "sequence_number": 8,
        "original_command": "exec_shell(\"kubectl get configmap -n test-hotel-reservation failure-admin-geo mongo-geo-script -o yaml\")"
      },
      {
        "command": "submit([\"mongodb-geo\"])",
        "type": "execute_command",
        "importance_score": 10,
        "description": "Submit the identified faulty component (mongodb-geo) as the root cause.",
        "sequence_number": 9,
        "original_command": "submit([\"mongodb-geo\"])"
      }
    ]
  },
  {
    "problem_id": "pod_kill_hotel_res-detection-1",
    "key_commands": [
      {
        "command": "submit(\"No\")",
        "type": "execute_command",
        "importance_score": 10,
        "description": "Submit the final decision indicating no anomalies detected.",
        "sequence_number": 1,
        "original_command": "submit(\"No\")"
      },
      {
        "command": "exec_shell(\"kubectl logs deploy/frontend -n test-hotel-reservation --tail=100\")",
        "type": "probe_command",
        "importance_score": 4,
        "description": "Re-check frontend logs to confirm stabilized state after initial errors.",
        "sequence_number": 2,
        "original_command": "exec_shell(\"kubectl logs deploy/frontend -n test-hotel-reservation --tail=100\")"
      },
      {
        "command": "exec_shell(\"kubectl logs deploy/reservation -n test-hotel-reservation --tail=200\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Verify reservation service DB/memcache init and Consul registration.",
        "sequence_number": 3,
        "original_command": "exec_shell(\"kubectl logs deploy/reservation -n test-hotel-reservation --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl logs deploy/geo -n test-hotel-reservation --tail=200\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Verify geo service DB connectivity and Consul registration.",
        "sequence_number": 4,
        "original_command": "exec_shell(\"kubectl logs deploy/geo -n test-hotel-reservation --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl logs deploy/rate -n test-hotel-reservation --tail=200\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Verify rate service DB/memcache init and Consul registration.",
        "sequence_number": 5,
        "original_command": "exec_shell(\"kubectl logs deploy/rate -n test-hotel-reservation --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl logs deploy/profile -n test-hotel-reservation --tail=200\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Verify profile service DB connectivity and Consul registration.",
        "sequence_number": 6,
        "original_command": "exec_shell(\"kubectl logs deploy/profile -n test-hotel-reservation --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl logs deploy/recommendation -n test-hotel-reservation --tail=200\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Verify recommendation service startup and Consul registration.",
        "sequence_number": 7,
        "original_command": "exec_shell(\"kubectl logs deploy/recommendation -n test-hotel-reservation --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl logs deploy/search -n test-hotel-reservation --tail=200\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Verify search service initialization and successful Consul registration.",
        "sequence_number": 8,
        "original_command": "exec_shell(\"kubectl logs deploy/search -n test-hotel-reservation --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl get events -n test-hotel-reservation --sort-by=.lastTimestamp | tail -n 50\")",
        "type": "probe_command",
        "importance_score": 10,
        "description": "Fetch recent namespace events to identify the PodChaos pod-kill operation and related pod lifecycle events.",
        "sequence_number": 9,
        "original_command": "exec_shell(\"kubectl get events -n test-hotel-reservation --sort-by=.lastTimestamp | tail -n 50\")"
      },
      {
        "command": "exec_shell(\"kubectl logs deploy/consul -n test-hotel-reservation --tail=200\")",
        "type": "probe_command",
        "importance_score": 8,
        "description": "Check Consul logs to confirm agent health and service registration behavior.",
        "sequence_number": 10,
        "original_command": "exec_shell(\"kubectl logs deploy/consul -n test-hotel-reservation --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl logs deploy/user -n test-hotel-reservation --tail=200\")",
        "type": "probe_command",
        "importance_score": 9,
        "description": "Review the user service logs to confirm restart behavior and recent startup after a kill event.",
        "sequence_number": 11,
        "original_command": "exec_shell(\"kubectl logs deploy/user -n test-hotel-reservation --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl logs deploy/frontend -n test-hotel-reservation --tail=200\")",
        "type": "probe_command",
        "importance_score": 9,
        "description": "Review frontend logs for errors and connectivity to dependencies (e.g., Consul).",
        "sequence_number": 12,
        "original_command": "exec_shell(\"kubectl logs deploy/frontend -n test-hotel-reservation --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl get deploy -n test-hotel-reservation\")",
        "type": "probe_command",
        "importance_score": 4,
        "description": "Inspect deployment readiness and replica counts for anomalies.",
        "sequence_number": 13,
        "original_command": "exec_shell(\"kubectl get deploy -n test-hotel-reservation\")"
      },
      {
        "command": "exec_shell(\"kubectl get svc,endpoints -n test-hotel-reservation\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Check services and endpoints to verify service exposure and backing pod endpoints.",
        "sequence_number": 14,
        "original_command": "exec_shell(\"kubectl get svc,endpoints -n test-hotel-reservation\")"
      },
      {
        "command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "List all pods in the namespace to observe current status and potential restarts.",
        "sequence_number": 15,
        "original_command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")"
      }
    ]
  },
  {
    "problem_id": "astronomy_shop_ad_service_manual_gc-localization-1",
    "key_commands": [
      {
        "command": "exec_shell(\"kubectl logs -n astronomy-shop <POD_SUFFIX>-54<POD_SUFFIX>-tail=200\")",
        "type": "probe_command",
        "importance_score": 2,
        "description": "Check frontend-proxy (Envoy) logs for proxy-level issues",
        "sequence_number": 1,
        "original_command": "exec_shell(\"kubectl logs -n astronomy-shop frontend-proxy-548b4649d7-zf48s --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "frontend-proxy",
            "placeholder": "<POD_SUFFIX>",
            "position": 43
          },
          {
            "type": "k8s_pod_suffix",
            "original": "548b4649d7-zf48s",
            "placeholder": "<POD_SUFFIX>",
            "position": 58
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl exec -n astronomy-shop frontend-<POD_SUFFIX> -- sh -c 'apk add --no-cache curl >/dev/null 2>&1 || true; for svc in cart ad checkout; do echo Testing $svc; curl -sS -m 3 http://$svc:8080/ || echo failed; echo; done'\")",
        "type": "execute_command",
        "importance_score": 3,
        "description": "Attempt in-pod HTTP probes from frontend to backend services (installation of curl attempted)",
        "sequence_number": 2,
        "original_command": "exec_shell(\"kubectl exec -n astronomy-shop frontend-7d6b77c58-zrrcw -- sh -c 'apk add --no-cache curl >/dev/null 2>&1 || true; for svc in cart ad checkout; do echo Testing $svc; curl -sS -m 3 http://$svc:8080/ || echo failed; echo; done'\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "7d6b77c58-zrrcw",
            "placeholder": "<POD_SUFFIX>",
            "position": 52
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl get pod frontend-<POD_SUFFIX> -n astronomy-shop -o yaml\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Inspect frontend pod configuration (service addresses and OTEL settings)",
        "sequence_number": 3,
        "original_command": "exec_shell(\"kubectl get pod frontend-7d6b77c58-zrrcw -n astronomy-shop -o yaml\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "7d6b77c58-zrrcw",
            "placeholder": "<POD_SUFFIX>",
            "position": 37
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n astronomy-shop frontend-<POD_SUFFIX> --tail=50\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "Re-check recent frontend errors for persistent connectivity failures",
        "sequence_number": 4,
        "original_command": "exec_shell(\"kubectl logs -n astronomy-shop frontend-7d6b77c58-zrrcw --tail=50\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "7d6b77c58-zrrcw",
            "placeholder": "<POD_SUFFIX>",
            "position": 52
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n astronomy-shop cart-<POD_SUFFIX> -c cart --tail=200\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Fetch logs from the cart container specifically to validate normal operation",
        "sequence_number": 5,
        "original_command": "exec_shell(\"kubectl logs -n astronomy-shop cart-6fd857c656-js2hf -c cart --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "6fd857c656-js2hf",
            "placeholder": "<POD_SUFFIX>",
            "position": 48
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl get pods -n astronomy-shop -l opentelemetry.io/name=cart -o jsonpath=\\'{.items[*].metadata.name} {.items[*].metadata.labels}\\'\")",
        "type": "probe_command",
        "importance_score": 3,
        "description": "List cart pods via label selector to confirm label consistency with Service selectors.",
        "sequence_number": 6,
        "original_command": "exec_shell(\"kubectl get pods -n astronomy-shop -l opentelemetry.io/name=cart -o jsonpath=\\'{.items[*].metadata.name} {.items[*].metadata.labels}\\'\")"
      },
      {
        "command": "exec_shell(\"kubectl get pod checkout-<POD_SUFFIX> -n astronomy-shop -o yaml\")",
        "type": "probe_command",
        "importance_score": 4,
        "description": "Inspect checkout pod configuration and status details",
        "sequence_number": 7,
        "original_command": "exec_shell(\"kubectl get pod checkout-5bc54f8cd8-92x8c -n astronomy-shop -o yaml\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "5bc54f8cd8-92x8c",
            "placeholder": "<POD_SUFFIX>",
            "position": 37
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl get pod ad-<POD_SUFFIX> -n astronomy-shop -o yaml\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Inspect ad pod configuration and lastState for restart/termination clues",
        "sequence_number": 8,
        "original_command": "exec_shell(\"kubectl get pod ad-94bd576b5-ktlqr -n astronomy-shop -o yaml\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "94bd576b5-ktlqr",
            "placeholder": "<POD_SUFFIX>",
            "position": 31
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl describe svc -n astronomy-shop cart\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "Describe cart service to confirm selectors, ports, and active endpoints",
        "sequence_number": 9,
        "original_command": "exec_shell(\"kubectl describe svc -n astronomy-shop cart\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n astronomy-shop checkout-<POD_SUFFIX> --tail=200\")",
        "type": "probe_command",
        "importance_score": 4,
        "description": "Fetch checkout service logs for error indications",
        "sequence_number": 10,
        "original_command": "exec_shell(\"kubectl logs -n astronomy-shop checkout-5bc54f8cd8-92x8c --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "5bc54f8cd8-92x8c",
            "placeholder": "<POD_SUFFIX>",
            "position": 52
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl get pod cart-<POD_SUFFIX> -n astronomy-shop -o yaml\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Inspect cart pod specification and status for configuration and readiness details",
        "sequence_number": 11,
        "original_command": "exec_shell(\"kubectl get pod cart-6fd857c656-js2hf -n astronomy-shop -o yaml\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "6fd857c656-js2hf",
            "placeholder": "<POD_SUFFIX>",
            "position": 33
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl get endpoints -n astronomy-shop ad cart checkout -o wide\")",
        "type": "probe_command",
        "importance_score": 8,
        "description": "Verify service endpoints resolve to healthy pods and correct ports",
        "sequence_number": 12,
        "original_command": "exec_shell(\"kubectl get endpoints -n astronomy-shop ad cart checkout -o wide\")"
      },
      {
        "command": "exec_shell(\"kubectl get pods -n astronomy-shop -l opentelemetry.io/name=cart -o jsonpath='{.items[*].metadata.name} {.items[*].metadata.labels}'\")",
        "type": "probe_command",
        "importance_score": 3,
        "description": "Query cart pod name and labels for targeting and verification",
        "sequence_number": 13,
        "original_command": "exec_shell(\"kubectl get pods -n astronomy-shop -l opentelemetry.io/name=cart -o jsonpath='{.items[*].metadata.name} {.items[*].metadata.labels}'\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n astronomy-shop cart-<POD_SUFFIX> --tail=200\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Check cart service pod logs for errors or readiness",
        "sequence_number": 14,
        "original_command": "exec_shell(\"kubectl logs -n astronomy-shop cart-6fd857c656-js2hf --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "6fd857c656-js2hf",
            "placeholder": "<POD_SUFFIX>",
            "position": 48
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl get svc -n astronomy-shop -o wide\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "List services and their ClusterIPs/ports to map frontend dependencies to backends",
        "sequence_number": 15,
        "original_command": "exec_shell(\"kubectl get svc -n astronomy-shop -o wide\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n astronomy-shop frontend-<POD_SUFFIX> --tail=200\")",
        "type": "probe_command",
        "importance_score": 8,
        "description": "Inspect frontend logs for errors and connectivity issues to backend services",
        "sequence_number": 16,
        "original_command": "exec_shell(\"kubectl logs -n astronomy-shop frontend-7d6b77c58-zrrcw --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "7d6b77c58-zrrcw",
            "placeholder": "<POD_SUFFIX>",
            "position": 52
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n astronomy-shop ad-<POD_SUFFIX>\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Fetch current logs for the ad service to verify it is running and listening",
        "sequence_number": 17,
        "original_command": "exec_shell(\"kubectl logs -n astronomy-shop ad-94bd576b5-ktlqr\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "94bd576b5-ktlqr",
            "placeholder": "<POD_SUFFIX>",
            "position": 46
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n astronomy-shop ad-<POD_SUFFIX> -<REPLICA_SUFFIX>\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Fetch previous container logs for the ad service to check recent crashes or restarts",
        "sequence_number": 18,
        "original_command": "exec_shell(\"kubectl logs -n astronomy-shop ad-94bd576b5-ktlqr --previous\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "94bd576b5-ktlqr",
            "placeholder": "<POD_SUFFIX>",
            "position": 46
          },
          {
            "type": "k8s_replicaset_suffix",
            "original": "-previous",
            "placeholder": "<REPLICA_SUFFIX>",
            "position": 60
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl get pods -n astronomy-shop\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "List all pods in the astronomy-shop namespace to assess overall service health and restarts",
        "sequence_number": 19,
        "original_command": "exec_shell(\"kubectl get pods -n astronomy-shop\")"
      }
    ]
  },
  {
    "problem_id": "k8s_target_port-misconfig-analysis-2",
    "key_commands": [
      {
        "command": "submit({\"system_level\": \"Application\", \"fault_type\": \"Misconfiguration\"})",
        "type": "execute_command",
        "importance_score": 1,
        "description": "Submit the final analysis identifying the issue category.",
        "sequence_number": 1,
        "original_command": "submit({\"system_level\": \"Application\", \"fault_type\": \"Misconfiguration\"})"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-social-network deploy/user-mongodb --tail=200\")",
        "type": "probe_command",
        "importance_score": 3,
        "description": "Check MongoDB logs to confirm it is listening and accepting connections on expected port.",
        "sequence_number": 2,
        "original_command": "exec_shell(\"kubectl logs -n test-social-network deploy/user-mongodb --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl get configmap -n test-social-network\")",
        "type": "probe_command",
        "importance_score": 2,
        "description": "List ConfigMaps to verify presence of configuration resources referenced by workloads.",
        "sequence_number": 3,
        "original_command": "exec_shell(\"kubectl get configmap -n test-social-network\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-social-network deploy/user-service --tail=200\")",
        "type": "probe_command",
        "importance_score": 3,
        "description": "Inspect user-service logs for dependency connection issues that might indicate misconfiguration.",
        "sequence_number": 4,
        "original_command": "exec_shell(\"kubectl logs -n test-social-network deploy/user-service --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl get events -n test-social-network --sort-by=.metadata.creationTimestamp\")",
        "type": "probe_command",
        "importance_score": 4,
        "description": "Review ordered Kubernetes events to surface warnings/errors (e.g., FailedMount) and rollout signals.",
        "sequence_number": 5,
        "original_command": "exec_shell(\"kubectl get events -n test-social-network --sort-by=.metadata.creationTimestamp\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-social-network deploy/nginx-thrift --tail=200\")",
        "type": "probe_command",
        "importance_score": 2,
        "description": "Fetch recent logs from the nginx-thrift deployment to look for request or connectivity errors.",
        "sequence_number": 6,
        "original_command": "exec_shell(\"kubectl logs -n test-social-network deploy/nginx-thrift --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl get svc -n test-social-network -o wide\")",
        "type": "probe_command",
        "importance_score": 9,
        "description": "List services with port details to inspect service port exposure and detect potential port/targetPort mismatches.",
        "sequence_number": 7,
        "original_command": "exec_shell(\"kubectl get svc -n test-social-network -o wide\")"
      },
      {
        "command": "exec_shell(\"kubectl get pods -n test-social-network\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "List all pods in the namespace to verify component readiness and status.",
        "sequence_number": 8,
        "original_command": "exec_shell(\"kubectl get pods -n test-social-network\")"
      }
    ]
  },
  {
    "problem_id": "astronomy_shop_recommendation_service_cache_failure-localization-1",
    "key_commands": [
      {
        "command": "exec_shell(\"kubectl get pods -n astronomy-shop\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "List all pods in the astronomy-shop namespace to identify unhealthy components.",
        "sequence_number": 1,
        "original_command": "exec_shell(\"kubectl get pods -n astronomy-shop\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n astronomy-shop fraud-detection-<POD_SUFFIX> --all-containers=true -<REPLICA_SUFFIX>\")",
        "type": "probe_command",
        "importance_score": 4,
        "description": "Attempt to fetch previous logs from all containers in the fraud-detection pod to inspect last crash.",
        "sequence_number": 2,
        "original_command": "exec_shell(\"kubectl logs -n astronomy-shop fraud-detection-65868bcdb5-fkdtk --all-containers=true --previous\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "65868bcdb5-fkdtk",
            "placeholder": "<POD_SUFFIX>",
            "position": 59
          },
          {
            "type": "k8s_replicaset_suffix",
            "original": "-previous",
            "placeholder": "<REPLICA_SUFFIX>",
            "position": 95
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n astronomy-shop fraud-detection-<POD_SUFFIX> --all-containers=true\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Fetch current logs from all containers in the fraud-detection pod to examine init and startup behavior.",
        "sequence_number": 3,
        "original_command": "exec_shell(\"kubectl logs -n astronomy-shop fraud-detection-65868bcdb5-fkdtk --all-containers=true\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "65868bcdb5-fkdtk",
            "placeholder": "<POD_SUFFIX>",
            "position": 59
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl describe pod -n astronomy-shop fraud-detection-<POD_SUFFIX>\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "Describe the fraud-detection pod to see container states, resource limits, and recent events.",
        "sequence_number": 4,
        "original_command": "exec_shell(\"kubectl describe pod -n astronomy-shop fraud-detection-65868bcdb5-fkdtk\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "65868bcdb5-fkdtk",
            "placeholder": "<POD_SUFFIX>",
            "position": 67
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n astronomy-shop fraud-detection-<POD_SUFFIX> -c fraud<REPLICA_SUF<REPLICA_SUFFIX>evious\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Fetch previous logs for the fraud-detection application container to capture prior crash output.",
        "sequence_number": 5,
        "original_command": "exec_shell(\"kubectl logs -n astronomy-shop fraud-detection-65868bcdb5-fkdtk -c fraud-detection --previous\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "65868bcdb5-fkdtk",
            "placeholder": "<POD_SUFFIX>",
            "position": 59
          },
          {
            "type": "k8s_replicaset_suffix",
            "original": "-detection",
            "placeholder": "<REPLICA_SUFFIX>",
            "position": 80
          },
          {
            "type": "k8s_replicaset_suffix",
            "original": "-previous",
            "placeholder": "<REPLICA_SUFFIX>",
            "position": 92
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl get pod -n astronomy-shop fraud-detection-<POD_SUFFIX> -o json\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Retrieve full pod JSON for fraud-detection to inspect spec, environment, and detailed status fields.",
        "sequence_number": 6,
        "original_command": "exec_shell(\"kubectl get pod -n astronomy-shop fraud-detection-65868bcdb5-fkdtk -o json\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "65868bcdb5-fkdtk",
            "placeholder": "<POD_SUFFIX>",
            "position": 62
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl get events -n astronomy-shop --sort-by=.lastTimestamp | tail -n 100\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Query recent namespace events to correlate restarts and errors across resources.",
        "sequence_number": 7,
        "original_command": "exec_shell(\"kubectl get events -n astronomy-shop --sort-by=.lastTimestamp | tail -n 100\")"
      },
      {
        "command": "exec_shell(\"kubectl top pod -n astronomy-shop -<REPLICA_SUFFIX>\")",
        "type": "probe_command",
        "importance_score": 3,
        "description": "Attempt to check live resource usage per container (useful for diagnosing OOM or throttling).",
        "sequence_number": 8,
        "original_command": "exec_shell(\"kubectl top pod -n astronomy-shop --containers\")",
        "placeholders_used": [
          {
            "type": "k8s_replicaset_suffix",
            "original": "-containers",
            "placeholder": "<REPLICA_SUFFIX>",
            "position": 47
          }
        ]
      },
      {
        "command": "submit([\"fraud<REPLICA_SUFFIX>\"])",
        "type": "execute_command",
        "importance_score": 9,
        "description": "Submit the suspected faulty component to the orchestrator for evaluation.",
        "sequence_number": 9,
        "original_command": "submit([\"fraud-detection\"])",
        "placeholders_used": [
          {
            "type": "k8s_replicaset_suffix",
            "original": "-detection",
            "placeholder": "<REPLICA_SUFFIX>",
            "position": 14
          }
        ]
      }
    ]
  },
  {
    "problem_id": "revoke_auth_mongodb-mitigation-2",
    "key_commands": [
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation pod/rate-<POD_SUFFIX> -<REPLICA_SUFFIX> hotel-reserv-rate\")",
        "type": "probe_command",
        "importance_score": 4,
        "description": "Check current logs of the rate service to confirm behavior post-fix",
        "sequence_number": 1,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation pod/rate-7bdc978679-6mc8q --container hotel-reserv-rate\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "7bdc978679-6mc8q",
            "placeholder": "<POD_SUFFIX>",
            "position": 60
          },
          {
            "type": "k8s_replicaset_suffix",
            "original": "-container",
            "placeholder": "<REPLICA_SUFFIX>",
            "position": 74
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl get pods -n test-hotel-reservation -o wide\")",
        "type": "probe_command",
        "importance_score": 4,
        "description": "Verify pod statuses after applying the remediation",
        "sequence_number": 2,
        "original_command": "exec_shell(\"kubectl get pods -n test-hotel-reservation -o wide\")"
      },
      {
        "command": "exec_shell(\"kubectl exec -n test-hotel-reservation deploy/mongodb-rate -- bash /scripts/remove-<POD_SUFFIX>-rate-mongo.sh\")",
        "type": "execute_command",
        "importance_score": 9,
        "description": "Recreate admin user and re-grant readWrite on rate-db as an additional remediation",
        "sequence_number": 3,
        "original_command": "exec_shell(\"kubectl exec -n test-hotel-reservation deploy/mongodb-rate -- bash /scripts/remove-mitigate-admin-rate-mongo.sh\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "mitigate-admin",
            "placeholder": "<POD_SUFFIX>",
            "position": 95
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl exec -n test-hotel-reservation deploy/mongodb-rate -- bash /scripts/revoke-<POD_SUFFIX>-rate-mongo.sh\")",
        "type": "execute_command",
        "importance_score": 10,
        "description": "Restore readWrite role to the admin user on rate-db to fix authorization failures",
        "sequence_number": 4,
        "original_command": "exec_shell(\"kubectl exec -n test-hotel-reservation deploy/mongodb-rate -- bash /scripts/revoke-mitigate-admin-rate-mongo.sh\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "mitigate-admin",
            "placeholder": "<POD_SUFFIX>",
            "position": 95
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl get cm,secret -n test-hotel-reservation -o wide && kubectl get configmap mongo-rate-script -n test-hotel-reservation -o yaml && echo \\'---\\' && kubectl get configmap failure-admin-rate -n test-hotel-reservation -o yaml\")",
        "type": "probe_command",
        "importance_score": 8,
        "description": "List and view ConfigMaps to discover remediation scripts related to MongoDB user privileges.",
        "sequence_number": 5,
        "original_command": "exec_shell(\"kubectl get cm,secret -n test-hotel-reservation -o wide && kubectl get configmap mongo-rate-script -n test-hotel-reservation -o yaml && echo \\'---\\' && kubectl get configmap failure-admin-rate -n test-hotel-reservation -o yaml\")"
      },
      {
        "command": "exec_shell(\"kubectl get cm,secret -n test-hotel-reservation -o wide && kubectl get configmap mongo-rate-script -n test-hotel-reservation -o yaml && echo '---' && kubectl get configmap failure-admin-rate -n test-hotel-reservation -o yaml\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "Discover initialization and failure/mitigation scripts available for MongoDB-rate",
        "sequence_number": 6,
        "original_command": "exec_shell(\"kubectl get cm,secret -n test-hotel-reservation -o wide && kubectl get configmap mongo-rate-script -n test-hotel-reservation -o yaml && echo '---' && kubectl get configmap failure-admin-rate -n test-hotel-reservation -o yaml\")"
      },
      {
        "command": "exec_shell(\"kubectl get deploy -n test-hotel-reservation mongodb-rate -o yaml && echo \\'---\\' && kubectl logs -n test-hotel-reservation deploy/mongodb-rate\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "Inspect MongoDB deployment config and logs to understand authentication setup and DB initialization behavior.",
        "sequence_number": 7,
        "original_command": "exec_shell(\"kubectl get deploy -n test-hotel-reservation mongodb-rate -o yaml && echo \\'---\\' && kubectl logs -n test-hotel-reservation deploy/mongodb-rate\")"
      },
      {
        "command": "exec_shell(\"kubectl get deploy -n test-hotel-reservation mongodb-rate -o yaml && echo '---' && kubectl logs -n test-hotel-reservation deploy/mongodb-rate\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Inspect MongoDB-rate deployment and logs to verify auth mode and observe authorization failures",
        "sequence_number": 8,
        "original_command": "exec_shell(\"kubectl get deploy -n test-hotel-reservation mongodb-rate -o yaml && echo '---' && kubectl logs -n test-hotel-reservation deploy/mongodb-rate\")"
      },
      {
        "command": "exec_shell(\"kubectl get deploy -n test-hotel-reservation rate -o yaml\")",
        "type": "probe_command",
        "importance_score": 3,
        "description": "Check the rate deployment configuration for environment or container setup issues",
        "sequence_number": 9,
        "original_command": "exec_shell(\"kubectl get deploy -n test-hotel-reservation rate -o yaml\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation pod/rate-<POD_SUFFIX> -<REPLICA_SUFFIX> hotel-reserv-<REPLICA_SUFFIX>evious\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "Review prior crash logs of rate container to confirm MongoDB authorization errors",
        "sequence_number": 10,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation pod/rate-7bdc978679-6mc8q --container hotel-reserv-rate --previous\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "7bdc978679-6mc8q",
            "placeholder": "<POD_SUFFIX>",
            "position": 60
          },
          {
            "type": "k8s_replicaset_suffix",
            "original": "-container",
            "placeholder": "<REPLICA_SUFFIX>",
            "position": 74
          },
          {
            "type": "k8s_replicaset_suffix",
            "original": "-previous",
            "placeholder": "<REPLICA_SUFFIX>",
            "position": 104
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl describe pod rate-<POD_SUFFIX> -n test-hotel-reservation\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Inspect failing rate pod for state, events, and restart reasons",
        "sequence_number": 11,
        "original_command": "exec_shell(\"kubectl describe pod rate-7bdc978679-6mc8q -n test-hotel-reservation\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "7bdc978679-6mc8q",
            "placeholder": "<POD_SUFFIX>",
            "position": 38
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")",
        "type": "probe_command",
        "importance_score": 4,
        "description": "List pods to identify unhealthy components and determine the failing service",
        "sequence_number": 12,
        "original_command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")"
      }
    ]
  },
  {
    "problem_id": "astronomy_shop_cart_service_failure-localization-1",
    "key_commands": [
      {
        "command": "exec_shell(\"kubectl logs -n astronomy-shop fraud-detection-<POD_SUFFIX> -<REPLICA_SUFFIX> --tail=200\")",
        "type": "probe_command",
        "importance_score": 2,
        "description": "Check prior container logs for fraud-detection to find earlier failures; low impact on root cause.",
        "sequence_number": 1,
        "original_command": "exec_shell(\"kubectl logs -n astronomy-shop fraud-detection-65868bcdb5-qxl2l --previous --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "65868bcdb5-qxl2l",
            "placeholder": "<POD_SUFFIX>",
            "position": 59
          },
          {
            "type": "k8s_replicaset_suffix",
            "original": "-previous",
            "placeholder": "<REPLICA_SUFFIX>",
            "position": 73
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n astronomy-shop email-<POD_SUFFIX> --all-containers=true --tail=200\")",
        "type": "probe_command",
        "importance_score": 4,
        "description": "Fetch Email service logs to verify order confirmation emails are being sent successfully.",
        "sequence_number": 2,
        "original_command": "exec_shell(\"kubectl logs -n astronomy-shop email-59d9ffc758-6d4kt --all-containers=true --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "59d9ffc758-6d4kt",
            "placeholder": "<POD_SUFFIX>",
            "position": 49
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n astronomy-shop shipping-<POD_SUFFIX> --all-containers=true --tail=200\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Inspect Shipping service logs to confirm quote generation and tracking behavior.",
        "sequence_number": 3,
        "original_command": "exec_shell(\"kubectl logs -n astronomy-shop shipping-7f445d59dc-ss7dv --all-containers=true --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "7f445d59dc-ss7dv",
            "placeholder": "<POD_SUFFIX>",
            "position": 52
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n astronomy-shop accounting-<POD_SUFFIX> --all-containers=true --tail=200\")",
        "type": "probe_command",
        "importance_score": 8,
        "description": "Review Accounting service logs to detect Kafka consumer issues like unknown topic or partition errors.",
        "sequence_number": 4,
        "original_command": "exec_shell(\"kubectl logs -n astronomy-shop accounting-567f87bbcd-whfkx --all-containers=true --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "567f87bbcd-whfkx",
            "placeholder": "<POD_SUFFIX>",
            "position": 54
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n astronomy-shop recommendation-<POD_SUFFIX> --all-containers=true --tail=200\")",
        "type": "probe_command",
        "importance_score": 4,
        "description": "Check Recommendation service logs to ensure it is serving requests normally.",
        "sequence_number": 5,
        "original_command": "exec_shell(\"kubectl logs -n astronomy-shop recommendation-7b49c8cb75-rvlnq --all-containers=true --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "7b49c8cb75-rvlnq",
            "placeholder": "<POD_SUFFIX>",
            "position": 58
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n astronomy-shop product-catalog-<POD_SUFFIX> --all-containers=true --tail=200\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Inspect Product Catalog logs for service health and telemetry export issues.",
        "sequence_number": 6,
        "original_command": "exec_shell(\"kubectl logs -n astronomy-shop product-catalog-6988cd5f49-qp966 --all-containers=true --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "6988cd5f49-qp966",
            "placeholder": "<POD_SUFFIX>",
            "position": 59
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n astronomy-shop payment-<POD_SUFFIX> --all-containers=true --tail=200\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Fetch Payment service logs to verify gRPC server behavior and transaction processing.",
        "sequence_number": 7,
        "original_command": "exec_shell(\"kubectl logs -n astronomy-shop payment-7597577cb5-v4zd6 --all-containers=true --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "7597577cb5-v4zd6",
            "placeholder": "<POD_SUFFIX>",
            "position": 51
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n astronomy-shop otel-collector-<POD_SUFFIX> --all-containers=true --tail=200\")",
        "type": "probe_command",
        "importance_score": 9,
        "description": "Inspect OpenTelemetry Collector logs to validate ingestion/export behavior and identify misconfiguration (gRPC vs HTTP endpoints).",
        "sequence_number": 8,
        "original_command": "exec_shell(\"kubectl logs -n astronomy-shop otel-collector-758b8784c-bwz68 --all-containers=true --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "758b8784c-bwz68",
            "placeholder": "<POD_SUFFIX>",
            "position": 58
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n astronomy-shop <POD_SUFFIX>-54<POD_SUFFIX>-all-containers=true --tail=200\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Review Envoy proxy logs for networking or routing issues impacting frontend requests.",
        "sequence_number": 9,
        "original_command": "exec_shell(\"kubectl logs -n astronomy-shop frontend-proxy-548b4649d7-gg4rv --all-containers=true --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "frontend-proxy",
            "placeholder": "<POD_SUFFIX>",
            "position": 43
          },
          {
            "type": "k8s_pod_suffix",
            "original": "548b4649d7-gg4rv",
            "placeholder": "<POD_SUFFIX>",
            "position": 58
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n astronomy-shop currency-<POD_SUFFIX> --all-containers=true --tail=200\")",
        "type": "probe_command",
        "importance_score": 9,
        "description": "Check currency service logs revealing persistent OTLP gRPC exporter failures to the collector.",
        "sequence_number": 10,
        "original_command": "exec_shell(\"kubectl logs -n astronomy-shop currency-5864f94d89-v4x9m --all-containers=true --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "5864f94d89-v4x9m",
            "placeholder": "<POD_SUFFIX>",
            "position": 52
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n astronomy-shop checkout-<POD_SUFFIX> --all-containers=true --tail=200\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Inspect checkout service logs to validate its health and connectivity as referenced by frontend errors.",
        "sequence_number": 11,
        "original_command": "exec_shell(\"kubectl logs -n astronomy-shop checkout-5bc54f8cd8-s29fp --all-containers=true --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "5bc54f8cd8-s29fp",
            "placeholder": "<POD_SUFFIX>",
            "position": 52
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n astronomy-shop cart-<POD_SUFFIX> --all-containers=true --tail=200\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Inspect cart service logs to determine if it is serving requests and to rule out application-level failures.",
        "sequence_number": 12,
        "original_command": "exec_shell(\"kubectl logs -n astronomy-shop cart-6fd857c656-td7dz --all-containers=true --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "6fd857c656-td7dz",
            "placeholder": "<POD_SUFFIX>",
            "position": 48
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl get endpoints -n astronomy-shop -o wide\")",
        "type": "probe_command",
        "importance_score": 8,
        "description": "Verify service endpoints/backends to confirm pods are registered behind the services and are routable.",
        "sequence_number": 13,
        "original_command": "exec_shell(\"kubectl get endpoints -n astronomy-shop -o wide\")"
      },
      {
        "command": "exec_shell(\"kubectl get svc -n astronomy-shop -o wide\")",
        "type": "probe_command",
        "importance_score": 8,
        "description": "List services with cluster IPs to correlate frontend error IPs with target services (e.g., cart and checkout).",
        "sequence_number": 14,
        "original_command": "exec_shell(\"kubectl get svc -n astronomy-shop -o wide\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n astronomy-shop fraud-detection-<POD_SUFFIX> --all-containers=true --tail=200\")",
        "type": "probe_command",
        "importance_score": 4,
        "description": "Fetch recent logs from the Fraud Detection service to verify Kafka connectivity and initialization.",
        "sequence_number": 15,
        "original_command": "exec_shell(\"kubectl logs -n astronomy-shop fraud-detection-65868bcdb5-qxl2l --all-containers=true --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "65868bcdb5-qxl2l",
            "placeholder": "<POD_SUFFIX>",
            "position": 59
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n astronomy-shop frontend-<POD_SUFFIX> --all-containers=true --tail=200\")",
        "type": "probe_command",
        "importance_score": 9,
        "description": "Check frontend logs to identify user-facing errors; reveals ECONNREFUSED to cart/checkout services indicating connectivity issues.",
        "sequence_number": 16,
        "original_command": "exec_shell(\"kubectl logs -n astronomy-shop frontend-7d6b77c58-6cbv6 --all-containers=true --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "7d6b77c58-6cbv6",
            "placeholder": "<POD_SUFFIX>",
            "position": 52
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n astronomy-shop ad-<POD_SUFFIX> --all-containers=true --tail=200\")",
        "type": "probe_command",
        "importance_score": 4,
        "description": "Fetch recent logs from the Ad service pod to check for startup issues or runtime errors.",
        "sequence_number": 17,
        "original_command": "exec_shell(\"kubectl logs -n astronomy-shop ad-94bd576b5-xwb6l --all-containers=true --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "94bd576b5-xwb6l",
            "placeholder": "<POD_SUFFIX>",
            "position": 46
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl get pods -n astronomy-shop\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "List all pods in the astronomy-shop namespace to assess overall service health and readiness.",
        "sequence_number": 18,
        "original_command": "exec_shell(\"kubectl get pods -n astronomy-shop\")"
      }
    ]
  },
  {
    "problem_id": "k8s_target_port-misconfig-detection-1",
    "key_commands": [
      {
        "command": "exec_shell(\"kubectl get pods -n test-social-network\")",
        "type": "probe_command",
        "importance_score": 4,
        "description": "List all pods in the namespace to verify overall workload health and readiness.",
        "sequence_number": 1,
        "original_command": "exec_shell(\"kubectl get pods -n test-social-network\")"
      },
      {
        "command": "exec_shell(\"kubectl get svc -n test-social-network\")",
        "type": "probe_command",
        "importance_score": 9,
        "description": "List services and their exposed ports; reveals user-service is exposed on port 9090.",
        "sequence_number": 2,
        "original_command": "exec_shell(\"kubectl get svc -n test-social-network\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-social-network nginx-thrift-7c48f57-mqkdj -c nginx-thrift --tail=200\")",
        "type": "probe_command",
        "importance_score": 3,
        "description": "Inspect gateway (nginx-thrift) logs for request errors indicating backend connectivity issues.",
        "sequence_number": 3,
        "original_command": "exec_shell(\"kubectl logs -n test-social-network nginx-thrift-7c48f57-mqkdj -c nginx-thrift --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-social-network compose-post-service-<POD_SUFFIX> --tail=200\")",
        "type": "probe_command",
        "importance_score": 9,
        "description": "Check compose-post-service logs; shows connection refused to user-service at port 9090, pointing to a port mismatch.",
        "sequence_number": 4,
        "original_command": "exec_shell(\"kubectl logs -n test-social-network compose-post-service-64f6c9b656-blh5r --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "64f6c9b656-blh5r",
            "placeholder": "<POD_SUFFIX>",
            "position": 69
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-social-network user-service-<POD_SUFFIX> --tail=200\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Verify user-service is running (not crashing) to rule out pod-level issues; aids focus on service configuration.",
        "sequence_number": 5,
        "original_command": "exec_shell(\"kubectl logs -n test-social-network user-service-6d5985bd55-zdn6p --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "6d5985bd55-zdn6p",
            "placeholder": "<POD_SUFFIX>",
            "position": 61
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl get endpoints -n test-social-network user-service -o wide\")",
        "type": "probe_command",
        "importance_score": 10,
        "description": "Show actual endpoint IP:port for user-service; reveals endpoints on port 8080, confirming targetPort/port mismatch with service (9090).",
        "sequence_number": 6,
        "original_command": "exec_shell(\"kubectl get endpoints -n test-social-network user-service -o wide\")"
      }
    ]
  },
  {
    "problem_id": "network_loss_hotel_res-analysis-1",
    "key_commands": [
      {
        "command": "submit(\"None\")",
        "type": "execute_command",
        "importance_score": 9,
        "description": "Submit the final analysis decision indicating no faults detected.",
        "sequence_number": 1,
        "original_command": "submit(\"None\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation deployment/mongodb-recommendation --tail=100\")",
        "type": "probe_command",
        "importance_score": 4,
        "description": "Inspect MongoDB (recommendation) logs to ensure backing datastore health.",
        "sequence_number": 2,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation deployment/mongodb-recommendation --tail=100\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation deployment/rate --tail=200\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Check rate service logs for DB and Consul connections.",
        "sequence_number": 3,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation deployment/rate --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation deployment/geo --tail=200\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Check geo service logs for health and registration status.",
        "sequence_number": 4,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation deployment/geo --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation deployment/profile --tail=200\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Check profile service logs for health and dependency connectivity.",
        "sequence_number": 5,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation deployment/profile --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation deployment/user --tail=200\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "Inspect user service logs (faulty target) to validate DB connectivity and Consul registration.",
        "sequence_number": 6,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation deployment/user --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation deployment/reservation --tail=200\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Review reservation service logs for DB/memcache connectivity and Consul registration.",
        "sequence_number": 7,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation deployment/reservation --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation deployment/recommendation --tail=100\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Review recommendation service logs for DB connectivity and Consul registration.",
        "sequence_number": 8,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation deployment/recommendation --tail=100\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation deployment/search --tail=200\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Review search service logs for registration status and runtime health.",
        "sequence_number": 9,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation deployment/search --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation deployment/consul --tail=200\")",
        "type": "probe_command",
        "importance_score": 8,
        "description": "Check Consul logs to confirm service discovery availability and health queries.",
        "sequence_number": 10,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation deployment/consul --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation deployment/frontend --tail=200\")",
        "type": "probe_command",
        "importance_score": 9,
        "description": "Inspect frontend logs to detect client-facing errors and dependency connection issues (e.g., Consul connectivity).",
        "sequence_number": 11,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation deployment/frontend --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl get svc -n test-hotel-reservation\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "List services and their cluster IPs/ports to validate service exposure and dependencies.",
        "sequence_number": 12,
        "original_command": "exec_shell(\"kubectl get svc -n test-hotel-reservation\")"
      },
      {
        "command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "List all pods in the test-hotel-reservation namespace to verify component health and readiness.",
        "sequence_number": 13,
        "original_command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")"
      }
    ]
  },
  {
    "problem_id": "k8s_target_port-misconfig-analysis-3",
    "key_commands": [
      {
        "command": "exec_shell(\"kubectl get pods -n test-social-network\")",
        "type": "probe_command",
        "importance_score": 3,
        "description": "List pods in the namespace to verify workloads are running and identify services to investigate.",
        "sequence_number": 1,
        "original_command": "exec_shell(\"kubectl get pods -n test-social-network\")"
      },
      {
        "command": "exec_shell(\"kubectl get svc -n test-social-network\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "List services and their exposed ports to choose the target service for deeper inspection.",
        "sequence_number": 2,
        "original_command": "exec_shell(\"kubectl get svc -n test-social-network\")"
      },
      {
        "command": "exec_shell(\"kubectl get endpoints -n test-social-network\")",
        "type": "probe_command",
        "importance_score": 9,
        "description": "Inspect service endpoints and backend ports; reveals post-storage-service routing to port 9999, indicating a potential targetPort mismatch.",
        "sequence_number": 3,
        "original_command": "exec_shell(\"kubectl get endpoints -n test-social-network\")"
      },
      {
        "command": "exec_shell(\"kubectl get deploy post-storage-service -n test-social-network -o yaml\")",
        "type": "probe_command",
        "importance_score": 9,
        "description": "Examine deployment spec to confirm container is listening on port 9090.",
        "sequence_number": 4,
        "original_command": "exec_shell(\"kubectl get deploy post-storage-service -n test-social-network -o yaml\")"
      },
      {
        "command": "exec_shell(\"kubectl get svc post-storage-service -n test-social-network -o yaml\")",
        "type": "probe_command",
        "importance_score": 10,
        "description": "Inspect service spec to identify targetPort set to 9999, confirming the targetPort misconfiguration versus containerPort 9090.",
        "sequence_number": 5,
        "original_command": "exec_shell(\"kubectl get svc post-storage-service -n test-social-network -o yaml\")"
      }
    ]
  },
  {
    "problem_id": "pod_failure_hotel_res-analysis-1",
    "key_commands": [
      {
        "command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "List pods in the namespace to identify failing components and select the problematic pod.",
        "sequence_number": 1,
        "original_command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")"
      },
      {
        "command": "exec_shell(\"kubectl describe pod user-<POD_SUFFIX> -n test-hotel-reservation\")",
        "type": "probe_command",
        "importance_score": 9,
        "description": "Describe the failing pod to inspect events and error messages indicating the container start failure.",
        "sequence_number": 2,
        "original_command": "exec_shell(\"kubectl describe pod user-66d5d6f874-89nm4 -n test-hotel-reservation\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "66d5d6f874-89nm4",
            "placeholder": "<POD_SUFFIX>",
            "position": 38
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl get deploy user -n test-hotel-reservation -o yaml\")",
        "type": "probe_command",
        "importance_score": 8,
        "description": "Retrieve the Deployment spec to compare desired image/command against the running pod.",
        "sequence_number": 3,
        "original_command": "exec_shell(\"kubectl get deploy user -n test-hotel-reservation -o yaml\")"
      },
      {
        "command": "exec_shell(\"kubectl get deploy -n test-hotel-reservation profile rate recommendation reservation search user -o jsonpath='{range .items[*]}{.metadata.name}:{.spec.template.spec.containers[0].command}{\\\"\\\\n\\\"}{end}'\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Compare container command configuration across related deployments to validate expected entrypoints.",
        "sequence_number": 4,
        "original_command": "exec_shell(\"kubectl get deploy -n test-hotel-reservation profile rate recommendation reservation search user -o jsonpath='{range .items[*]}{.metadata.name}:{.spec.template.spec.containers[0].command}{\\\"\\\\n\\\"}{end}'\")"
      },
      {
        "command": "exec_shell(\"kubectl describe pod profile-<POD_SUFFIX> -n test-hotel-reservation\")",
        "type": "probe_command",
        "importance_score": 4,
        "description": "Describe a healthy reference pod to contrast working configuration with the failing one.",
        "sequence_number": 5,
        "original_command": "exec_shell(\"kubectl describe pod profile-8b6dd7c6c-qkc4w -n test-hotel-reservation\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "8b6dd7c6c-qkc4w",
            "placeholder": "<POD_SUFFIX>",
            "position": 41
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl get pod user-<POD_SUFFIX> -n test-hotel-reservation -o yaml\")",
        "type": "probe_command",
        "importance_score": 8,
        "description": "Fetch the failing pod's full YAML to confirm the actual image/command mismatch causing the crash.",
        "sequence_number": 6,
        "original_command": "exec_shell(\"kubectl get pod user-66d5d6f874-89nm4 -n test-hotel-reservation -o yaml\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "66d5d6f874-89nm4",
            "placeholder": "<POD_SUFFIX>",
            "position": 33
          }
        ]
      }
    ]
  },
  {
    "problem_id": "astronomy_shop_ad_service_manual_gc-detection-1",
    "key_commands": [
      {
        "command": "exec_shell(\"kubectl get pods -n astronomy-shop\")",
        "type": "probe_command",
        "importance_score": 8,
        "description": "List all pods in the astronomy-shop namespace to identify failing or restarting pods.",
        "sequence_number": 1,
        "original_command": "exec_shell(\"kubectl get pods -n astronomy-shop\")"
      },
      {
        "command": "exec_shell(\"kubectl describe pod fraud-detection-<POD_SUFFIX> -n astronomy-shop\")",
        "type": "probe_command",
        "importance_score": 9,
        "description": "Inspect detailed pod status, container states, resource limits, and events to determine failure reasons (e.g., exit code 137, restarts).",
        "sequence_number": 2,
        "original_command": "exec_shell(\"kubectl describe pod fraud-detection-65868bcdb5-8rwnr -n astronomy-shop\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "65868bcdb5-8rwnr",
            "placeholder": "<POD_SUFFIX>",
            "position": 49
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs fraud-detection-<POD_SUFFIX> -n astronomy-shop -<REPLICA_SUFFIX>\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Retrieve logs from the previous crashed container instance to investigate the cause of the restart.",
        "sequence_number": 3,
        "original_command": "exec_shell(\"kubectl logs fraud-detection-65868bcdb5-8rwnr -n astronomy-shop --previous\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "65868bcdb5-8rwnr",
            "placeholder": "<POD_SUFFIX>",
            "position": 41
          },
          {
            "type": "k8s_replicaset_suffix",
            "original": "-previous",
            "placeholder": "<REPLICA_SUFFIX>",
            "position": 73
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs fraud-detection-<POD_SUFFIX> -n astronomy-shop\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Fetch current container logs for additional context following the restarts.",
        "sequence_number": 4,
        "original_command": "exec_shell(\"kubectl logs fraud-detection-65868bcdb5-8rwnr -n astronomy-shop\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "65868bcdb5-8rwnr",
            "placeholder": "<POD_SUFFIX>",
            "position": 41
          }
        ]
      }
    ]
  },
  {
    "problem_id": "user_unregistered_mongodb-localization-2",
    "key_commands": [
      {
        "command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "List all pods in the namespace to identify failing components.",
        "sequence_number": 1,
        "original_command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")"
      },
      {
        "command": "exec_shell(\"kubectl describe pod rate-<POD_SUFFIX> -n test-hotel-reservation && kubectl logs rate-7bdc<POD_SUFFIX>test-hotel-reservation -<REPLICA_SUFFIX>\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "Inspect the failing rate pod details and retrieve previous container logs to understand crash/backoff behavior.",
        "sequence_number": 2,
        "original_command": "exec_shell(\"kubectl describe pod rate-7bdc978679-xts2d -n test-hotel-reservation && kubectl logs rate-7bdc978679-xts2d -n test-hotel-reservation --previous\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "7bdc978679-xts2d",
            "placeholder": "<POD_SUFFIX>",
            "position": 38
          },
          {
            "type": "k8s_pod_suffix",
            "original": "7bdc978679-xts2d",
            "placeholder": "<POD_SUFFIX>",
            "position": 102
          },
          {
            "type": "k8s_replicaset_suffix",
            "original": "-previous",
            "placeholder": "<REPLICA_SUFFIX>",
            "position": 138
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs rate-<POD_SUFFIX> -n test-hotel-reservation -c hotel-reserv-rate --tail=200 -<REPLICA_SUFFIX>\")",
        "type": "probe_command",
        "importance_score": 8,
        "description": "Fetch current logs from the rate service container showing SASL authentication failures against MongoDB.",
        "sequence_number": 3,
        "original_command": "exec_shell(\"kubectl logs rate-7bdc978679-xts2d -n test-hotel-reservation -c hotel-reserv-rate --tail=200 --timestamps\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "7bdc978679-xts2d",
            "placeholder": "<POD_SUFFIX>",
            "position": 30
          },
          {
            "type": "k8s_replicaset_suffix",
            "original": "-timestamps",
            "placeholder": "<REPLICA_SUFFIX>",
            "position": 102
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs mongodb-rate-<POD_SUFFIX> -n test-hotel-reservation --tail=200 -<REPLICA_SUFFIX>\")",
        "type": "probe_command",
        "importance_score": 9,
        "description": "Check MongoDB rate pod logs revealing 'UserNotFound' for admin, indicating missing admin user and root cause.",
        "sequence_number": 4,
        "original_command": "exec_shell(\"kubectl logs mongodb-rate-56cc8659c9-ctpml -n test-hotel-reservation --tail=200 --timestamps\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "56cc8659c9-ctpml",
            "placeholder": "<POD_SUFFIX>",
            "position": 38
          },
          {
            "type": "k8s_replicaset_suffix",
            "original": "-timestamps",
            "placeholder": "<REPLICA_SUFFIX>",
            "position": 89
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl get deploy rate -n test-hotel-reservation -o yaml\")",
        "type": "probe_command",
        "importance_score": 3,
        "description": "Review the rate deployment spec to understand its configuration and environment.",
        "sequence_number": 5,
        "original_command": "exec_shell(\"kubectl get deploy rate -n test-hotel-reservation -o yaml\")"
      },
      {
        "command": "exec_shell(\"kubectl get deploy mongodb-rate -n test-hotel-reservation -o yaml\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "Review the MongoDB rate deployment to verify authentication and mounted ConfigMaps related to initialization/failure scripts.",
        "sequence_number": 6,
        "original_command": "exec_shell(\"kubectl get deploy mongodb-rate -n test-hotel-reservation -o yaml\")"
      },
      {
        "command": "exec_shell(\"kubectl get configmap -n test-hotel-reservation mongo-rate-script -o yaml && kubectl get configmap -n test-hotel-reservation failure-admin-rate -o yaml\")",
        "type": "probe_command",
        "importance_score": 9,
        "description": "Inspect ConfigMaps to confirm scripts that create or remove the admin user, explaining the missing admin and auth errors.",
        "sequence_number": 7,
        "original_command": "exec_shell(\"kubectl get configmap -n test-hotel-reservation mongo-rate-script -o yaml && kubectl get configmap -n test-hotel-reservation failure-admin-rate -o yaml\")"
      },
      {
        "command": "submit([\"mongodb-rate\"])",
        "type": "execute_command",
        "importance_score": 10,
        "description": "Submit the identified faulty component as mongodb-rate.",
        "sequence_number": 8,
        "original_command": "submit([\"mongodb-rate\"])"
      }
    ]
  },
  {
    "problem_id": "revoke_auth_mongodb-detection-2",
    "key_commands": [
      {
        "command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "List all pods in the namespace to identify failing components (rate pod in Error state).",
        "sequence_number": 1,
        "original_command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation rate-<POD_SUFFIX> --all-containers=true -<REPLICA_SUFFIX>\")",
        "type": "probe_command",
        "importance_score": 9,
        "description": "Inspect previous logs of the failing rate pod to reveal the 'not authorized on rate-db' MongoDB error.",
        "sequence_number": 2,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation rate-7bdc978679-npdcq --all-containers=true --previous\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "7bdc978679-npdcq",
            "placeholder": "<POD_SUFFIX>",
            "position": 56
          },
          {
            "type": "k8s_replicaset_suffix",
            "original": "-previous",
            "placeholder": "<REPLICA_SUFFIX>",
            "position": 92
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl get deploy -n test-hotel-reservation rate -o yaml\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Review the rate service deployment configuration to check environment and DB connection details.",
        "sequence_number": 3,
        "original_command": "exec_shell(\"kubectl get deploy -n test-hotel-reservation rate -o yaml\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation mongodb-rate-<POD_SUFFIX> --all-containers=true\")",
        "type": "probe_command",
        "importance_score": 8,
        "description": "Examine MongoDB logs to confirm authorization is enabled and client operations are unauthorized.",
        "sequence_number": 4,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation mongodb-rate-56cc8659c9-fqpb9 --all-containers=true\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "56cc8659c9-fqpb9",
            "placeholder": "<POD_SUFFIX>",
            "position": 64
          }
        ]
      },
      {
        "command": "submit(\"Yes\")",
        "type": "execute_command",
        "importance_score": 10,
        "description": "Submit the final detection result indicating an anomaly was found.",
        "sequence_number": 5,
        "original_command": "submit(\"Yes\")"
      }
    ]
  },
  {
    "problem_id": "astronomy_shop_ad_service_high_cpu-localization-1",
    "key_commands": [
      {
        "command": "exec_shell(\"kubectl get pods -n astronomy-shop\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "List all pods in the astronomy-shop namespace to identify unhealthy components.",
        "sequence_number": 1,
        "original_command": "exec_shell(\"kubectl get pods -n astronomy-shop\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n astronomy-shop fraud-detection-<POD_SUFFIX> -<REPLICA_SUFFIX>\")",
        "type": "probe_command",
        "importance_score": 4,
        "description": "Fetch logs from the previous instance of the default container in the fraud-detection pod to investigate recent crashes.",
        "sequence_number": 2,
        "original_command": "exec_shell(\"kubectl logs -n astronomy-shop fraud-detection-65868bcdb5-ddl99 --previous\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "65868bcdb5-ddl99",
            "placeholder": "<POD_SUFFIX>",
            "position": 59
          },
          {
            "type": "k8s_replicaset_suffix",
            "original": "-previous",
            "placeholder": "<REPLICA_SUFFIX>",
            "position": 73
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl describe pod -n astronomy-shop fraud-detection-<POD_SUFFIX>\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Describe the fraud-detection pod to inspect state, events, and resource settings for crash diagnostics.",
        "sequence_number": 3,
        "original_command": "exec_shell(\"kubectl describe pod -n astronomy-shop fraud-detection-65868bcdb5-ddl99\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "65868bcdb5-ddl99",
            "placeholder": "<POD_SUFFIX>",
            "position": 67
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n astronomy-shop fraud-detection-<POD_SUFFIX> -c fraud<REPLICA_SUFFIX> --tail=200\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Get recent logs from the fraud-detection container to check runtime behavior before the crash.",
        "sequence_number": 4,
        "original_command": "exec_shell(\"kubectl logs -n astronomy-shop fraud-detection-65868bcdb5-ddl99 -c fraud-detection --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "65868bcdb5-ddl99",
            "placeholder": "<POD_SUFFIX>",
            "position": 59
          },
          {
            "type": "k8s_replicaset_suffix",
            "original": "-detection",
            "placeholder": "<REPLICA_SUFFIX>",
            "position": 80
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n astronomy-shop fraud-detection-<POD_SUFFIX> -c fraud<REPLICA_SUF<REPLICA_SUFFIX>evious --tail=200\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Get logs from the previous crash of the fraud-detection container for additional failure context.",
        "sequence_number": 5,
        "original_command": "exec_shell(\"kubectl logs -n astronomy-shop fraud-detection-65868bcdb5-ddl99 -c fraud-detection --previous --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "65868bcdb5-ddl99",
            "placeholder": "<POD_SUFFIX>",
            "position": 59
          },
          {
            "type": "k8s_replicaset_suffix",
            "original": "-detection",
            "placeholder": "<REPLICA_SUFFIX>",
            "position": 80
          },
          {
            "type": "k8s_replicaset_suffix",
            "original": "-previous",
            "placeholder": "<REPLICA_SUFFIX>",
            "position": 92
          }
        ]
      },
      {
        "command": "submit([\"fraud<REPLICA_SUFFIX>\"])",
        "type": "execute_command",
        "importance_score": 3,
        "description": "Submit the identified faulty component(s) for evaluation.",
        "sequence_number": 6,
        "original_command": "submit([\"fraud-detection\"])",
        "placeholders_used": [
          {
            "type": "k8s_replicaset_suffix",
            "original": "-detection",
            "placeholder": "<REPLICA_SUFFIX>",
            "position": 14
          }
        ]
      }
    ]
  },
  {
    "problem_id": "pod_failure_hotel_res-mitigation-1",
    "key_commands": [
      {
        "command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Lists all pods in the namespace to identify failing components and overall status.",
        "sequence_number": 1,
        "original_command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")"
      },
      {
        "command": "exec_shell(\"kubectl describe pod user-<POD_SUFFIX> -n test-hotel-reservation\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Describes the failing user pod to inspect events and failure reasons.",
        "sequence_number": 2,
        "original_command": "exec_shell(\"kubectl describe pod user-66d5d6f874-5nf95 -n test-hotel-reservation\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "66d5d6f874-5nf95",
            "placeholder": "<POD_SUFFIX>",
            "position": 38
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl get deploy user -n test-hotel-reservation -o yaml\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Retrieves the user deployment manifest to verify intended image and command configuration.",
        "sequence_number": 3,
        "original_command": "exec_shell(\"kubectl get deploy user -n test-hotel-reservation -o yaml\")"
      },
      {
        "command": "exec_shell(\"kubectl get deploy -n test-hotel-reservation -o yaml\")",
        "type": "probe_command",
        "importance_score": 4,
        "description": "Fetches all deployments' manifests in the namespace for cross-comparison and context.",
        "sequence_number": 4,
        "original_command": "exec_shell(\"kubectl get deploy -n test-hotel-reservation -o yaml\")"
      },
      {
        "command": "exec_shell(\"kubectl get pod user-<POD_SUFFIX> -n test-hotel-reservation -o yaml\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "Gets the full pod spec to confirm the container image was mutated to pause and understand exact state.",
        "sequence_number": 5,
        "original_command": "exec_shell(\"kubectl get pod user-66d5d6f874-5nf95 -n test-hotel-reservation -o yaml\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "66d5d6f874-5nf95",
            "placeholder": "<POD_SUFFIX>",
            "position": 33
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl get mutatingwebhookconfigurations.admissionregistration.k8s.io -o wide\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Lists mutating webhooks to identify potential cluster-wide mutations (e.g., chaos-mesh) causing the issue.",
        "sequence_number": 6,
        "original_command": "exec_shell(\"kubectl get mutatingwebhookconfigurations.admissionregistration.k8s.io -o wide\")"
      },
      {
        "command": "exec_shell(\"kubectl delete mutatingwebhookconfiguration chaos-mesh<REPLICA_SUFFIX>\")",
        "type": "execute_command",
        "importance_score": 10,
        "description": "Removes the mutating webhook responsible for altering pod specs (root-cause fix).",
        "sequence_number": 7,
        "original_command": "exec_shell(\"kubectl delete mutatingwebhookconfiguration chaos-mesh-mutation\")",
        "placeholders_used": [
          {
            "type": "k8s_replicaset_suffix",
            "original": "-mutation",
            "placeholder": "<REPLICA_SUFFIX>",
            "position": 66
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl rollout restart deploy user -n test-hotel-reservation\")",
        "type": "execute_command",
        "importance_score": 9,
        "description": "Restarts the user deployment to recreate pods without the removed mutating webhook influence.",
        "sequence_number": 8,
        "original_command": "exec_shell(\"kubectl rollout restart deploy user -n test-hotel-reservation\")"
      },
      {
        "command": "exec_shell(\"kubectl get pods -n test-hotel-reservation -o wide\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Verifies that a new user pod is running and the service has recovered.",
        "sequence_number": 9,
        "original_command": "exec_shell(\"kubectl get pods -n test-hotel-reservation -o wide\")"
      }
    ]
  },
  {
    "problem_id": "revoke_auth_mongodb-analysis-2",
    "key_commands": [
      {
        "command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Lists all pods in the namespace to identify failing components.",
        "sequence_number": 1,
        "original_command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")"
      },
      {
        "command": "exec_shell(\"kubectl describe pod rate-<POD_SUFFIX> -n test-hotel-reservation\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Describes the failing rate pod to inspect state, events, and restart reasons.",
        "sequence_number": 2,
        "original_command": "exec_shell(\"kubectl describe pod rate-7bdc978679-qg7p6 -n test-hotel-reservation\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "7bdc978679-qg7p6",
            "placeholder": "<POD_SUFFIX>",
            "position": 38
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs rate-<POD_SUFFIX> -n test-hotel-reservation -<REPLICA_SUFFIX>\")",
        "type": "probe_command",
        "importance_score": 9,
        "description": "Retrieves previous container logs from the crashing rate pod, revealing the MongoDB authorization error.",
        "sequence_number": 3,
        "original_command": "exec_shell(\"kubectl logs rate-7bdc978679-qg7p6 -n test-hotel-reservation --previous\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "7bdc978679-qg7p6",
            "placeholder": "<POD_SUFFIX>",
            "position": 30
          },
          {
            "type": "k8s_replicaset_suffix",
            "original": "-previous",
            "placeholder": "<REPLICA_SUFFIX>",
            "position": 70
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs mongodb-rate-<POD_SUFFIX> -n test-hotel-reservation\")",
        "type": "probe_command",
        "importance_score": 8,
        "description": "Checks MongoDB service logs confirming access control enabled and repeated unauthorized operations from the rate service.",
        "sequence_number": 4,
        "original_command": "exec_shell(\"kubectl logs mongodb-rate-56cc8659c9-2srsn -n test-hotel-reservation\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "56cc8659c9-2srsn",
            "placeholder": "<POD_SUFFIX>",
            "position": 38
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl get pods -n test-hotel-reservation -o wide\")",
        "type": "probe_command",
        "importance_score": 3,
        "description": "Provides extended pod details (IP, node) to verify placement and potential connectivity context.",
        "sequence_number": 5,
        "original_command": "exec_shell(\"kubectl get pods -n test-hotel-reservation -o wide\")"
      },
      {
        "command": "exec_shell(\"kubectl get deploy rate -n test-hotel-reservation -o yaml\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "Inspects the rate Deployment spec to verify configuration, showing no DB auth credentials/secret provided.",
        "sequence_number": 6,
        "original_command": "exec_shell(\"kubectl get deploy rate -n test-hotel-reservation -o yaml\")"
      },
      {
        "command": "submit({\"system_level\": \"Application\", \"fault_type\": \"Dependency Problem\"})",
        "type": "execute_command",
        "importance_score": 9,
        "description": "Submits the final analysis classification to the orchestrator.",
        "sequence_number": 7,
        "original_command": "submit({\"system_level\": \"Application\", \"fault_type\": \"Dependency Problem\"})"
      }
    ]
  },
  {
    "problem_id": "astronomy_shop_image_slow_load-localization-1",
    "key_commands": [
      {
        "command": "exec_shell(\"kubectl get pods -n astronomy-shop\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "List all pods in the astronomy-shop namespace to quickly identify any unhealthy services that could be related to image loading issues.",
        "sequence_number": 1,
        "original_command": "exec_shell(\"kubectl get pods -n astronomy-shop\")"
      }
    ]
  },
  {
    "problem_id": "redeploy_without_PV-mitigation-1",
    "key_commands": [
      {
        "command": "kubectl run -n test-hotel-reservation curl-reco --rm -i --restart=Never --image=curlimages/curl:8.8.0 --quiet --command -- curl -sS -v 'http://frontend:5000/recommendations?lat=37.7749&lon=-122.4194'",
        "type": "execute_command",
        "importance_score": 8,
        "description": "Run ephemeral curl pod to test recommendations API path via frontend.",
        "sequence_number": 1,
        "original_command": "kubectl run -n test-hotel-reservation curl-reco --rm -i --restart=Never --image=curlimages/curl:8.8.0 --quiet --command -- curl -sS -v 'http://frontend:5000/recommendations?lat=37.7749&lon=-122.4194'"
      },
      {
        "command": "exec_shell(\"kubectl run -n test-hotel-reservation curl-reco2 --rm -i --restart=Never --image=curlimages/curl:8.8.0 --quiet --command -- curl -sS -v 'http://frontend:5000/recommendations?lat=37.7749&lon=-122.4194&require=rate'\")",
        "type": "execute_command",
        "importance_score": 10,
        "description": "Ephemeral curl to /recommendations with required parameter to confirm 200 OK and end-to-end functionality.",
        "sequence_number": 2,
        "original_command": "exec_shell(\"kubectl run -n test-hotel-reservation curl-reco2 --rm -i --restart=Never --image=curlimages/curl:8.8.0 --quiet --command -- curl -sS -v 'http://frontend:5000/recommendations?lat=37.7749&lon=-122.4194&require=rate'\")"
      },
      {
        "command": "exec_shell(\"kubectl logs deploy/rate -n test-hotel-reservation --tail=200\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Inspect rate service logs for DB and cache readiness.",
        "sequence_number": 3,
        "original_command": "exec_shell(\"kubectl logs deploy/rate -n test-hotel-reservation --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl run -n test-hotel-reservation curl2 --rm -i --restart=Never --image=curlimages/curl:8.8.0 --quiet --command -- curl -sS -v 'http://frontend:5000/hotels?inDate=2015-04-09&outDate=2015-04-10&lat=37.7749&lon=-122.4194'\")",
        "type": "execute_command",
        "importance_score": 9,
        "description": "Ephemeral curl request to /hotels to verify data retrieval path is healthy.",
        "sequence_number": 4,
        "original_command": "exec_shell(\"kubectl run -n test-hotel-reservation curl2 --rm -i --restart=Never --image=curlimages/curl:8.8.0 --quiet --command -- curl -sS -v 'http://frontend:5000/hotels?inDate=2015-04-09&outDate=2015-04-10&lat=37.7749&lon=-122.4194'\")"
      },
      {
        "command": "exec_shell(\"kubectl logs deploy/profile -n test-hotel-reservation --tail=200\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Inspect profile service logs for DB and cache readiness.",
        "sequence_number": 5,
        "original_command": "exec_shell(\"kubectl logs deploy/profile -n test-hotel-reservation --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl run -n test-hotel-reservation curl --rm -i --restart=Never --image=curlimages/curl:8.8.0 --quiet --command -- curl -sS -v http://frontend:5000/\")",
        "type": "execute_command",
        "importance_score": 9,
        "description": "Launch ephemeral curl pod to test the frontend root URL returns HTTP 200.",
        "sequence_number": 6,
        "original_command": "exec_shell(\"kubectl run -n test-hotel-reservation curl --rm -i --restart=Never --image=curlimages/curl:8.8.0 --quiet --command -- curl -sS -v http://frontend:5000/\")"
      },
      {
        "command": "exec_shell(\"kubectl run -n test-hotel-reservation curl-reco --rm -i --restart=Never --image=curlimages/curl:8.8.0 --quiet --command -- curl -sS -v 'http://frontend:5000/recommendations?lat=37.7749&lon=-122.4194'\")",
        "type": "execute_command",
        "importance_score": 7,
        "description": "Attempt the recommendations API without the required parameter to surface the 400 error and diagnose the issue.",
        "sequence_number": 7,
        "original_command": "exec_shell(\"kubectl run -n test-hotel-reservation curl-reco --rm -i --restart=Never --image=curlimages/curl:8.8.0 --quiet --command -- curl -sS -v 'http://frontend:5000/recommendations?lat=37.7749&lon=-122.4194'\")"
      },
      {
        "command": "exec_shell(\"kubectl logs deploy/reservation -n test-hotel-reservation --tail=200\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Inspect reservation service logs for backend initialization and registration.",
        "sequence_number": 8,
        "original_command": "exec_shell(\"kubectl logs deploy/reservation -n test-hotel-reservation --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl describe deploy/frontend -n test-hotel-reservation\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Detail frontend deployment configuration and recent events for issues.",
        "sequence_number": 9,
        "original_command": "exec_shell(\"kubectl describe deploy/frontend -n test-hotel-reservation\")"
      },
      {
        "command": "exec_shell(\"kubectl logs deploy/user -n test-hotel-reservation --tail=200\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Inspect user service logs for DB initialization and registration.",
        "sequence_number": 10,
        "original_command": "exec_shell(\"kubectl logs deploy/user -n test-hotel-reservation --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl get endpoints -n test-hotel-reservation\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Validate service endpoints map correctly to pod IPs and ports.",
        "sequence_number": 11,
        "original_command": "exec_shell(\"kubectl get endpoints -n test-hotel-reservation\")"
      },
      {
        "command": "exec_shell(\"kubectl logs deploy/search -n test-hotel-reservation --tail=200\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Inspect search service logs for initialization and Consul registration.",
        "sequence_number": 12,
        "original_command": "exec_shell(\"kubectl logs deploy/search -n test-hotel-reservation --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl logs deploy/consul -n test-hotel-reservation --tail=200\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Confirm Consul agent health and service discovery operations via logs.",
        "sequence_number": 13,
        "original_command": "exec_shell(\"kubectl logs deploy/consul -n test-hotel-reservation --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl logs deploy/frontend -n test-hotel-reservation --tail=200\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "Review frontend logs to identify runtime errors and dependency connectivity.",
        "sequence_number": 14,
        "original_command": "exec_shell(\"kubectl logs deploy/frontend -n test-hotel-reservation --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl logs deploy/recommendation -n test-hotel-reservation --tail=200\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Check recommendation service logs for startup health and Consul registration.",
        "sequence_number": 15,
        "original_command": "exec_shell(\"kubectl logs deploy/recommendation -n test-hotel-reservation --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl get deploy -n test-hotel-reservation -o wide\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Inspect deployments, images, and selectors to confirm rollout state.",
        "sequence_number": 16,
        "original_command": "exec_shell(\"kubectl get deploy -n test-hotel-reservation -o wide\")"
      },
      {
        "command": "exec_shell(\"kubectl get svc -n test-hotel-reservation\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "List services to verify ClusterIP assignments and exposed ports.",
        "sequence_number": 17,
        "original_command": "exec_shell(\"kubectl get svc -n test-hotel-reservation\")"
      },
      {
        "command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "List all pods in the namespace to assess component readiness and health.",
        "sequence_number": 18,
        "original_command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")"
      }
    ]
  },
  {
    "problem_id": "scale_pod_zero_social_net-mitigation-1",
    "key_commands": [
      {
        "command": "exec_shell(\"kubectl get configmap -n test-social-network\")",
        "type": "probe_command",
        "importance_score": 4,
        "description": "List ConfigMaps in the namespace to verify presence of required configs (e.g., user-service) related to earlier mount failures.",
        "sequence_number": 1,
        "original_command": "exec_shell(\"kubectl get configmap -n test-social-network\")"
      },
      {
        "command": "exec_shell(\"kubectl get deploy user-service -n test-social-network -o yaml\")",
        "type": "probe_command",
        "importance_score": 4,
        "description": "Inspect the user-service deployment configuration and status to ensure replicas and mounts are correct.",
        "sequence_number": 2,
        "original_command": "exec_shell(\"kubectl get deploy user-service -n test-social-network -o yaml\")"
      },
      {
        "command": "exec_shell(\"kubectl get endpoints -n test-social-network user-service -o wide\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Confirm the user-service endpoints are populated to ensure traffic can be routed.",
        "sequence_number": 3,
        "original_command": "exec_shell(\"kubectl get endpoints -n test-social-network user-service -o wide\")"
      },
      {
        "command": "exec_shell(\"kubectl get pods -n test-social-network -l service=user-service -o wide\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Verify that the user-service pod is created and running after scaling.",
        "sequence_number": 4,
        "original_command": "exec_shell(\"kubectl get pods -n test-social-network -l service=user-service -o wide\")"
      },
      {
        "command": "exec_shell(\"kubectl scale deploy user-service -n test-social-network --replicas=1\")",
        "type": "execute_command",
        "importance_score": 10,
        "description": "Scale the user-service deployment to one replica to restore service availability.",
        "sequence_number": 5,
        "original_command": "exec_shell(\"kubectl scale deploy user-service -n test-social-network --replicas=1\")"
      },
      {
        "command": "exec_shell(\"kubectl get deploy -n test-social-network -o wide\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "Review deployment statuses to pinpoint that user-service has zero replicas and requires scaling.",
        "sequence_number": 6,
        "original_command": "exec_shell(\"kubectl get deploy -n test-social-network -o wide\")"
      },
      {
        "command": "exec_shell(\"kubectl get events -n test-social-network --sort-by=.metadata.creationTimestamp\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Inspect recent cluster events for the namespace to identify failures or scaling actions contributing to the issue.",
        "sequence_number": 7,
        "original_command": "exec_shell(\"kubectl get events -n test-social-network --sort-by=.metadata.creationTimestamp\")"
      },
      {
        "command": "exec_shell(\"kubectl get svc -n test-social-network\")",
        "type": "probe_command",
        "importance_score": 3,
        "description": "List services in the namespace to understand service exposure and endpoints configuration.",
        "sequence_number": 8,
        "original_command": "exec_shell(\"kubectl get svc -n test-social-network\")"
      },
      {
        "command": "exec_shell(\"kubectl get pods -n test-social-network\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "List all pods in the namespace to assess current workload status and detect anomalies.",
        "sequence_number": 9,
        "original_command": "exec_shell(\"kubectl get pods -n test-social-network\")"
      }
    ]
  },
  {
    "problem_id": "user_unregistered_mongodb-mitigation-2",
    "key_commands": [
      {
        "command": "exec_shell(\"kubectl describe pod mongodb-geo-<POD_SUFFIX> -n test-hotel-reservation && kubectl logs geo-84fb<POD_SUFFIX>test-hotel-reservation --tail=100 && kubectl get deploy geo -n test-hotel-reservation -o yaml\")",
        "type": "probe_command",
        "importance_score": 2,
        "description": "Check another healthy service (geo) and its MongoDB for additional baseline comparison.",
        "sequence_number": 1,
        "original_command": "exec_shell(\"kubectl describe pod mongodb-geo-5ff578bcb8-jqzcp -n test-hotel-reservation && kubectl logs geo-84fbc958c7-c8qs4 -n test-hotel-reservation --tail=100 && kubectl get deploy geo -n test-hotel-reservation -o yaml\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "5ff578bcb8-jqzcp",
            "placeholder": "<POD_SUFFIX>",
            "position": 45
          },
          {
            "type": "k8s_pod_suffix",
            "original": "84fbc958c7-c8qs4",
            "placeholder": "<POD_SUFFIX>",
            "position": 108
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl get deploy -n test-hotel-reservation -o yaml | sed -n \\'/name: profile$/,/status:/p\\'\")",
        "type": "probe_command",
        "importance_score": 1,
        "description": "Extract a snippet of the profile deployment to compare configuration patterns (auxiliary).",
        "sequence_number": 2,
        "original_command": "exec_shell(\"kubectl get deploy -n test-hotel-reservation -o yaml | sed -n \\'/name: profile$/,/status:/p\\'\")"
      },
      {
        "command": "exec_shell(\"kubectl describe pod mongodb-profile-<POD_SUFFIX> -n test-hotel-reservation\")",
        "type": "probe_command",
        "importance_score": 2,
        "description": "Confirm healthy MongoDB (profile) pod state for contrast with failing rate database behavior.",
        "sequence_number": 3,
        "original_command": "exec_shell(\"kubectl describe pod mongodb-profile-758cb77f9f-mwhzk -n test-hotel-reservation\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "758cb77f9f-mwhzk",
            "placeholder": "<POD_SUFFIX>",
            "position": 49
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs profile-<POD_SUFFIX> -n test-hotel-reservation --tail=200\")",
        "type": "probe_command",
        "importance_score": 2,
        "description": "Compare a healthy service's behavior to understand expected initialization/log patterns.",
        "sequence_number": 4,
        "original_command": "exec_shell(\"kubectl logs profile-8b6dd7c6c-wxfns -n test-hotel-reservation --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "8b6dd7c6c-wxfns",
            "placeholder": "<POD_SUFFIX>",
            "position": 33
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl get configmap -n test-hotel-reservation; kubectl get secret -n test-hotel-reservation; kubectl get svc -n test-hotel-reservation | grep rate; kubectl get configmap mongo-rate-script -n test-hotel-reservation -o yaml\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Broader discovery of configmaps/secrets/services and view MongoDB init script for additional remediation context.",
        "sequence_number": 5,
        "original_command": "exec_shell(\"kubectl get configmap -n test-hotel-reservation; kubectl get secret -n test-hotel-reservation; kubectl get svc -n test-hotel-reservation | grep rate; kubectl get configmap mongo-rate-script -n test-hotel-reservation -o yaml\")"
      },
      {
        "command": "exec_shell(\"kubectl exec -n test-hotel-reservation mongodb-rate-<POD_SUFFIX> -- sh -lc \\'ls -l /scripts; echo ---; ls -l /docker-entrypoint-initdb.d; echo ---; cat /scripts/remove-miti<POD_SUFFIX>e-mongo.sh || true; echo ---; cat /scripts/revoke-mitiga<POD_SUFFIX>mongo.sh || true\\'\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Verify presence and contents of mitigation/init scripts in the MongoDB pod to ensure correct remediation steps.",
        "sequence_number": 6,
        "original_command": "exec_shell(\"kubectl exec -n test-hotel-reservation mongodb-rate-56cc8659c9-whhcq -- sh -lc \\'ls -l /scripts; echo ---; ls -l /docker-entrypoint-initdb.d; echo ---; cat /scripts/remove-mitigate-admin-rate-mongo.sh || true; echo ---; cat /scripts/revoke-mitigate-admin-rate-mongo.sh || true\\'\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "56cc8659c9-whhcq",
            "placeholder": "<POD_SUFFIX>",
            "position": 64
          },
          {
            "type": "k8s_pod_suffix",
            "original": "mitigate-admin",
            "placeholder": "<POD_SUFFIX>",
            "position": 184
          },
          {
            "type": "k8s_pod_suffix",
            "original": "mitigate-admin",
            "placeholder": "<POD_SUFFIX>",
            "position": 252
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl exec -n test-hotel-reservation mongodb-rate-<POD_SUFFIX> -- bash -lc \\'ls -l /scripts && bash /scripts/revoke-miti<POD_SUFFIX>e-mongo.sh\\'\")",
        "type": "execute_command",
        "importance_score": 9,
        "description": "Attempt remediation by executing mitigation script in MongoDB pod to restore admin user's readWrite role.",
        "sequence_number": 7,
        "original_command": "exec_shell(\"kubectl exec -n test-hotel-reservation mongodb-rate-56cc8659c9-whhcq -- bash -lc \\'ls -l /scripts && bash /scripts/revoke-mitigate-admin-rate-mongo.sh\\'\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "56cc8659c9-whhcq",
            "placeholder": "<POD_SUFFIX>",
            "position": 64
          },
          {
            "type": "k8s_pod_suffix",
            "original": "mitigate-admin",
            "placeholder": "<POD_SUFFIX>",
            "position": 134
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs mongodb-rate-<POD_SUFFIX> -n test-hotel-reservation --tail=200\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Review MongoDB logs to corroborate authentication errors and to verify improvement post-mitigation.",
        "sequence_number": 8,
        "original_command": "exec_shell(\"kubectl logs mongodb-rate-56cc8659c9-whhcq -n test-hotel-reservation --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "56cc8659c9-whhcq",
            "placeholder": "<POD_SUFFIX>",
            "position": 38
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl exec -n test-hotel-reservation mongodb-rate-<POD_SUFFIX> -- sh -lc 'ls -l /scripts; echo ---; ls -l /docker-entrypoint-initdb.d; echo ---; cat /scripts/remove-miti<POD_SUFFIX>e-mongo.sh || true; echo ---; cat /scripts/revoke-mitiga<POD_SUFFIX>mongo.sh || true'\")",
        "type": "execute_command",
        "importance_score": 5,
        "description": "Validate existence and content of mitigation scripts in the MongoDB pod to confirm correct remediation assets.",
        "sequence_number": 9,
        "original_command": "exec_shell(\"kubectl exec -n test-hotel-reservation mongodb-rate-56cc8659c9-whhcq -- sh -lc 'ls -l /scripts; echo ---; ls -l /docker-entrypoint-initdb.d; echo ---; cat /scripts/remove-mitigate-admin-rate-mongo.sh || true; echo ---; cat /scripts/revoke-mitigate-admin-rate-mongo.sh || true'\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "56cc8659c9-whhcq",
            "placeholder": "<POD_SUFFIX>",
            "position": 64
          },
          {
            "type": "k8s_pod_suffix",
            "original": "mitigate-admin",
            "placeholder": "<POD_SUFFIX>",
            "position": 183
          },
          {
            "type": "k8s_pod_suffix",
            "original": "mitigate-admin",
            "placeholder": "<POD_SUFFIX>",
            "position": 251
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl exec -n test-hotel-reservation mongodb-rate-<POD_SUFFIX> -- bash -lc 'ls -l /scripts && bash /scripts/revoke-miti<POD_SUFFIX>e-mongo.sh'\")",
        "type": "execute_command",
        "importance_score": 10,
        "description": "Run the mitigation script inside the MongoDB pod to restore admin user's readWrite privileges on rate-db.",
        "sequence_number": 10,
        "original_command": "exec_shell(\"kubectl exec -n test-hotel-reservation mongodb-rate-56cc8659c9-whhcq -- bash -lc 'ls -l /scripts && bash /scripts/revoke-mitigate-admin-rate-mongo.sh'\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "56cc8659c9-whhcq",
            "placeholder": "<POD_SUFFIX>",
            "position": 64
          },
          {
            "type": "k8s_pod_suffix",
            "original": "mitigate-admin",
            "placeholder": "<POD_SUFFIX>",
            "position": 133
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl get configmap -n test-hotel-reservation && kubectl get configmap mongo-rate-script -n test-hotel-reservation -o yaml && kubectl get configmap failure-admin-rate -n test-hotel-reservation -o yaml\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "List and inspect configmaps to confirm presence and content of admin/role restore scripts for MongoDB.",
        "sequence_number": 11,
        "original_command": "exec_shell(\"kubectl get configmap -n test-hotel-reservation && kubectl get configmap mongo-rate-script -n test-hotel-reservation -o yaml && kubectl get configmap failure-admin-rate -n test-hotel-reservation -o yaml\")"
      },
      {
        "command": "exec_shell(\"kubectl get deploy mongodb-rate -n test-hotel-reservation -o yaml\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Check the mongodb-rate deployment manifest to verify volumes and script mount points.",
        "sequence_number": 12,
        "original_command": "exec_shell(\"kubectl get deploy mongodb-rate -n test-hotel-reservation -o yaml\")"
      },
      {
        "command": "exec_shell(\"kubectl describe pod mongodb-rate-<POD_SUFFIX> -n test-hotel-reservation\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "Examine the rate MongoDB pod to confirm --auth is enabled and scripts/configmaps are mounted.",
        "sequence_number": 13,
        "original_command": "exec_shell(\"kubectl describe pod mongodb-rate-56cc8659c9-whhcq -n test-hotel-reservation\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "56cc8659c9-whhcq",
            "placeholder": "<POD_SUFFIX>",
            "position": 46
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl get deploy rate -n test-hotel-reservation -o yaml\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Review the rate deployment configuration (image, command, env) for context.",
        "sequence_number": 14,
        "original_command": "exec_shell(\"kubectl get deploy rate -n test-hotel-reservation -o yaml\")"
      },
      {
        "command": "exec_shell(\"kubectl logs rate-<POD_SUFFIX> -n test-hotel-reservation -c hotel-reserv-rate\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "Check application logs of the rate container to reveal MongoDB authentication failure.",
        "sequence_number": 15,
        "original_command": "exec_shell(\"kubectl logs rate-7bdc978679-55hg9 -n test-hotel-reservation -c hotel-reserv-rate\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "7bdc978679-55hg9",
            "placeholder": "<POD_SUFFIX>",
            "position": 30
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl describe pod rate-<POD_SUFFIX> -n test-hotel-reservation\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Inspect the failing rate pod for detailed status, events, and restart reason.",
        "sequence_number": 16,
        "original_command": "exec_shell(\"kubectl describe pod rate-7bdc978679-55hg9 -n test-hotel-reservation\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "7bdc978679-55hg9",
            "placeholder": "<POD_SUFFIX>",
            "position": 38
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs rate-<POD_SUFFIX> -n test-hotel-reservation -<REPLICA_SUFFIX>\")",
        "type": "probe_command",
        "importance_score": 2,
        "description": "Attempt to view previous container logs for the rate pod to gather failure context.",
        "sequence_number": 17,
        "original_command": "exec_shell(\"kubectl logs rate-7bdc978679-55hg9 -n test-hotel-reservation --previous\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "7bdc978679-55hg9",
            "placeholder": "<POD_SUFFIX>",
            "position": 30
          },
          {
            "type": "k8s_replicaset_suffix",
            "original": "-previous",
            "placeholder": "<REPLICA_SUFFIX>",
            "position": 70
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "List all pods in the namespace to identify failing components (rate pod in CrashLoopBackOff).",
        "sequence_number": 18,
        "original_command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")"
      }
    ]
  },
  {
    "problem_id": "noop_detection_social_network-1",
    "key_commands": [
      {
        "command": "exec_shell(\"kubectl exec -n test-social-network pod/nginx-thrift-7c48f57-7rqf7 -c nginx-thrift -- sh -lc 'curl -s -o /dev/null -w \\\"%{http_code}\\\\n\\\" \\\"http://<IP_ADDRESS>:8080/wrk2-api/home-timeline/read?user_id=1&start=0&stop=10\\\"'\")",
        "type": "probe_command",
        "importance_score": 4,
        "description": "In-pod HTTP probe from nginx-thrift to validate application endpoint responsiveness",
        "sequence_number": 1,
        "original_command": "exec_shell(\"kubectl exec -n test-social-network pod/nginx-thrift-7c48f57-7rqf7 -c nginx-thrift -- sh -lc 'curl -s -o /dev/null -w \\\"%{http_code}\\\\n\\\" \\\"http://127.0.0.1:8080/wrk2-api/home-timeline/read?user_id=1&start=0&stop=10\\\"'\")",
        "placeholders_used": [
          {
            "type": "ip_address",
            "original": "127.0.0.1",
            "placeholder": "<IP_ADDRESS>",
            "position": 159
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-social-network -l service=home-timeline-service --tail=200\")",
        "type": "probe_command",
        "importance_score": 3,
        "description": "Tail home-timeline-service logs to confirm startup and identify downstream issues",
        "sequence_number": 2,
        "original_command": "exec_shell(\"kubectl logs -n test-social-network -l service=home-timeline-service --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-social-network pod/nginx-thrift-7c48f57-7rqf7 --tail=200\")",
        "type": "probe_command",
        "importance_score": 2,
        "description": "Pod-level nginx-thrift logs to corroborate frontend health",
        "sequence_number": 3,
        "original_command": "exec_shell(\"kubectl logs -n test-social-network pod/nginx-thrift-7c48f57-7rqf7 --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-social-network deploy/nginx-thrift -c nginx-thrift --tail=200\")",
        "type": "probe_command",
        "importance_score": 2,
        "description": "Explicitly tail the nginx-thrift application container logs for issues",
        "sequence_number": 4,
        "original_command": "exec_shell(\"kubectl logs -n test-social-network deploy/nginx-thrift -c nginx-thrift --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-social-network deploy/nginx-thrift --tail=200\")",
        "type": "probe_command",
        "importance_score": 2,
        "description": "Check frontend (nginx-thrift) logs for any request handling or upstream errors",
        "sequence_number": 5,
        "original_command": "exec_shell(\"kubectl logs -n test-social-network deploy/nginx-thrift --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-social-network deploy/compose-post-service --tail=200 | sed -n '1,200p'\")",
        "type": "probe_command",
        "importance_score": 3,
        "description": "Fetch compose-post-service logs to confirm service startup status",
        "sequence_number": 6,
        "original_command": "exec_shell(\"kubectl logs -n test-social-network deploy/compose-post-service --tail=200 | sed -n '1,200p'\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-social-network deploy/social-graph-service --tail=200; kubectl logs -n test-social-network deploy/post-storage-service --tail=200; kubectl logs -n test-social-network deploy/text-service --tail=200; kubectl logs -n test-social-network deploy/user-timeline-service --tail=200\")",
        "type": "probe_command",
        "importance_score": 8,
        "description": "Aggregate logs from multiple core services; exposes repeated MongoDB index/connection errors across services",
        "sequence_number": 7,
        "original_command": "exec_shell(\"kubectl logs -n test-social-network deploy/social-graph-service --tail=200; kubectl logs -n test-social-network deploy/post-storage-service --tail=200; kubectl logs -n test-social-network deploy/text-service --tail=200; kubectl logs -n test-social-network deploy/user-timeline-service --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-social-network deploy/user-mongodb --tail=200\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "Inspect user-mongodb logs to validate DB startup, listening state, and client connections",
        "sequence_number": 8,
        "original_command": "exec_shell(\"kubectl logs -n test-social-network deploy/user-mongodb --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-social-network -l service=user-service --tail=200\")",
        "type": "probe_command",
        "importance_score": 9,
        "description": "Check user-service logs; reveals MongoDB connection/index creation errors indicating anomalies",
        "sequence_number": 9,
        "original_command": "exec_shell(\"kubectl logs -n test-social-network -l service=user-service --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl get endpoints -n test-social-network -o wide\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Verify service endpoints to ensure backends are discoverable and ready",
        "sequence_number": 10,
        "original_command": "exec_shell(\"kubectl get endpoints -n test-social-network -o wide\")"
      },
      {
        "command": "exec_shell(\"kubectl get events -n test-social-network --sort-by=.lastTimestamp\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Review recent Kubernetes events to surface scheduling, image, or mount issues",
        "sequence_number": 11,
        "original_command": "exec_shell(\"kubectl get events -n test-social-network --sort-by=.lastTimestamp\")"
      },
      {
        "command": "exec_shell(\"kubectl get deploy -n test-social-network -o wide\")",
        "type": "probe_command",
        "importance_score": 4,
        "description": "Inspect deployments, container images, and selectors for configuration sanity",
        "sequence_number": 12,
        "original_command": "exec_shell(\"kubectl get deploy -n test-social-network -o wide\")"
      },
      {
        "command": "exec_shell(\"kubectl get svc -n test-social-network\")",
        "type": "probe_command",
        "importance_score": 4,
        "description": "List services to confirm service exposure and ports",
        "sequence_number": 13,
        "original_command": "exec_shell(\"kubectl get svc -n test-social-network\")"
      },
      {
        "command": "exec_shell(\"kubectl get pods -n test-social-network\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "List all pods in the namespace to verify workload health and readiness",
        "sequence_number": 14,
        "original_command": "exec_shell(\"kubectl get pods -n test-social-network\")"
      }
    ]
  },
  {
    "problem_id": "astronomy_shop_image_slow_load-detection-1",
    "key_commands": [
      {
        "command": "exec_shell(\"kubectl get pods -n astronomy-shop\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "List all pods in the astronomy-shop namespace to get an overview of service health and restarts.",
        "sequence_number": 1,
        "original_command": "exec_shell(\"kubectl get pods -n astronomy-shop\")"
      },
      {
        "command": "exec_shell(\"kubectl get events -n astronomy-shop --sort-by=.metadata.creationTimestamp\")",
        "type": "probe_command",
        "importance_score": 9,
        "description": "Review chronological cluster events for warnings such as BackOff and probe failures indicating anomalies.",
        "sequence_number": 2,
        "original_command": "exec_shell(\"kubectl get events -n astronomy-shop --sort-by=.metadata.creationTimestamp\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n astronomy-shop ad-<POD_SUFFIX> --tail=200 -<REPLICA_SUFFIX>\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Fetch recent logs from the ad service pod to check for runtime errors correlated with restarts.",
        "sequence_number": 3,
        "original_command": "exec_shell(\"kubectl logs -n astronomy-shop ad-94bd576b5-gsz5t --tail=200 --timestamps\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "94bd576b5-gsz5t",
            "placeholder": "<POD_SUFFIX>",
            "position": 46
          },
          {
            "type": "k8s_replicaset_suffix",
            "original": "-timestamps",
            "placeholder": "<REPLICA_SUFFIX>",
            "position": 71
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n astronomy-shop fraud-detection-<POD_SUFFIX> --tail=200 -<REPLICA_SUFFIX>\")",
        "type": "probe_command",
        "importance_score": 3,
        "description": "Attempt to read current logs from the fraud-detection pod for error signals.",
        "sequence_number": 4,
        "original_command": "exec_shell(\"kubectl logs -n astronomy-shop fraud-detection-65868bcdb5-f2ph2 --tail=200 --timestamps\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "65868bcdb5-f2ph2",
            "placeholder": "<POD_SUFFIX>",
            "position": 59
          },
          {
            "type": "k8s_replicaset_suffix",
            "original": "-timestamps",
            "placeholder": "<REPLICA_SUFFIX>",
            "position": 84
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n astronomy-shop fraud-detection-<POD_SUFFIX> -<REPLICA_SU<REPLICA_SUFFIX>estamps --tail=200\")",
        "type": "probe_command",
        "importance_score": 3,
        "description": "Attempt to fetch logs from the previous container instance of fraud-detection to investigate restarts.",
        "sequence_number": 5,
        "original_command": "exec_shell(\"kubectl logs -n astronomy-shop fraud-detection-65868bcdb5-f2ph2 --previous --timestamps --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "65868bcdb5-f2ph2",
            "placeholder": "<POD_SUFFIX>",
            "position": 59
          },
          {
            "type": "k8s_replicaset_suffix",
            "original": "-previous",
            "placeholder": "<REPLICA_SUFFIX>",
            "position": 73
          },
          {
            "type": "k8s_replicaset_suffix",
            "original": "-timestamps",
            "placeholder": "<REPLICA_SUFFIX>",
            "position": 84
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl describe pod -n astronomy-shop fraud-detection-<POD_SUFFIX>\")",
        "type": "probe_command",
        "importance_score": 9,
        "description": "Describe the fraud-detection pod to inspect container states, exit codes, resource limits, and BackOff events.",
        "sequence_number": 6,
        "original_command": "exec_shell(\"kubectl describe pod -n astronomy-shop fraud-detection-65868bcdb5-f2ph2\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "65868bcdb5-f2ph2",
            "placeholder": "<POD_SUFFIX>",
            "position": 67
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n astronomy-shop ad-<POD_SUFFIX> -<REPLICA_SU<REPLICA_SUFFIX>estamps --tail=200\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Fetch logs from the previous ad container instance to correlate with restart/back-off behavior.",
        "sequence_number": 7,
        "original_command": "exec_shell(\"kubectl logs -n astronomy-shop ad-94bd576b5-gsz5t --previous --timestamps --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "94bd576b5-gsz5t",
            "placeholder": "<POD_SUFFIX>",
            "position": 46
          },
          {
            "type": "k8s_replicaset_suffix",
            "original": "-previous",
            "placeholder": "<REPLICA_SUFFIX>",
            "position": 60
          },
          {
            "type": "k8s_replicaset_suffix",
            "original": "-timestamps",
            "placeholder": "<REPLICA_SUFFIX>",
            "position": 71
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl describe pod -n astronomy-shop ad-<POD_SUFFIX>\")",
        "type": "probe_command",
        "importance_score": 8,
        "description": "Describe the ad pod to confirm restart history, exit code 137, and resource settings indicating anomalies.",
        "sequence_number": 8,
        "original_command": "exec_shell(\"kubectl describe pod -n astronomy-shop ad-94bd576b5-gsz5t\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "94bd576b5-gsz5t",
            "placeholder": "<POD_SUFFIX>",
            "position": 54
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n astronomy-shop fraud-detection-<POD_SUFFIX> -c fraud<REPLICA_SUF<REPLICA_SU<REPLICA_SUFFIX> --timestamps --tail=200\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Target previous logs for the fraud-detection main container to capture failure context prior to restarts.",
        "sequence_number": 9,
        "original_command": "exec_shell(\"kubectl logs -n astronomy-shop fraud-detection-65868bcdb5-f2ph2 -c fraud-detection --previous --timestamps --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "65868bcdb5-f2ph2",
            "placeholder": "<POD_SUFFIX>",
            "position": 59
          },
          {
            "type": "k8s_replicaset_suffix",
            "original": "-detection",
            "placeholder": "<REPLICA_SUFFIX>",
            "position": 80
          },
          {
            "type": "k8s_replicaset_suffix",
            "original": "-previous",
            "placeholder": "<REPLICA_SUFFIX>",
            "position": 92
          },
          {
            "type": "k8s_replicaset_suffix",
            "original": "-timestamps",
            "placeholder": "<REPLICA_SUFFIX>",
            "position": 103
          }
        ]
      },
      {
        "command": "submit(\"Yes\")",
        "type": "execute_command",
        "importance_score": 10,
        "description": "Submit the final decision indicating anomalies were detected based on evidence gathered.",
        "sequence_number": 10,
        "original_command": "submit(\"Yes\")"
      }
    ]
  },
  {
    "problem_id": "astronomy_shop_ad_service_failure-detection-1",
    "key_commands": [
      {
        "command": "exec_shell(\"kubectl get pods -n astronomy-shop\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "List all pods in the astronomy-shop namespace to identify any pods in error states.",
        "sequence_number": 1,
        "original_command": "exec_shell(\"kubectl get pods -n astronomy-shop\")"
      },
      {
        "command": "exec_shell(\"kubectl describe pod fraud-detection-<POD_SUFFIX> -n astronomy-shop\")",
        "type": "probe_command",
        "importance_score": 9,
        "description": "Inspect the failing fraud-detection pod for detailed status and events indicating CrashLoopBackOff.",
        "sequence_number": 2,
        "original_command": "exec_shell(\"kubectl describe pod fraud-detection-65868bcdb5-gnrp2 -n astronomy-shop\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "65868bcdb5-gnrp2",
            "placeholder": "<POD_SUFFIX>",
            "position": 49
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs fraud-detection-<POD_SUFFIX> -n astronomy-shop -<REPLICA_SUFFIX>\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Fetch logs from the previously terminated container instance to investigate the crash cause.",
        "sequence_number": 3,
        "original_command": "exec_shell(\"kubectl logs fraud-detection-65868bcdb5-gnrp2 -n astronomy-shop --previous\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "65868bcdb5-gnrp2",
            "placeholder": "<POD_SUFFIX>",
            "position": 41
          },
          {
            "type": "k8s_replicaset_suffix",
            "original": "-previous",
            "placeholder": "<REPLICA_SUFFIX>",
            "position": 73
          }
        ]
      },
      {
        "command": "submit(\"Yes\")",
        "type": "execute_command",
        "importance_score": 10,
        "description": "Submit the anomaly detection result indicating an issue was found.",
        "sequence_number": 4,
        "original_command": "submit(\"Yes\")"
      }
    ]
  },
  {
    "problem_id": "wrong_bin_usage-mitigation-1",
    "key_commands": [
      {
        "command": "exec_shell(\"kubectl get deploy -n test-hotel-reservation -o jsonpath='{range .items[*]}{.metadata.name}{\\\"\\\\t\\\"}{.spec.template.spec.containers[0].command[0]}{\\\"\\\\n\\\"}{end}'\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Audit all deployments to verify each container command, confirming profile now runs 'profile'",
        "sequence_number": 1,
        "original_command": "exec_shell(\"kubectl get deploy -n test-hotel-reservation -o jsonpath='{range .items[*]}{.metadata.name}{\\\"\\\\t\\\"}{.spec.template.spec.containers[0].command[0]}{\\\"\\\\n\\\"}{end}'\")"
      },
      {
        "command": "exec_shell(\"kubectl get deploy -n test-hotel-reservation -o jsonpath=\\'{range .items[*]}{.metadata.name}{\\\\\"\\\\\\\\t\\\\\"}{.spec.template.spec.containers[0].command[0]}{\\\\\"\\\\\\\\n\\\\\"}{end}\\'\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "List all deployments and their container commands to validate the fix and check for other misconfigurations.",
        "sequence_number": 2,
        "original_command": "exec_shell(\"kubectl get deploy -n test-hotel-reservation -o jsonpath=\\'{range .items[*]}{.metadata.name}{\\\\\"\\\\\\\\t\\\\\"}{.spec.template.spec.containers[0].command[0]}{\\\\\"\\\\\\\\n\\\\\"}{end}\\'\")"
      },
      {
        "command": "exec_shell(\"kubectl rollout status deployment/profile -n test-hotel-reservation && kubectl logs -n test-hotel-reservation deployment/profile --tail=100\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "Wait for rollout to complete and verify profile service starts correctly via logs",
        "sequence_number": 3,
        "original_command": "exec_shell(\"kubectl rollout status deployment/profile -n test-hotel-reservation && kubectl logs -n test-hotel-reservation deployment/profile --tail=100\")"
      },
      {
        "command": "exec_shell(\"kubectl patch deployment profile -n test-hotel-reservation --type='json' -p='[{\\\"op\\\":\\\"replace\\\",\\\"path\\\":\\\"/spec/template/spec/containers/0/command\\\",\\\"value\\\":[\\\"profile\\\"]}]'\")",
        "type": "execute_command",
        "importance_score": 10,
        "description": "Fix the profile deployment by replacing the container command to run the correct binary",
        "sequence_number": 4,
        "original_command": "exec_shell(\"kubectl patch deployment profile -n test-hotel-reservation --type='json' -p='[{\\\"op\\\":\\\"replace\\\",\\\"path\\\":\\\"/spec/template/spec/containers/0/command\\\",\\\"value\\\":[\\\"profile\\\"]}]'\")"
      },
      {
        "command": "exec_shell(\"kubectl patch deployment profile -n test-hotel-reservation --type=\\'json\\' -p=\\'[{\\\\\"op\\\\\":\\\\\"replace\\\\\",\\\\\"path\\\\\":\\\\\"/spec/template/spec/containers/0/command\\\\\",\\\\\"value\\\\\":[\\\\\"profile\\\\\"]}]\\'\")",
        "type": "execute_command",
        "importance_score": 10,
        "description": "Patch the profile deployment to set the correct container command to run the profile binary.",
        "sequence_number": 5,
        "original_command": "exec_shell(\"kubectl patch deployment profile -n test-hotel-reservation --type=\\'json\\' -p=\\'[{\\\\\"op\\\\\":\\\\\"replace\\\\\",\\\\\"path\\\\\":\\\\\"/spec/template/spec/containers/0/command\\\\\",\\\\\"value\\\\\":[\\\\\"profile\\\\\"]}]\\'\")"
      },
      {
        "command": "exec_shell(\"kubectl get deployment search geo -n test-hotel-reservation -o yaml\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Compare search and geo deployments to understand correct command configuration",
        "sequence_number": 6,
        "original_command": "exec_shell(\"kubectl get deployment search geo -n test-hotel-reservation -o yaml\")"
      },
      {
        "command": "exec_shell(\"kubectl get deployment profile -n test-hotel-reservation -o yaml\")",
        "type": "probe_command",
        "importance_score": 8,
        "description": "Examine profile deployment spec to confirm misconfigured container command",
        "sequence_number": 7,
        "original_command": "exec_shell(\"kubectl get deployment profile -n test-hotel-reservation -o yaml\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation deployment/profile --tail=200\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "Inspect profile service logs; reveals it is running the wrong binary",
        "sequence_number": 8,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation deployment/profile --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation deployment/search --tail=200\")",
        "type": "probe_command",
        "importance_score": 4,
        "description": "Verify search service behavior and registration for comparison",
        "sequence_number": 9,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation deployment/search --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation deployment/consul --tail=200\")",
        "type": "probe_command",
        "importance_score": 3,
        "description": "Check Consul agent logs to rule out service discovery issues",
        "sequence_number": 10,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation deployment/consul --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation deployment/frontend --tail=200\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Inspect frontend logs to observe user-facing errors and guide investigation",
        "sequence_number": 11,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation deployment/frontend --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl get svc -n test-hotel-reservation -o wide\")",
        "type": "probe_command",
        "importance_score": 2,
        "description": "List services and cluster IPs/ports for context on service exposure",
        "sequence_number": 12,
        "original_command": "exec_shell(\"kubectl get svc -n test-hotel-reservation -o wide\")"
      },
      {
        "command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")",
        "type": "probe_command",
        "importance_score": 4,
        "description": "List all pods in the namespace to assess overall workload status",
        "sequence_number": 13,
        "original_command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")"
      }
    ]
  },
  {
    "problem_id": "scale_pod_zero_social_net-localization-1",
    "key_commands": [
      {
        "command": "exec_shell(\"kubectl get pods -n test-social-network\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "Lists all pods in the test-social-network namespace to spot anomalies; reveals user-service pod terminating.",
        "sequence_number": 1,
        "original_command": "exec_shell(\"kubectl get pods -n test-social-network\")"
      },
      {
        "command": "exec_shell(\"kubectl describe pod -n test-social-network user-service-<POD_SUFFIX>\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Describes the specific user-service pod to see detailed state and termination context.",
        "sequence_number": 2,
        "original_command": "exec_shell(\"kubectl describe pod -n test-social-network user-service-6d5985bd55-dcwpl\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "6d5985bd55-dcwpl",
            "placeholder": "<POD_SUFFIX>",
            "position": 69
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl get deploy -n test-social-network -o wide\")",
        "type": "probe_command",
        "importance_score": 8,
        "description": "Lists deployments and their readiness; indicates user-service has zero replicas/availability.",
        "sequence_number": 3,
        "original_command": "exec_shell(\"kubectl get deploy -n test-social-network -o wide\")"
      },
      {
        "command": "exec_shell(\"kubectl describe deploy -n test-social-network user-service; kubectl get rs -n test-social-network | grep user-service; kubectl get hpa -n test-social-network\")",
        "type": "probe_command",
        "importance_score": 4,
        "description": "Attempts deeper diagnosis by describing the user-service deployment and checking ReplicaSets/HPAs to understand scaling behavior.",
        "sequence_number": 4,
        "original_command": "exec_shell(\"kubectl describe deploy -n test-social-network user-service; kubectl get rs -n test-social-network | grep user-service; kubectl get hpa -n test-social-network\")"
      },
      {
        "command": "exec_shell(\"kubectl get deploy user-service -n test-social-network -o yaml\")",
        "type": "probe_command",
        "importance_score": 10,
        "description": "Fetches full deployment spec for user-service; confirms spec.replicas is 0 (root cause).",
        "sequence_number": 5,
        "original_command": "exec_shell(\"kubectl get deploy user-service -n test-social-network -o yaml\")"
      },
      {
        "command": "submit([\"user-service\"])",
        "type": "execute_command",
        "importance_score": 10,
        "description": "Submits the localized faulty component (user-service) as the root cause due to replicas scaled to zero.",
        "sequence_number": 6,
        "original_command": "submit([\"user-service\"])"
      }
    ]
  },
  {
    "problem_id": "astronomy_shop_loadgenerator_flood_homepage-localization-1",
    "key_commands": [
      {
        "command": "exec_shell(\"kubectl get pods -n astronomy-shop\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "List all pods in the astronomy-shop namespace to identify any pods with restarts or abnormal states.",
        "sequence_number": 1,
        "original_command": "exec_shell(\"kubectl get pods -n astronomy-shop\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n astronomy-shop fraud-detection-<POD_SUFFIX> --tail=200\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Check current logs of the fraud-detection pod for errors or crash clues.",
        "sequence_number": 2,
        "original_command": "exec_shell(\"kubectl logs -n astronomy-shop fraud-detection-65868bcdb5-sw6lf --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "65868bcdb5-sw6lf",
            "placeholder": "<POD_SUFFIX>",
            "position": 59
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n astronomy-shop fraud-detection-<POD_SUFFIX> -<REPLICA_SUFFIX> --tail=200\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Inspect logs from the previous container instance to capture crash information before restart.",
        "sequence_number": 3,
        "original_command": "exec_shell(\"kubectl logs -n astronomy-shop fraud-detection-65868bcdb5-sw6lf --previous --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "65868bcdb5-sw6lf",
            "placeholder": "<POD_SUFFIX>",
            "position": 59
          },
          {
            "type": "k8s_replicaset_suffix",
            "original": "-previous",
            "placeholder": "<REPLICA_SUFFIX>",
            "position": 73
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl describe pod -n astronomy-shop fraud-detection-<POD_SUFFIX>\")",
        "type": "probe_command",
        "importance_score": 9,
        "description": "Describe the fraud-detection pod to view container states, exit codes (137), resource limits, and restart/backoff events.",
        "sequence_number": 4,
        "original_command": "exec_shell(\"kubectl describe pod -n astronomy-shop fraud-detection-65868bcdb5-sw6lf\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "65868bcdb5-sw6lf",
            "placeholder": "<POD_SUFFIX>",
            "position": 67
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n astronomy-shop checkout-<POD_SUFFIX> --tail=200\")",
        "type": "probe_command",
        "importance_score": 2,
        "description": "Review checkout service logs to rule out broader system issues.",
        "sequence_number": 5,
        "original_command": "exec_shell(\"kubectl logs -n astronomy-shop checkout-5bc54f8cd8-ckhgx --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "5bc54f8cd8-ckhgx",
            "placeholder": "<POD_SUFFIX>",
            "position": 52
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n astronomy-shop payment-<POD_SUFFIX> --tail=200\")",
        "type": "probe_command",
        "importance_score": 3,
        "description": "Check payment service logs to confirm it is operating normally and isolate the fault to another service.",
        "sequence_number": 6,
        "original_command": "exec_shell(\"kubectl logs -n astronomy-shop payment-7597577cb5-d5v7j --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "7597577cb5-d5v7j",
            "placeholder": "<POD_SUFFIX>",
            "position": 51
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl get pod -n astronomy-shop fraud-detection-<POD_SUFFIX> -o jsonpath='{.status.containerStatuses[0].lastState.terminated.reason} {.status.containerStatuses[0].lastState.terminated.exitCode} {.status.containerStatuses[0].state.terminated.reason} {.status.containerStatuses[0].state.terminated.exitCode}\\n'\")",
        "type": "probe_command",
        "importance_score": 8,
        "description": "Extract termination reasons and exit codes from the fraud-detection pod to verify crash type (Error 137).",
        "sequence_number": 7,
        "original_command": "exec_shell(\"kubectl get pod -n astronomy-shop fraud-detection-65868bcdb5-sw6lf -o jsonpath='{.status.containerStatuses[0].lastState.terminated.reason} {.status.containerStatuses[0].lastState.terminated.exitCode} {.status.containerStatuses[0].state.terminated.reason} {.status.containerStatuses[0].state.terminated.exitCode}\\n'\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "65868bcdb5-sw6lf",
            "placeholder": "<POD_SUFFIX>",
            "position": 62
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl get pod -n astronomy-shop fraud-detection-<POD_SUFFIX> -o jsonpath='{.status.containerStatuses[0].lastState.terminated.reason} {.status.containerStatuses[0].lastState.terminated.signal} {.status.containerStatuses[0].lastState.terminated.exitCode} {.status.containerStatuses[0].state.terminated.reason} {.status.containerStatuses[0].state.terminated.signal} {.status.containerStatuses[0].state.terminated.exitCode} {.status.containerStatuses[0].lastState.terminated.finishedAt}\\n'\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "Further detail termination info including signals and timestamp for the fraud-detection pod crash.",
        "sequence_number": 8,
        "original_command": "exec_shell(\"kubectl get pod -n astronomy-shop fraud-detection-65868bcdb5-sw6lf -o jsonpath='{.status.containerStatuses[0].lastState.terminated.reason} {.status.containerStatuses[0].lastState.terminated.signal} {.status.containerStatuses[0].lastState.terminated.exitCode} {.status.containerStatuses[0].state.terminated.reason} {.status.containerStatuses[0].state.terminated.signal} {.status.containerStatuses[0].state.terminated.exitCode} {.status.containerStatuses[0].lastState.terminated.finishedAt}\\n'\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "65868bcdb5-sw6lf",
            "placeholder": "<POD_SUFFIX>",
            "position": 62
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n astronomy-shop frontend-<POD_SUFFIX> --tail=200\")",
        "type": "probe_command",
        "importance_score": 3,
        "description": "Validate frontend service health to ensure homepage availability, isolating issue away from frontend.",
        "sequence_number": 9,
        "original_command": "exec_shell(\"kubectl logs -n astronomy-shop frontend-7d6b77c58-zww6x --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "7d6b77c58-zww6x",
            "placeholder": "<POD_SUFFIX>",
            "position": 52
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl get events -n astronomy-shop --sort-by=.lastTimestamp\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "Review recent namespace events to corroborate back-off restarts and container failures for fraud-detection.",
        "sequence_number": 10,
        "original_command": "exec_shell(\"kubectl get events -n astronomy-shop --sort-by=.lastTimestamp\")"
      },
      {
        "command": "submit([\"fraud<REPLICA_SUFFIX>\"])",
        "type": "execute_command",
        "importance_score": 10,
        "description": "Submit the identified faulty component based on evidence of repeated crashes (exit code 137) and back-off.",
        "sequence_number": 11,
        "original_command": "submit([\"fraud-detection\"])",
        "placeholders_used": [
          {
            "type": "k8s_replicaset_suffix",
            "original": "-detection",
            "placeholder": "<REPLICA_SUFFIX>",
            "position": 14
          }
        ]
      }
    ]
  },
  {
    "problem_id": "network_delay_hotel_res-localization-1",
    "key_commands": [
      {
        "command": "exec_shell(\"kubectl exec -n test-hotel-reservation deploy/frontend -- curl -sS \\'http://localhost:5000/recommendations?lat=37.7749&lon=-122.4194&inDate=2015-04-09&outDate=2015-04-10&username=john\\'; echo \\'---\\'; kubectl exec -n test-hotel-reservation deploy/frontend -- curl -sS \\'http://localhost:5000/user?username=john\\'\")",
        "type": "probe_command",
        "importance_score": 3,
        "description": "Attempt recommendations and user endpoints with additional parameters to validate request handling.",
        "sequence_number": 1,
        "original_command": "exec_shell(\"kubectl exec -n test-hotel-reservation deploy/frontend -- curl -sS \\'http://localhost:5000/recommendations?lat=37.7749&lon=-122.4194&inDate=2015-04-09&outDate=2015-04-10&username=john\\'; echo \\'---\\'; kubectl exec -n test-hotel-reservation deploy/frontend -- curl -sS \\'http://localhost:5000/user?username=john\\'\")"
      },
      {
        "command": "exec_shell(\"kubectl exec -n test-hotel-reservation deploy/frontend -- curl -sS \\'http://localhost:5000/user?username=john\\' -v\")",
        "type": "probe_command",
        "importance_score": 3,
        "description": "Test user endpoint to validate request handling and error messaging.",
        "sequence_number": 2,
        "original_command": "exec_shell(\"kubectl exec -n test-hotel-reservation deploy/frontend -- curl -sS \\'http://localhost:5000/user?username=john\\' -v\")"
      },
      {
        "command": "exec_shell(\"kubectl exec -n test-hotel-reservation deploy/frontend -- curl -sS 'http://localhost:5000/user?username=john' -v\")",
        "type": "probe_command",
        "importance_score": 4,
        "description": "Verify user endpoint behavior and required authentication parameters.",
        "sequence_number": 3,
        "original_command": "exec_shell(\"kubectl exec -n test-hotel-reservation deploy/frontend -- curl -sS 'http://localhost:5000/user?username=john' -v\")"
      },
      {
        "command": "exec_shell(\"kubectl exec -n test-hotel-reservation deploy/frontend -- curl -sS \\'http://localhost:5000/recommendations?lat=37.7749&lon=-122.4194\\'\")",
        "type": "probe_command",
        "importance_score": 9,
        "description": "Re-run recommendations endpoint without verbose flags to capture the service error message.",
        "sequence_number": 4,
        "original_command": "exec_shell(\"kubectl exec -n test-hotel-reservation deploy/frontend -- curl -sS \\'http://localhost:5000/recommendations?lat=37.7749&lon=-122.4194\\'\")"
      },
      {
        "command": "exec_shell(\"kubectl exec -n test-hotel-reservation deploy/frontend -- curl -sS 'http://localhost:5000/recommendations?lat=37.7749&lon=-122.4194'\")",
        "type": "probe_command",
        "importance_score": 4,
        "description": "Check recommendations endpoint response body for error messaging about required parameters.",
        "sequence_number": 5,
        "original_command": "exec_shell(\"kubectl exec -n test-hotel-reservation deploy/frontend -- curl -sS 'http://localhost:5000/recommendations?lat=37.7749&lon=-122.4194'\")"
      },
      {
        "command": "exec_shell(\"kubectl exec -n test-hotel-reservation deploy/frontend -- curl -sS \\'http://localhost:5000/recommendations?lat=37.7749&lon=-122.4194\\' -v\")",
        "type": "probe_command",
        "importance_score": 10,
        "description": "Call the recommendations endpoint; reproduces 400 Bad Request indicating a functional issue.",
        "sequence_number": 6,
        "original_command": "exec_shell(\"kubectl exec -n test-hotel-reservation deploy/frontend -- curl -sS \\'http://localhost:5000/recommendations?lat=37.7749&lon=-122.4194\\' -v\")"
      },
      {
        "command": "exec_shell(\"kubectl exec -n test-hotel-reservation deploy/frontend -- curl -sS 'http://localhost:5000/recommendations?lat=37.7749&lon=-122.4194' -v\")",
        "type": "probe_command",
        "importance_score": 4,
        "description": "Probe the recommendations endpoint to observe parameter validation behavior.",
        "sequence_number": 7,
        "original_command": "exec_shell(\"kubectl exec -n test-hotel-reservation deploy/frontend -- curl -sS 'http://localhost:5000/recommendations?lat=37.7749&lon=-122.4194' -v\")"
      },
      {
        "command": "exec_shell(\"kubectl exec -n test-hotel-reservation deploy/frontend -- sh -lc \\\"curl -sS 'http://localhost:5000/hotels?inDate=2015-04-09&outDate=2015-04-10&lat=37.7749&lon=-122.4194'\\\"; echo '---'; kubectl logs -n test-hotel-reservation deployment/search --tail=200; echo '---'; kubectl logs -n test-hotel-reservation deployment/profile --tail=200; echo '---'; kubectl logs -n test-hotel-reservation deployment/rate --tail=200; echo '---'; kubectl logs -n test-hotel-reservation deployment/recommendation --tail=200; echo '---'; kubectl logs -n test-hotel-reservation deployment/geo --tail=200; echo '---'; kubectl logs -n test-hotel-reservation deployment/reservation --tail=200; echo '---'; kubectl logs -n test-hotel-reservation deployment/frontend --tail=200\")",
        "type": "probe_command",
        "importance_score": 9,
        "description": "Aggregate check: call hotels endpoint and concurrently inspect multiple service logs to corroborate healthy behavior and registrations.",
        "sequence_number": 8,
        "original_command": "exec_shell(\"kubectl exec -n test-hotel-reservation deploy/frontend -- sh -lc \\\"curl -sS 'http://localhost:5000/hotels?inDate=2015-04-09&outDate=2015-04-10&lat=37.7749&lon=-122.4194'\\\"; echo '---'; kubectl logs -n test-hotel-reservation deployment/search --tail=200; echo '---'; kubectl logs -n test-hotel-reservation deployment/profile --tail=200; echo '---'; kubectl logs -n test-hotel-reservation deployment/rate --tail=200; echo '---'; kubectl logs -n test-hotel-reservation deployment/recommendation --tail=200; echo '---'; kubectl logs -n test-hotel-reservation deployment/geo --tail=200; echo '---'; kubectl logs -n test-hotel-reservation deployment/reservation --tail=200; echo '---'; kubectl logs -n test-hotel-reservation deployment/frontend --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl exec -n test-hotel-reservation deploy/frontend -- sh -lc \\\\\\\"curl -sS \\\\\\'http://localhost:5000/hotels?inDate=2015-04-09&outDate=2015-04-10&lat=37.7749&lon=-122.4194\\\\'\\\\\\\"; echo \\\\\\'---\\\\\\'; kubectl logs -n test-hotel-reservation deployment/search --tail=200; echo \\\\\\'---\\\\\\'; kubectl logs -n test-hotel-reservation deployment/profile --tail=200; echo \\\\\\'---\\\\\\'; kubectl logs -n test-hotel-reservation deployment/rate --tail=200; echo \\\\\\'---\\\\\\'; kubectl logs -n test-hotel-reservation deployment/recommendation --tail=200; echo \\\\\\'---\\\\\\'; kubectl logs -n test-hotel-reservation deployment/geo --tail=200; echo \\\\\\'---\\\\\\'; kubectl logs -n test-hotel-reservation deployment/reservation --tail=200; echo \\\\\\'---\\\\\\'; kubectl logs -n test-hotel-reservation deployment/frontend --tail=200\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "Run an end-to-end hotels request and gather recent logs across services for correlation.",
        "sequence_number": 9,
        "original_command": "exec_shell(\"kubectl exec -n test-hotel-reservation deploy/frontend -- sh -lc \\\\\\\"curl -sS \\\\\\'http://localhost:5000/hotels?inDate=2015-04-09&outDate=2015-04-10&lat=37.7749&lon=-122.4194\\\\'\\\\\\\"; echo \\\\\\'---\\\\\\'; kubectl logs -n test-hotel-reservation deployment/search --tail=200; echo \\\\\\'---\\\\\\'; kubectl logs -n test-hotel-reservation deployment/profile --tail=200; echo \\\\\\'---\\\\\\'; kubectl logs -n test-hotel-reservation deployment/rate --tail=200; echo \\\\\\'---\\\\\\'; kubectl logs -n test-hotel-reservation deployment/recommendation --tail=200; echo \\\\\\'---\\\\\\'; kubectl logs -n test-hotel-reservation deployment/geo --tail=200; echo \\\\\\'---\\\\\\'; kubectl logs -n test-hotel-reservation deployment/reservation --tail=200; echo \\\\\\'---\\\\\\'; kubectl logs -n test-hotel-reservation deployment/frontend --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl exec -n test-hotel-reservation deploy/frontend -- sh -lc \\\\\\\"curl -sS \\'http://localhost:5000/hotels?inDate=2015-04-09&outDate=2015-04-10&lat=37.7749&lon=-122.4194\\'\\\\\\\"; echo \\'---\\'; kubectl logs -n test-hotel-reservation deployment/search --tail=200; echo \\'---\\'; kubectl logs -n test-hotel-reservation deployment/profile --tail=200; echo \\'---\\'; kubectl logs -n test-hotel-reservation deployment/rate --tail=200; echo \\'---\\'; kubectl logs -n test-hotel-reservation deployment/recommendation --tail=200; echo \\'---\\'; kubectl logs -n test-hotel-reservation deployment/geo --tail=200; echo \\'---\\'; kubectl logs -n test-hotel-reservation deployment/reservation --tail=200; echo \\'---\\'; kubectl logs -n test-hotel-reservation deployment/frontend --tail=200\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "Run an end-to-end hotels request and simultaneously collect logs from all services for correlation.",
        "sequence_number": 10,
        "original_command": "exec_shell(\"kubectl exec -n test-hotel-reservation deploy/frontend -- sh -lc \\\\\\\"curl -sS \\'http://localhost:5000/hotels?inDate=2015-04-09&outDate=2015-04-10&lat=37.7749&lon=-122.4194\\'\\\\\\\"; echo \\'---\\'; kubectl logs -n test-hotel-reservation deployment/search --tail=200; echo \\'---\\'; kubectl logs -n test-hotel-reservation deployment/profile --tail=200; echo \\'---\\'; kubectl logs -n test-hotel-reservation deployment/rate --tail=200; echo \\'---\\'; kubectl logs -n test-hotel-reservation deployment/recommendation --tail=200; echo \\'---\\'; kubectl logs -n test-hotel-reservation deployment/geo --tail=200; echo \\'---\\'; kubectl logs -n test-hotel-reservation deployment/reservation --tail=200; echo \\'---\\'; kubectl logs -n test-hotel-reservation deployment/frontend --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl exec -n test-hotel-reservation deploy/frontend -- curl -sS \\'http://localhost:5000/hotels?inDate=2015-04-09&outDate=2015-04-10&lat=37.7749&lon=-122.4194\\' -v\")",
        "type": "probe_command",
        "importance_score": 9,
        "description": "Exercise the hotels endpoint end-to-end to confirm primary workflow returns 200.",
        "sequence_number": 11,
        "original_command": "exec_shell(\"kubectl exec -n test-hotel-reservation deploy/frontend -- curl -sS \\'http://localhost:5000/hotels?inDate=2015-04-09&outDate=2015-04-10&lat=37.7749&lon=-122.4194\\' -v\")"
      },
      {
        "command": "exec_shell(\"kubectl exec -n test-hotel-reservation deploy/frontend -- curl -sS 'http://localhost:5000/hotels?inDate=2015-04-09&outDate=2015-04-10&lat=37.7749&lon=-122.4194' -v\")",
        "type": "probe_command",
        "importance_score": 4,
        "description": "Call a core API path to verify end-to-end functionality of non-user-dependent flows.",
        "sequence_number": 12,
        "original_command": "exec_shell(\"kubectl exec -n test-hotel-reservation deploy/frontend -- curl -sS 'http://localhost:5000/hotels?inDate=2015-04-09&outDate=2015-04-10&lat=37.7749&lon=-122.4194' -v\")"
      },
      {
        "command": "exec_shell(\"kubectl exec -n test-hotel-reservation deploy/frontend -- curl -sS http://localhost:5000/ | head -n 1000\")",
        "type": "probe_command",
        "importance_score": 3,
        "description": "Sanity-check the frontend serves HTTP to validate general app availability.",
        "sequence_number": 13,
        "original_command": "exec_shell(\"kubectl exec -n test-hotel-reservation deploy/frontend -- curl -sS http://localhost:5000/ | head -n 1000\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation deployment/user --tail=500\")",
        "type": "probe_command",
        "importance_score": 9,
        "description": "Inspect user service logs to identify delayed initialization and late registration as root-cause evidence.",
        "sequence_number": 14,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation deployment/user --tail=500\")"
      },
      {
        "command": "exec_shell(\"kubectl describe pod -n test-hotel-reservation -l io.kompose.service=user\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Describe the user pod to confirm it is scheduled/running and check lifecycle events.",
        "sequence_number": 15,
        "original_command": "exec_shell(\"kubectl describe pod -n test-hotel-reservation -l io.kompose.service=user\")"
      },
      {
        "command": "exec_shell(\"kubectl exec -n test-hotel-reservation deploy/consul -- curl -s http://localhost:8500/v1/catalog/services\")",
        "type": "probe_command",
        "importance_score": 9,
        "description": "Query Consul service catalog from inside Consul to see which services are registered; confirms absence of srv-user initially.",
        "sequence_number": 16,
        "original_command": "exec_shell(\"kubectl exec -n test-hotel-reservation deploy/consul -- curl -s http://localhost:8500/v1/catalog/services\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation deployment/profile --tail=200; echo '---'; kubectl logs -n test-hotel-reservation deployment/rate --tail=200; echo '---'; kubectl logs -n test-hotel-reservation deployment/recommendation --tail=200; echo '---'; kubectl logs -n test-hotel-reservation deployment/reservation --tail=200; echo '---'; kubectl logs -n test-hotel-reservation deployment/user --tail=200; echo '---'; kubectl logs -n test-hotel-reservation deployment/geo --tail=200\")",
        "type": "probe_command",
        "importance_score": 8,
        "description": "Collect logs from multiple services, including user, to compare startup/registration timelines and spot anomalies.",
        "sequence_number": 17,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation deployment/profile --tail=200; echo '---'; kubectl logs -n test-hotel-reservation deployment/rate --tail=200; echo '---'; kubectl logs -n test-hotel-reservation deployment/recommendation --tail=200; echo '---'; kubectl logs -n test-hotel-reservation deployment/reservation --tail=200; echo '---'; kubectl logs -n test-hotel-reservation deployment/user --tail=200; echo '---'; kubectl logs -n test-hotel-reservation deployment/geo --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation deployment/profile --tail=200; echo \\'---\\'; kubectl logs -n test-hotel-reservation deployment/rate --tail=200; echo \\'---\\'; kubectl logs -n test-hotel-reservation deployment/recommendation --tail=200; echo \\'---\\'; kubectl logs -n test-hotel-reservation deployment/reservation --tail=200; echo \\'---\\'; kubectl logs -n test-hotel-reservation deployment/user --tail=200; echo \\'---\\'; kubectl logs -n test-hotel-reservation deployment/geo --tail=200\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "Collect logs from multiple backend services to validate DB connections, Consul registrations, and overall health.",
        "sequence_number": 18,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation deployment/profile --tail=200; echo \\'---\\'; kubectl logs -n test-hotel-reservation deployment/rate --tail=200; echo \\'---\\'; kubectl logs -n test-hotel-reservation deployment/recommendation --tail=200; echo \\'---\\'; kubectl logs -n test-hotel-reservation deployment/reservation --tail=200; echo \\'---\\'; kubectl logs -n test-hotel-reservation deployment/user --tail=200; echo \\'---\\'; kubectl logs -n test-hotel-reservation deployment/geo --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation deployment/search --tail=200\")",
        "type": "probe_command",
        "importance_score": 3,
        "description": "Verify a baseline service (search) starts and registers normally for comparison.",
        "sequence_number": 19,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation deployment/search --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation deployment/consul --tail=200\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Check Consul agent logs for registration/health events that indicate which services have joined.",
        "sequence_number": 20,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation deployment/consul --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation deployment/frontend --tail=200\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Inspect frontend logs for service discovery errors and initial signs of dependency issues.",
        "sequence_number": 21,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation deployment/frontend --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl get svc -n test-hotel-reservation -o wide\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "List services with cluster IPs/ports to understand service discovery endpoints (e.g., consul:8500).",
        "sequence_number": 22,
        "original_command": "exec_shell(\"kubectl get svc -n test-hotel-reservation -o wide\")"
      },
      {
        "command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "List all pods in the namespace to verify components are running and identify targets for deeper inspection.",
        "sequence_number": 23,
        "original_command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")"
      }
    ]
  },
  {
    "problem_id": "misconfig_app_hotel_res-mitigation-1",
    "key_commands": [
      {
        "command": "exec_shell(\"kubectl get cm,deploy,svc -n test-hotel-reservation -o yaml | grep -nE '27777|DB_URL|MONGO|GEO|GEO_DB|mongo.*url|PORT' -n || true\")",
        "type": "probe_command",
        "importance_score": 3,
        "description": "Search across configs for database-related keys or the incorrect port to locate misconfiguration.",
        "sequence_number": 1,
        "original_command": "exec_shell(\"kubectl get cm,deploy,svc -n test-hotel-reservation -o yaml | grep -nE '27777|DB_URL|MONGO|GEO|GEO_DB|mongo.*url|PORT' -n || true\")"
      },
      {
        "command": "exec_shell(\"kubectl exec -n test-hotel-reservation deploy/geo -- geo -h || kubectl exec -n test-hotel-reservation deploy/geo -- /bin/sh -c 'geo -h' || kubectl exec -n test-hotel-reservation deploy/geo -- /bin/sh -lc 'strings $(which geo) | grep -i -E \\\"mongo|db|url|port\\\" | head -n 50'\")",
        "type": "probe_command",
        "importance_score": 2,
        "description": "Attempt to introspect the geo binary/CLI for config hints (failed to exec due to container naming).",
        "sequence_number": 2,
        "original_command": "exec_shell(\"kubectl exec -n test-hotel-reservation deploy/geo -- geo -h || kubectl exec -n test-hotel-reservation deploy/geo -- /bin/sh -c 'geo -h' || kubectl exec -n test-hotel-reservation deploy/geo -- /bin/sh -lc 'strings $(which geo) | grep -i -E \\\"mongo|db|url|port\\\" | head -n 50'\")"
      },
      {
        "command": "exec_shell(\"kubectl get svc mongodb-geo -n test-hotel-reservation -o yaml\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Confirm mongodb-geo service target port configuration (27017) to match application setting",
        "sequence_number": 3,
        "original_command": "exec_shell(\"kubectl get svc mongodb-geo -n test-hotel-reservation -o yaml\")"
      },
      {
        "command": "exec_shell(\"kubectl get configmaps -n test-hotel-reservation -o yaml\")",
        "type": "probe_command",
        "importance_score": 4,
        "description": "List ConfigMaps to identify Mongo init and failure scripts that might affect authentication/roles.",
        "sequence_number": 4,
        "original_command": "exec_shell(\"kubectl get configmaps -n test-hotel-reservation -o yaml\")"
      },
      {
        "command": "exec_shell(\"kubectl exec -n test-hotel-reservation deploy/geo -- printenv | sort\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Validate that DB_URL environment variable is present and correctly set in the geo container",
        "sequence_number": 5,
        "original_command": "exec_shell(\"kubectl exec -n test-hotel-reservation deploy/geo -- printenv | sort\")"
      },
      {
        "command": "exec_shell(\"kubectl get deploy -n test-hotel-reservation -o yaml\")",
        "type": "probe_command",
        "importance_score": 4,
        "description": "Get all deployments YAML for cross-referencing working configurations.",
        "sequence_number": 6,
        "original_command": "exec_shell(\"kubectl get deploy -n test-hotel-reservation -o yaml\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation geo-<POD_SUFFIX> --since=30m\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "Review recent geo logs showing panic due to 'no reachable servers' confirming DB connectivity issue.",
        "sequence_number": 7,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation geo-c47ff745-sw9f4 --since=30m\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "c47ff745-sw9f4",
            "placeholder": "<POD_SUFFIX>",
            "position": 55
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl get pods -n test-hotel-reservation -l io.kompose.service=geo -o wide && echo '---' && kubectl logs -n test-hotel-reservation -l io.kompose.service=geo --since=5m --all-containers=true\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Verify geo pod status and recent logs post-patch",
        "sequence_number": 8,
        "original_command": "exec_shell(\"kubectl get pods -n test-hotel-reservation -l io.kompose.service=geo -o wide && echo '---' && kubectl logs -n test-hotel-reservation -l io.kompose.service=geo --since=5m --all-containers=true\")"
      },
      {
        "command": "exec_shell(\"kubectl rollout status deploy/geo -n test-hotel-reservation --timeout=60s\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Confirm the geo deployment rollout after applying the patch",
        "sequence_number": 9,
        "original_command": "exec_shell(\"kubectl rollout status deploy/geo -n test-hotel-reservation --timeout=60s\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation geo-<POD_SUFFIX> -<REPLICA_SUFFIX> --all-containers=true\")",
        "type": "probe_command",
        "importance_score": 2,
        "description": "Attempt to check previous geo container logs for historical failures (error retrieving logs).",
        "sequence_number": 10,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation geo-c47ff745-sw9f4 --previous --all-containers=true\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "c47ff745-sw9f4",
            "placeholder": "<POD_SUFFIX>",
            "position": 55
          },
          {
            "type": "k8s_replicaset_suffix",
            "original": "-previous",
            "placeholder": "<REPLICA_SUFFIX>",
            "position": 69
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl patch deploy geo -n test-hotel-reservation --type=strategic -p '{\\\"spec\\\":{\\\"template\\\":{\\\"spec\\\":{\\\"containers\\\":[{\\\"name\\\":\\\"hotel-reserv-geo\\\",\\\"env\\\":[{\\\"name\\\":\\\"JAEGER_SAMPLE_RATIO\\\",\\\"value\\\":\\\"1\\\"},{\\\"name\\\":\\\"DB_URL\\\",\\\"value\\\":\\\"mongodb-geo:27017\\\"}]}]}}}}'\")",
        "type": "execute_command",
        "importance_score": 10,
        "description": "Patch geo deployment to set correct MongoDB connection URL (port 27017)",
        "sequence_number": 11,
        "original_command": "exec_shell(\"kubectl patch deploy geo -n test-hotel-reservation --type=strategic -p '{\\\"spec\\\":{\\\"template\\\":{\\\"spec\\\":{\\\"containers\\\":[{\\\"name\\\":\\\"hotel-reserv-geo\\\",\\\"env\\\":[{\\\"name\\\":\\\"JAEGER_SAMPLE_RATIO\\\",\\\"value\\\":\\\"1\\\"},{\\\"name\\\":\\\"DB_URL\\\",\\\"value\\\":\\\"mongodb-geo:27017\\\"}]}]}}}}'\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation deploy/rate --since=10m --all-containers=true\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "Check another service's logs to confirm standard MongoDB port usage (27017)",
        "sequence_number": 12,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation deploy/rate --since=10m --all-containers=true\")"
      },
      {
        "command": "exec_shell(\"kubectl get deploy geo -n test-hotel-reservation -o yaml\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Review geo deployment configuration to check environment variables and container settings",
        "sequence_number": 13,
        "original_command": "exec_shell(\"kubectl get deploy geo -n test-hotel-reservation -o yaml\")"
      },
      {
        "command": "exec_shell(\"kubectl get svc -n test-hotel-reservation -o wide\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "List services to verify MongoDB-Geo service port and detect mismatch with app logs",
        "sequence_number": 14,
        "original_command": "exec_shell(\"kubectl get svc -n test-hotel-reservation -o wide\")"
      },
      {
        "command": "exec_shell(\"kubectl describe pod -n test-hotel-reservation geo-<POD_SUFFIX>\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Describe geo pod for status, restarts, and events",
        "sequence_number": 15,
        "original_command": "exec_shell(\"kubectl describe pod -n test-hotel-reservation geo-c47ff745-sw9f4\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "c47ff745-sw9f4",
            "placeholder": "<POD_SUFFIX>",
            "position": 63
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation geo-<POD_SUFFIX> --all-containers=true --since=10m\")",
        "type": "probe_command",
        "importance_score": 8,
        "description": "Inspect geo pod logs to reveal misconfigured DB URL and error symptoms",
        "sequence_number": 16,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation geo-c47ff745-sw9f4 --all-containers=true --since=10m\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "c47ff745-sw9f4",
            "placeholder": "<POD_SUFFIX>",
            "position": 55
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "List pods to identify failing components in the namespace",
        "sequence_number": 17,
        "original_command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")"
      }
    ]
  },
  {
    "problem_id": "revoke_auth_mongodb-analysis-1",
    "key_commands": [
      {
        "command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Lists all pods in the namespace to identify the failing service (geo pod in Error state).",
        "sequence_number": 1,
        "original_command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")"
      },
      {
        "command": "exec_shell(\"kubectl describe pod geo-<POD_SUFFIX> -n test-hotel-reservation\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Describes the failing geo pod to inspect container state, restart behavior, and events.",
        "sequence_number": 2,
        "original_command": "exec_shell(\"kubectl describe pod geo-84fbc958c7-skdf2 -n test-hotel-reservation\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "84fbc958c7-skdf2",
            "placeholder": "<POD_SUFFIX>",
            "position": 37
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs geo-<POD_SUFFIX> -n test-hotel-reservation -<REPLICA_SUFFIX>\")",
        "type": "probe_command",
        "importance_score": 9,
        "description": "Retrieves previous container logs from the geo pod, revealing the authorization error against MongoDB.",
        "sequence_number": 3,
        "original_command": "exec_shell(\"kubectl logs geo-84fbc958c7-skdf2 -n test-hotel-reservation --previous\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "84fbc958c7-skdf2",
            "placeholder": "<POD_SUFFIX>",
            "position": 29
          },
          {
            "type": "k8s_replicaset_suffix",
            "original": "-previous",
            "placeholder": "<REPLICA_SUFFIX>",
            "position": 69
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs mongodb-geo-<POD_SUFFIX> -n test-hotel-reservation --tail=200\")",
        "type": "probe_command",
        "importance_score": 8,
        "description": "Checks MongoDB pod logs to confirm security configuration and role assignments, corroborating the auth failure.",
        "sequence_number": 4,
        "original_command": "exec_shell(\"kubectl logs mongodb-geo-5ff578bcb8-dlh2s -n test-hotel-reservation --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "5ff578bcb8-dlh2s",
            "placeholder": "<POD_SUFFIX>",
            "position": 37
          }
        ]
      },
      {
        "command": "submit({\"system_level\": \"Application\", \"fault_type\": \"Misconfiguration\"})",
        "type": "execute_command",
        "importance_score": 8,
        "description": "Submits the final analysis classification to the orchestrator.",
        "sequence_number": 5,
        "original_command": "submit({\"system_level\": \"Application\", \"fault_type\": \"Misconfiguration\"})"
      }
    ]
  },
  {
    "problem_id": "user_unregistered_mongodb-analysis-2",
    "key_commands": [
      {
        "command": "exec_shell(\"kubectl get pvc -n test-hotel-reservation rate-pvc -o yaml; echo '---'; kubectl get pv\")",
        "type": "probe_command",
        "importance_score": 3,
        "description": "Verify MongoDB storage PVC/PV health to rule out storage-related causes.",
        "sequence_number": 1,
        "original_command": "exec_shell(\"kubectl get pvc -n test-hotel-reservation rate-pvc -o yaml; echo '---'; kubectl get pv\")"
      },
      {
        "command": "exec_shell(\"kubectl get configmap -n test-hotel-reservation mongo-rate-script -o yaml; echo '---'; kubectl get configmap -n test-hotel-reservation failure-admin-rate -o yaml\")",
        "type": "probe_command",
        "importance_score": 8,
        "description": "Inspect init and failure ConfigMaps to see user creation/removal scripts that explain missing 'admin' user.",
        "sequence_number": 2,
        "original_command": "exec_shell(\"kubectl get configmap -n test-hotel-reservation mongo-rate-script -o yaml; echo '---'; kubectl get configmap -n test-hotel-reservation failure-admin-rate -o yaml\")"
      },
      {
        "command": "exec_shell(\"kubectl get deploy mongodb-rate -n test-hotel-reservation -o yaml\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "Review MongoDB deployment spec to confirm auth is enabled and which ConfigMaps/volumes are mounted.",
        "sequence_number": 3,
        "original_command": "exec_shell(\"kubectl get deploy mongodb-rate -n test-hotel-reservation -o yaml\")"
      },
      {
        "command": "exec_shell(\"kubectl get deploy rate -n test-hotel-reservation -o yaml\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Review the rate deployment spec to verify image, command, and environment configuration.",
        "sequence_number": 4,
        "original_command": "exec_shell(\"kubectl get deploy rate -n test-hotel-reservation -o yaml\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation deploy/mongodb-rate --tail=200\")",
        "type": "probe_command",
        "importance_score": 10,
        "description": "Inspect MongoDB logs which reveal authentication failures and 'UserNotFound: admin' in the admin database.",
        "sequence_number": 5,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation deploy/mongodb-rate --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation rate-<POD_SUFFIX> -c hotel-reserv-rate --tail=200\")",
        "type": "probe_command",
        "importance_score": 9,
        "description": "Fetch application logs from the rate container showing SASL authentication failure to MongoDB.",
        "sequence_number": 6,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation rate-7bdc978679-qpn6r -c hotel-reserv-rate --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "7bdc978679-qpn6r",
            "placeholder": "<POD_SUFFIX>",
            "position": 56
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl describe pod -n test-hotel-reservation rate-<POD_SUFFIX>\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Describe the failing rate pod for status, restart history, and events indicating CrashLoopBackOff.",
        "sequence_number": 7,
        "original_command": "exec_shell(\"kubectl describe pod -n test-hotel-reservation rate-7bdc978679-qpn6r\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "7bdc978679-qpn6r",
            "placeholder": "<POD_SUFFIX>",
            "position": 64
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation deploy/rate -<REPLICA_SUFFIX> --tail=200\")",
        "type": "probe_command",
        "importance_score": 3,
        "description": "Attempt to retrieve previous logs from the rate deployment to get error context.",
        "sequence_number": 8,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation deploy/rate --previous --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_replicaset_suffix",
            "original": "-previous",
            "placeholder": "<REPLICA_SUFFIX>",
            "position": 64
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "List all pods in the namespace to identify failing components (rate pod in CrashLoopBackOff).",
        "sequence_number": 9,
        "original_command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")"
      }
    ]
  },
  {
    "problem_id": "noop_detection_hotel_reservation-1",
    "key_commands": [
      {
        "command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "List all pods in the test-hotel-reservation namespace to verify workload health and readiness.",
        "sequence_number": 1,
        "original_command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")"
      },
      {
        "command": "exec_shell(\"kubectl get svc -n test-hotel-reservation\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "List services in the namespace to confirm service endpoints and ports.",
        "sequence_number": 2,
        "original_command": "exec_shell(\"kubectl get svc -n test-hotel-reservation\")"
      },
      {
        "command": "exec_shell(\"kubectl get events -n test-hotel-reservation --sort-by=.metadata.creationTimestamp\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Review chronological Kubernetes events to detect provisioning or startup issues.",
        "sequence_number": 3,
        "original_command": "exec_shell(\"kubectl get events -n test-hotel-reservation --sort-by=.metadata.creationTimestamp\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation deployment/frontend --tail=200\")",
        "type": "probe_command",
        "importance_score": 9,
        "description": "Inspect frontend deployment logs; identify consul connection errors and subsequent successful serving state.",
        "sequence_number": 4,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation deployment/frontend --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation deployment/consul --tail=200\")",
        "type": "probe_command",
        "importance_score": 8,
        "description": "Check Consul logs to verify agent startup, leadership, and service registration health.",
        "sequence_number": 5,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation deployment/consul --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation deployment/search --tail=200\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "Validate search service successfully registers with Consul and is operational.",
        "sequence_number": 6,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation deployment/search --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation deployment/recommendation --tail=200\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "Validate recommendation service DB init and successful registration with Consul.",
        "sequence_number": 7,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation deployment/recommendation --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation deployment/geo --tail=200\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Confirm geo service initializes DB and registers in Consul.",
        "sequence_number": 8,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation deployment/geo --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation deployment/profile --tail=200\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Confirm profile service initializes cache/DB and registers in Consul.",
        "sequence_number": 9,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation deployment/profile --tail=200\")"
      },
      {
        "command": "submit(\"No\")",
        "type": "execute_command",
        "importance_score": 10,
        "description": "Submit the final decision that no anomalies are detected based on collected evidence.",
        "sequence_number": 10,
        "original_command": "submit(\"No\")"
      }
    ]
  },
  {
    "problem_id": "revoke_auth_mongodb-detection-1",
    "key_commands": [
      {
        "command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")",
        "type": "probe_command",
        "importance_score": 8,
        "description": "List all pods in the namespace to identify any failing components.",
        "sequence_number": 1,
        "original_command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")"
      },
      {
        "command": "exec_shell(\"kubectl describe pod -n test-hotel-reservation geo-<POD_SUFFIX>\")",
        "type": "probe_command",
        "importance_score": 9,
        "description": "Inspect the failing pod's detailed status, container state, and events to determine the cause (CrashLoopBackOff).",
        "sequence_number": 2,
        "original_command": "exec_shell(\"kubectl describe pod -n test-hotel-reservation geo-84fbc958c7-7ll6b\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "84fbc958c7-7ll6b",
            "placeholder": "<POD_SUFFIX>",
            "position": 63
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation geo-<POD_SUFFIX> -c hotel-reserv-geo -<REPLICA_SUFFIX>\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Attempt to fetch previous container logs for the crashing container to gather error details.",
        "sequence_number": 3,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation geo-84fbc958c7-7ll6b -c hotel-reserv-geo --previous\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "84fbc958c7-7ll6b",
            "placeholder": "<POD_SUFFIX>",
            "position": 55
          },
          {
            "type": "k8s_replicaset_suffix",
            "original": "-previous",
            "placeholder": "<REPLICA_SUFFIX>",
            "position": 89
          }
        ]
      },
      {
        "command": "submit(\"Yes\")",
        "type": "execute_command",
        "importance_score": 10,
        "description": "Submit the anomaly detection result to complete the task.",
        "sequence_number": 4,
        "original_command": "submit(\"Yes\")"
      }
    ]
  },
  {
    "problem_id": "container_kill-analysis-1",
    "key_commands": [
      {
        "command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "List all pods in the namespace to see statuses and recent restarts.",
        "sequence_number": 1,
        "original_command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation geo-<POD_SUFFIX> -<REPLICA_SUFFIX>\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "Fetch previous logs of the geo pod to investigate the cause of its recent restart.",
        "sequence_number": 2,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation geo-84fbc958c7-669mk --previous\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "84fbc958c7-669mk",
            "placeholder": "<POD_SUFFIX>",
            "position": 55
          },
          {
            "type": "k8s_replicaset_suffix",
            "original": "-previous",
            "placeholder": "<REPLICA_SUFFIX>",
            "position": 69
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation profile-<POD_SUFFIX> -<REPLICA_SUFFIX>\")",
        "type": "probe_command",
        "importance_score": 9,
        "description": "Inspect previous logs of the profile pod revealing database connectivity errors.",
        "sequence_number": 3,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation profile-8b6dd7c6c-n2987 --previous\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "8b6dd7c6c-n2987",
            "placeholder": "<POD_SUFFIX>",
            "position": 59
          },
          {
            "type": "k8s_replicaset_suffix",
            "original": "-previous",
            "placeholder": "<REPLICA_SUFFIX>",
            "position": 73
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl get svc -n test-hotel-reservation\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "List services to verify service presence and ports for dependent components.",
        "sequence_number": 4,
        "original_command": "exec_shell(\"kubectl get svc -n test-hotel-reservation\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation mongodb-profile-<POD_SUFFIX>\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "Check MongoDB profile pod logs to assess database health and connections.",
        "sequence_number": 5,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation mongodb-profile-758cb77f9f-lrsxs\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "758cb77f9f-lrsxs",
            "placeholder": "<POD_SUFFIX>",
            "position": 67
          }
        ]
      },
      {
        "command": "submit({\"system_level\": \"Application\", \"fault_type\": \"Dependency Problem\"})",
        "type": "execute_command",
        "importance_score": 10,
        "description": "Submit the final fault classification to the orchestrator.",
        "sequence_number": 6,
        "original_command": "submit({\"system_level\": \"Application\", \"fault_type\": \"Dependency Problem\"})"
      }
    ]
  },
  {
    "problem_id": "assign_to_non_existent_node_social_net-localization-1",
    "key_commands": [
      {
        "command": "exec_shell(\"kubectl get pods -n test-social-network\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "List all pods in the namespace to identify any non-running components, revealing the pending user-service pod.",
        "sequence_number": 1,
        "original_command": "exec_shell(\"kubectl get pods -n test-social-network\")"
      },
      {
        "command": "exec_shell(\"kubectl describe pod user-service-<POD_SUFFIX> -n test-social-network\")",
        "type": "probe_command",
        "importance_score": 9,
        "description": "Inspect the pending pod to see scheduling events indicating node selector/taint issues preventing scheduling.",
        "sequence_number": 2,
        "original_command": "exec_shell(\"kubectl describe pod user-service-5b549cc8dc-rsq5r -n test-social-network\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "5b549cc8dc-rsq5r",
            "placeholder": "<POD_SUFFIX>",
            "position": 46
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl get deploy user-service -n test-social-network -o yaml\")",
        "type": "probe_command",
        "importance_score": 9,
        "description": "Retrieve the Deployment spec to confirm the pod template has a nodeSelector targeting a non-existent node hostname.",
        "sequence_number": 3,
        "original_command": "exec_shell(\"kubectl get deploy user-service -n test-social-network -o yaml\")"
      },
      {
        "command": "exec_shell(\"kubectl get nodes --show-labels\")",
        "type": "probe_command",
        "importance_score": 8,
        "description": "List nodes and their labels to verify that no node has the required hostname label and to observe control-plane taint.",
        "sequence_number": 4,
        "original_command": "exec_shell(\"kubectl get nodes --show-labels\")"
      },
      {
        "command": "submit([\"user-service\"])",
        "type": "execute_command",
        "importance_score": 10,
        "description": "Submit the identified faulty component responsible for the misconfiguration causing scheduling failure.",
        "sequence_number": 5,
        "original_command": "submit([\"user-service\"])"
      }
    ]
  },
  {
    "problem_id": "auth_miss_mongodb-localization-1",
    "key_commands": [
      {
        "command": "exec_shell(\"kubectl get pods -n test-social-network\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "List all pods in the namespace to identify any failing components.",
        "sequence_number": 1,
        "original_command": "exec_shell(\"kubectl get pods -n test-social-network\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-social-network url-shorten-mongodb-<POD_SUFFIX> --tail=200 && echo '---' && kubectl describe pod -n test-social-network url-shorten-mongodb-6555<POD_SUFFIX>",
        "type": "probe_command",
        "importance_score": 9,
        "description": "Retrieve logs and detailed pod description of the failing MongoDB pod to diagnose the root cause (Invalid SSL configuration).",
        "sequence_number": 2,
        "original_command": "exec_shell(\"kubectl logs -n test-social-network url-shorten-mongodb-65559575d4-w4wf6 --tail=200 && echo '---' && kubectl describe pod -n test-social-network url-shorten-mongodb-65559575d4-w4wf6\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "65559575d4-w4wf6",
            "placeholder": "<POD_SUFFIX>",
            "position": 68
          },
          {
            "type": "k8s_pod_suffix",
            "original": "65559575d4-w4wf6",
            "placeholder": "<POD_SUFFIX>",
            "position": 177
          }
        ]
      },
      {
        "command": "submit([\"url-shorten-mongodb\"])",
        "type": "execute_command",
        "importance_score": 10,
        "description": "Submit the identified faulty component to complete the task.",
        "sequence_number": 3,
        "original_command": "submit([\"url-shorten-mongodb\"])"
      }
    ]
  },
  {
    "problem_id": "astronomy_shop_payment_service_unreachable-detection-1",
    "key_commands": [
      {
        "command": "exec_shell(\"kubectl get pods -n astronomy-shop\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "List all pods in the astronomy-shop namespace to identify any pods in error state and select a target for deeper investigation.",
        "sequence_number": 1,
        "original_command": "exec_shell(\"kubectl get pods -n astronomy-shop\")"
      },
      {
        "command": "exec_shell(\"kubectl describe pod fraud-detection-<POD_SUFFIX> -n astronomy-shop\")",
        "type": "probe_command",
        "importance_score": 9,
        "description": "Inspect detailed status and events of the failing pod to gather evidence of crashes and restart/backoff behavior.",
        "sequence_number": 2,
        "original_command": "exec_shell(\"kubectl describe pod fraud-detection-65868bcdb5-lfm4m -n astronomy-shop\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "65868bcdb5-lfm4m",
            "placeholder": "<POD_SUFFIX>",
            "position": 49
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs fraud-detection-<POD_SUFFIX> -n astronomy-shop -<REPLICA_SUFFIX>\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Fetch logs from the previously terminated container instance to diagnose the failure leading to restarts.",
        "sequence_number": 3,
        "original_command": "exec_shell(\"kubectl logs fraud-detection-65868bcdb5-lfm4m -n astronomy-shop --previous\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "65868bcdb5-lfm4m",
            "placeholder": "<POD_SUFFIX>",
            "position": 41
          },
          {
            "type": "k8s_replicaset_suffix",
            "original": "-previous",
            "placeholder": "<REPLICA_SUFFIX>",
            "position": 73
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl get pod fraud-detection-<POD_SUFFIX> -n astronomy-shop -o json\")",
        "type": "probe_command",
        "importance_score": 9,
        "description": "Retrieve structured pod state including exit codes and restart counts to conclusively confirm the anomaly.",
        "sequence_number": 4,
        "original_command": "exec_shell(\"kubectl get pod fraud-detection-65868bcdb5-lfm4m -n astronomy-shop -o json\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "65868bcdb5-lfm4m",
            "placeholder": "<POD_SUFFIX>",
            "position": 44
          }
        ]
      },
      {
        "command": "submit(\"Yes\")",
        "type": "execute_command",
        "importance_score": 10,
        "description": "Submit the final determination that an anomaly is present based on collected evidence.",
        "sequence_number": 5,
        "original_command": "submit(\"Yes\")"
      }
    ]
  },
  {
    "problem_id": "astronomy_shop_recommendation_service_cache_failure-detection-1",
    "key_commands": [
      {
        "command": "exec_shell(\"kubectl get pods -n astronomy-shop\")",
        "type": "probe_command",
        "importance_score": 8,
        "description": "Lists all pods in the astronomy-shop namespace to identify any failing components.",
        "sequence_number": 1,
        "original_command": "exec_shell(\"kubectl get pods -n astronomy-shop\")"
      },
      {
        "command": "exec_shell(\"kubectl describe pod -n astronomy-shop fraud-detection-<POD_SUFFIX>; echo '---LOGS (current)---'; kubectl logs -n astronomy-shop fraud-detection-6586<POD_SUFFIX>ll-containers=true --tail=200; echo '---LOGS (previous)---'; kubectl logs -n astronomy-shop fraud-detection-65868bcd<POD_SUFFIX>ous --all-containers=true --tail=200\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Attempts a combined pod describe and retrieval of current/previous logs for initial triage of the failing fraud-detection pod.",
        "sequence_number": 2,
        "original_command": "exec_shell(\"kubectl describe pod -n astronomy-shop fraud-detection-65868bcdb5-xm872; echo '---LOGS (current)---'; kubectl logs -n astronomy-shop fraud-detection-65868bcdb5-xm872 --all-containers=true --tail=200; echo '---LOGS (previous)---'; kubectl logs -n astronomy-shop fraud-detection-65868bcdb5-xm872 --previous --all-containers=true --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "65868bcdb5-xm872",
            "placeholder": "<POD_SUFFIX>",
            "position": 67
          },
          {
            "type": "k8s_pod_suffix",
            "original": "65868bcdb5-xm872",
            "placeholder": "<POD_SUFFIX>",
            "position": 161
          },
          {
            "type": "k8s_pod_suffix",
            "original": "65868bcdb5-xm872",
            "placeholder": "<POD_SUFFIX>",
            "position": 289
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl describe pod -n astronomy-shop fraud-detection-<POD_SUFFIX>\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "Describes the failing pod to inspect container states, exit codes, resource limits, and events indicating BackOff and exit code 137.",
        "sequence_number": 3,
        "original_command": "exec_shell(\"kubectl describe pod -n astronomy-shop fraud-detection-65868bcdb5-xm872\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "65868bcdb5-xm872",
            "placeholder": "<POD_SUFFIX>",
            "position": 67
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n astronomy-shop fraud-detection-<POD_SUFFIX> --tail=200\")",
        "type": "probe_command",
        "importance_score": 4,
        "description": "Fetches recent logs from the fraud-detection pod to check runtime errors; confirms default container and guides further log scoping.",
        "sequence_number": 4,
        "original_command": "exec_shell(\"kubectl logs -n astronomy-shop fraud-detection-65868bcdb5-xm872 --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "65868bcdb5-xm872",
            "placeholder": "<POD_SUFFIX>",
            "position": 59
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n astronomy-shop fraud-detection-<POD_SUFFIX> -c fraud<REPLICA_SUF<REPLICA_SUFFIX>evious --tail=200\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Retrieves logs from the previously terminated fraud-detection container to gather crash context.",
        "sequence_number": 5,
        "original_command": "exec_shell(\"kubectl logs -n astronomy-shop fraud-detection-65868bcdb5-xm872 -c fraud-detection --previous --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "65868bcdb5-xm872",
            "placeholder": "<POD_SUFFIX>",
            "position": 59
          },
          {
            "type": "k8s_replicaset_suffix",
            "original": "-detection",
            "placeholder": "<REPLICA_SUFFIX>",
            "position": 80
          },
          {
            "type": "k8s_replicaset_suffix",
            "original": "-previous",
            "placeholder": "<REPLICA_SUFFIX>",
            "position": 92
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n astronomy-shop payment-<POD_SUFFIX> --tail=200\")",
        "type": "probe_command",
        "importance_score": 3,
        "description": "Checks logs of another service (payment) as a baseline to compare health and systemic impact.",
        "sequence_number": 6,
        "original_command": "exec_shell(\"kubectl logs -n astronomy-shop payment-7597577cb5-567lc --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "7597577cb5-567lc",
            "placeholder": "<POD_SUFFIX>",
            "position": 51
          }
        ]
      },
      {
        "command": "submit(\"Yes\")",
        "type": "execute_command",
        "importance_score": 10,
        "description": "Submits the final determination that an anomaly is present.",
        "sequence_number": 7,
        "original_command": "submit(\"Yes\")"
      }
    ]
  },
  {
    "problem_id": "assign_to_non_existent_node_social_net-detection-1",
    "key_commands": [
      {
        "command": "exec_shell(\"kubectl get pods -n test-social-network\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "List all pods in the test-social-network namespace to identify any non-running pods (e.g., Pending).",
        "sequence_number": 1,
        "original_command": "exec_shell(\"kubectl get pods -n test-social-network\")"
      },
      {
        "command": "exec_shell(\"kubectl describe pod user-service-<POD_SUFFIX> -n test-social-network\")",
        "type": "probe_command",
        "importance_score": 9,
        "description": "Inspect the pending pod to find scheduling issues; reveals Node-Selectors (kubernetes.io/hostname=extra-node) and FailedScheduling events.",
        "sequence_number": 2,
        "original_command": "exec_shell(\"kubectl describe pod user-service-5b549cc8dc-h8qc9 -n test-social-network\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "5b549cc8dc-h8qc9",
            "placeholder": "<POD_SUFFIX>",
            "position": 46
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl get nodes -o wide\")",
        "type": "probe_command",
        "importance_score": 8,
        "description": "List cluster nodes to confirm the absence of the targeted node (extra-node) and to assess taints/roles affecting scheduling.",
        "sequence_number": 3,
        "original_command": "exec_shell(\"kubectl get nodes -o wide\")"
      }
    ]
  },
  {
    "problem_id": "astronomy_shop_kafka_queue_problems-localization-1",
    "key_commands": [
      {
        "command": "exec_shell(\"kubectl get pods -n astronomy-shop\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Lists all pods in the astronomy-shop namespace to identify failing components.",
        "sequence_number": 1,
        "original_command": "exec_shell(\"kubectl get pods -n astronomy-shop\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n astronomy-shop pod/fraud-detection-<POD_SUFFIX> --all-containers=true --tail=200\")",
        "type": "probe_command",
        "importance_score": 8,
        "description": "Retrieves recent logs from all containers in the fraud-detection pod to diagnose the crash.",
        "sequence_number": 2,
        "original_command": "exec_shell(\"kubectl logs -n astronomy-shop pod/fraud-detection-65868bcdb5-bq8rb --all-containers=true --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "65868bcdb5-bq8rb",
            "placeholder": "<POD_SUFFIX>",
            "position": 63
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl describe pod -n astronomy-shop fraud-detection-<POD_SUFFIX>\")",
        "type": "probe_command",
        "importance_score": 9,
        "description": "Provides detailed pod status and events confirming CrashLoopBackOff and exit reasons for fraud-detection.",
        "sequence_number": 3,
        "original_command": "exec_shell(\"kubectl describe pod -n astronomy-shop fraud-detection-65868bcdb5-bq8rb\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "65868bcdb5-bq8rb",
            "placeholder": "<POD_SUFFIX>",
            "position": 67
          }
        ]
      },
      {
        "command": "submit([\"fraud<REPLICA_SUFFIX>\"])",
        "type": "execute_command",
        "importance_score": 10,
        "description": "Submits the identified faulty component to complete the localization task.",
        "sequence_number": 4,
        "original_command": "submit([\"fraud-detection\"])",
        "placeholders_used": [
          {
            "type": "k8s_replicaset_suffix",
            "original": "-detection",
            "placeholder": "<REPLICA_SUFFIX>",
            "position": 14
          }
        ]
      }
    ]
  },
  {
    "problem_id": "k8s_target_port-misconfig-localization-3",
    "key_commands": [
      {
        "command": "exec_shell(\"kubectl get pods -n test-social-network\")",
        "type": "probe_command",
        "importance_score": 3,
        "description": "Check overall pod status in the namespace to ensure components are running.",
        "sequence_number": 1,
        "original_command": "exec_shell(\"kubectl get pods -n test-social-network\")"
      },
      {
        "command": "exec_shell(\"kubectl get svc -n test-social-network\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "List services and exposed ports to identify relevant service and its port.",
        "sequence_number": 2,
        "original_command": "exec_shell(\"kubectl get svc -n test-social-network\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-social-network deploy/compose-post-service --tail=200\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "Inspect client service logs showing connection refused to post-storage-service on port 9090, indicating a connectivity issue.",
        "sequence_number": 3,
        "original_command": "exec_shell(\"kubectl logs -n test-social-network deploy/compose-post-service --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-social-network deploy/post-storage-service --tail=200\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Verify post-storage-service starts without internal errors, focusing the investigation on networking/config.",
        "sequence_number": 4,
        "original_command": "exec_shell(\"kubectl logs -n test-social-network deploy/post-storage-service --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl get endpoints post-storage-service -n test-social-network -o wide\")",
        "type": "probe_command",
        "importance_score": 9,
        "description": "Check service endpoints and backend port (shows 10.244.1.22:8080), revealing the service routes to port 8080.",
        "sequence_number": 5,
        "original_command": "exec_shell(\"kubectl get endpoints post-storage-service -n test-social-network -o wide\")"
      },
      {
        "command": "exec_shell(\"kubectl get deploy post-storage-service -n test-social-network -o yaml\")",
        "type": "probe_command",
        "importance_score": 8,
        "description": "Review deployment to confirm containerPort is 9090, establishing expected application listening port.",
        "sequence_number": 6,
        "original_command": "exec_shell(\"kubectl get deploy post-storage-service -n test-social-network -o yaml\")"
      },
      {
        "command": "exec_shell(\"kubectl get svc post-storage-service -n test-social-network -o yaml\")",
        "type": "probe_command",
        "importance_score": 10,
        "description": "Inspect service spec to find targetPort is 8080, confirming mismatch with containerPort 9090 (root cause).",
        "sequence_number": 7,
        "original_command": "exec_shell(\"kubectl get svc post-storage-service -n test-social-network -o yaml\")"
      },
      {
        "command": "submit([\"post-storage-service\"])",
        "type": "execute_command",
        "importance_score": 10,
        "description": "Submit the identified faulty component responsible for the misconfiguration.",
        "sequence_number": 8,
        "original_command": "submit([\"post-storage-service\"])"
      }
    ]
  },
  {
    "problem_id": "k8s_target_port-misconfig-mitigation-2",
    "key_commands": [
      {
        "command": "exec_shell(\"kubectl logs -n test-social-network -l service=text-service --tail=100 && echo \\'---\\' && kubectl logs -n test-social-network -l service=compose-post-service --tail=100 && echo \\'---\\' && kubectl logs -n test-social-network -l service=nginx-thrift -c nginx-thrift --tail=50\")",
        "type": "probe_command",
        "importance_score": 4,
        "description": "Final verification across text-service, compose-post-service, and nginx-thrift",
        "sequence_number": 1,
        "original_command": "exec_shell(\"kubectl logs -n test-social-network -l service=text-service --tail=100 && echo \\'---\\' && kubectl logs -n test-social-network -l service=compose-post-service --tail=100 && echo \\'---\\' && kubectl logs -n test-social-network -l service=nginx-thrift -c nginx-thrift --tail=50\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-social-network -l service=compose-post-service --tail=200 && echo \\'---\\' && kubectl get configmap compose-post-service -n test-social-network -o yaml\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Verify compose-post-service logs and its config (shows text-service port set to 9090)",
        "sequence_number": 2,
        "original_command": "exec_shell(\"kubectl logs -n test-social-network -l service=compose-post-service --tail=200 && echo \\'---\\' && kubectl get configmap compose-post-service -n test-social-network -o yaml\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-social-network -l service=nginx-thrift -c nginx-thrift --tail=20 && echo '---' && kubectl logs -n test-social-network -l service=compose-post-service --tail=20 && echo '---' && kubectl logs -n test-social-network -l service=user-service --tail=20\")",
        "type": "probe_command",
        "importance_score": 3,
        "description": "Additional lightweight log sampling across frontend and dependent services to validate stabilization.",
        "sequence_number": 3,
        "original_command": "exec_shell(\"kubectl logs -n test-social-network -l service=nginx-thrift -c nginx-thrift --tail=20 && echo '---' && kubectl logs -n test-social-network -l service=compose-post-service --tail=20 && echo '---' && kubectl logs -n test-social-network -l service=user-service --tail=20\")"
      },
      {
        "command": "exec_shell(\"kubectl get svc compose-post-service -n test-social-network -o yaml && echo \\'---\\' && kubectl describe deploy compose-post-service -n test-social-network\")",
        "type": "probe_command",
        "importance_score": 4,
        "description": "Inspect compose-post-service configuration to validate its dependency setup",
        "sequence_number": 4,
        "original_command": "exec_shell(\"kubectl get svc compose-post-service -n test-social-network -o yaml && echo \\'---\\' && kubectl describe deploy compose-post-service -n test-social-network\")"
      },
      {
        "command": "exec_shell(\"kubectl get configmap nginx-thrift -n test-social-network -o yaml\")",
        "type": "probe_command",
        "importance_score": 2,
        "description": "Inspect nginx-thrift configmap to confirm routing/lua configs during investigation.",
        "sequence_number": 5,
        "original_command": "exec_shell(\"kubectl get configmap nginx-thrift -n test-social-network -o yaml\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-social-network -l service=user-service --tail=50 && echo '---' && kubectl logs -n test-social-network -l service=nginx-thrift -c nginx-thrift --tail=50\")",
        "type": "probe_command",
        "importance_score": 4,
        "description": "Re-check key service logs post-fix to validate reduced connection errors.",
        "sequence_number": 6,
        "original_command": "exec_shell(\"kubectl logs -n test-social-network -l service=user-service --tail=50 && echo '---' && kubectl logs -n test-social-network -l service=nginx-thrift -c nginx-thrift --tail=50\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-social-network -l service=user-service --tail=50 && echo \\'---\\' && kubectl logs -n test-social-network -l service=nginx-thrift -c nginx-thrift --tail=50\")",
        "type": "probe_command",
        "importance_score": 4,
        "description": "Spot-check downstream and frontend logs after the fix to verify error reduction.",
        "sequence_number": 7,
        "original_command": "exec_shell(\"kubectl logs -n test-social-network -l service=user-service --tail=50 && echo \\'---\\' && kubectl logs -n test-social-network -l service=nginx-thrift -c nginx-thrift --tail=50\")"
      },
      {
        "command": "exec_shell(\"kubectl -n test-social-network patch service text-service -p \\'{\\\\\"spec\\\\\":{\\\\\"ports\\\\\":[{\\\\\"name\\\\\":\\\\\"9090\\\\\",\\\\\"port\\\\\":9090,\\\\\"protocol\\\\\":\\\\\"TCP\\\\\",\\\\\"targetPort\\\\\":9090}]}}\\' && kubectl get endpoints text-service -n test-social-network -o wide\")",
        "type": "execute_command",
        "importance_score": 10,
        "description": "Fix text-service Service by setting targetPort to 9090 and verify endpoints reflect the corrected port.",
        "sequence_number": 8,
        "original_command": "exec_shell(\"kubectl -n test-social-network patch service text-service -p \\'{\\\\\"spec\\\\\":{\\\\\"ports\\\\\":[{\\\\\"name\\\\\":\\\\\"9090\\\\\",\\\\\"port\\\\\":9090,\\\\\"protocol\\\\\":\\\\\"TCP\\\\\",\\\\\"targetPort\\\\\":9090}]}}\\' && kubectl get endpoints text-service -n test-social-network -o wide\")"
      },
      {
        "command": "exec_shell(\"kubectl get svc text-service -n test-social-network -o yaml && echo \\'---\\' && kubectl describe deploy text-service -n test-social-network\")",
        "type": "probe_command",
        "importance_score": 9,
        "description": "Show text-service Service YAML (targetPort 9999) and Deployment (container port 9090) to confirm port mismatch.",
        "sequence_number": 9,
        "original_command": "exec_shell(\"kubectl get svc text-service -n test-social-network -o yaml && echo \\'---\\' && kubectl describe deploy text-service -n test-social-network\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-social-network -l service=compose-post-service --tail=200 && echo '---' && kubectl get configmap compose-post-service -n test-social-network -o yaml\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "View compose-post-service logs and config to confirm it expects text-service on port 9090 while failures persist.",
        "sequence_number": 10,
        "original_command": "exec_shell(\"kubectl logs -n test-social-network -l service=compose-post-service --tail=200 && echo '---' && kubectl get configmap compose-post-service -n test-social-network -o yaml\")"
      },
      {
        "command": "exec_shell(\"kubectl -n test-social-network patch service text-service -p '{\\\"spec\\\":{\\\"ports\\\":[{\\\"name\\\":\\\"9090\\\",\\\"port\\\":9090,\\\"protocol\\\":\\\"TCP\\\",\\\"targetPort\\\":9090}]}}' && kubectl get endpoints text-service -n test-social-network -o wide\")",
        "type": "execute_command",
        "importance_score": 10,
        "description": "Fix the misconfiguration by setting targetPort=9090 for text-service and verify endpoints update to 9090.",
        "sequence_number": 11,
        "original_command": "exec_shell(\"kubectl -n test-social-network patch service text-service -p '{\\\"spec\\\":{\\\"ports\\\":[{\\\"name\\\":\\\"9090\\\",\\\"port\\\":9090,\\\"protocol\\\":\\\"TCP\\\",\\\"targetPort\\\":9090}]}}' && kubectl get endpoints text-service -n test-social-network -o wide\")"
      },
      {
        "command": "exec_shell(\"kubectl get svc compose-post-service -n test-social-network -o yaml && echo '---' && kubectl describe deploy compose-post-service -n test-social-network\")",
        "type": "probe_command",
        "importance_score": 3,
        "description": "Review compose-post-service configuration to understand dependencies and confirm it expects text-service on 9090.",
        "sequence_number": 12,
        "original_command": "exec_shell(\"kubectl get svc compose-post-service -n test-social-network -o yaml && echo '---' && kubectl describe deploy compose-post-service -n test-social-network\")"
      },
      {
        "command": "exec_shell(\"kubectl get svc text-service -n test-social-network -o yaml && echo '---' && kubectl describe deploy text-service -n test-social-network\")",
        "type": "probe_command",
        "importance_score": 8,
        "description": "Examine text-service Service spec and Deployment; confirms Service targetPort=9999 while container listens on 9090.",
        "sequence_number": 13,
        "original_command": "exec_shell(\"kubectl get svc text-service -n test-social-network -o yaml && echo '---' && kubectl describe deploy text-service -n test-social-network\")"
      },
      {
        "command": "exec_shell(\"kubectl get endpoints -n test-social-network -o wide\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "Check service endpoints; shows text-service routing to port 9999, suggesting a targetPort mismatch.",
        "sequence_number": 14,
        "original_command": "exec_shell(\"kubectl get endpoints -n test-social-network -o wide\")"
      },
      {
        "command": "exec_shell(\"kubectl describe deploy nginx-thrift -n test-social-network\")",
        "type": "probe_command",
        "importance_score": 3,
        "description": "Inspect the nginx-thrift deployment configuration for environment and mounts.",
        "sequence_number": 15,
        "original_command": "exec_shell(\"kubectl describe deploy nginx-thrift -n test-social-network\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-social-network -l service=nginx-thrift -c nginx-thrift --tail=200 && kubectl logs -n test-social-network -l service=user-service --tail=200 && kubectl logs -n test-social-network -l service=compose-post-service --tail=200 && kubectl logs -n test-social-network -l service=social-graph-service --tail=200 && kubectl logs -n test-social-network -l service=home-timeline-service --tail=200 && kubectl logs -n test-social-network -l service=user-timeline-service --tail=200 && kubectl logs -n test-social-network -l service=url-shorten-service --tail=200 && kubectl logs -n test-social-network -l service=media-service --tail=200 && kubectl logs -n test-social-network -l service=text-service --tail=200 && kubectl logs -n test-social-network -l service=post-storage-service --tail=200\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Inspect logs across key services; reveals connection refused errors to text-service:9090 indicating a routing/port issue.",
        "sequence_number": 16,
        "original_command": "exec_shell(\"kubectl logs -n test-social-network -l service=nginx-thrift -c nginx-thrift --tail=200 && kubectl logs -n test-social-network -l service=user-service --tail=200 && kubectl logs -n test-social-network -l service=compose-post-service --tail=200 && kubectl logs -n test-social-network -l service=social-graph-service --tail=200 && kubectl logs -n test-social-network -l service=home-timeline-service --tail=200 && kubectl logs -n test-social-network -l service=user-timeline-service --tail=200 && kubectl logs -n test-social-network -l service=url-shorten-service --tail=200 && kubectl logs -n test-social-network -l service=media-service --tail=200 && kubectl logs -n test-social-network -l service=text-service --tail=200 && kubectl logs -n test-social-network -l service=post-storage-service --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-social-network -l service=nginx-thrift --tail=200\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Check gateway logs for request errors indicating downstream connectivity issues.",
        "sequence_number": 17,
        "original_command": "exec_shell(\"kubectl logs -n test-social-network -l service=nginx-thrift --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl get svc -n test-social-network -o wide\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "List all services and exposed ports to identify potential port configuration issues.",
        "sequence_number": 18,
        "original_command": "exec_shell(\"kubectl get svc -n test-social-network -o wide\")"
      },
      {
        "command": "exec_shell(\"kubectl get pods -n test-social-network\")",
        "type": "probe_command",
        "importance_score": 3,
        "description": "List all pods in the namespace to confirm workloads are running.",
        "sequence_number": 19,
        "original_command": "exec_shell(\"kubectl get pods -n test-social-network\")"
      }
    ]
  },
  {
    "problem_id": "container_kill-mitigation",
    "key_commands": [
      {
        "command": "exec_shell(\"kubectl get deploy -n test-hotel-reservation geo -o yaml\")",
        "type": "probe_command",
        "importance_score": 3,
        "description": "Inspect geo deployment spec to ensure proper configuration of the faulty service.",
        "sequence_number": 1,
        "original_command": "exec_shell(\"kubectl get deploy -n test-hotel-reservation geo -o yaml\")"
      },
      {
        "command": "exec_shell(\"kubectl get deploy -n test-hotel-reservation frontend -o yaml\")",
        "type": "probe_command",
        "importance_score": 3,
        "description": "Inspect frontend deployment spec for image, command, and resource configuration.",
        "sequence_number": 2,
        "original_command": "exec_shell(\"kubectl get deploy -n test-hotel-reservation frontend -o yaml\")"
      },
      {
        "command": "exec_shell(\"kubectl get svc user -n test-hotel-reservation -o yaml\")",
        "type": "probe_command",
        "importance_score": 3,
        "description": "Confirm user service targets the correct labels and ports.",
        "sequence_number": 3,
        "original_command": "exec_shell(\"kubectl get svc user -n test-hotel-reservation -o yaml\")"
      },
      {
        "command": "exec_shell(\"kubectl get deploy -n test-hotel-reservation mongodb-user -o yaml\")",
        "type": "probe_command",
        "importance_score": 3,
        "description": "Review backing MongoDB (user) deployment configuration and storage mounts.",
        "sequence_number": 4,
        "original_command": "exec_shell(\"kubectl get deploy -n test-hotel-reservation mongodb-user -o yaml\")"
      },
      {
        "command": "exec_shell(\"kubectl get deploy user -n test-hotel-reservation -o yaml\")",
        "type": "probe_command",
        "importance_score": 3,
        "description": "Inspect user deployment configuration for environment, resources, and image to rule out config issues.",
        "sequence_number": 5,
        "original_command": "exec_shell(\"kubectl get deploy user -n test-hotel-reservation -o yaml\")"
      },
      {
        "command": "exec_shell(\"kubectl get endpoints -n test-hotel-reservation -o wide\")",
        "type": "probe_command",
        "importance_score": 8,
        "description": "Verify service endpoints map to live pod IPs, confirming end-to-end readiness across components.",
        "sequence_number": 6,
        "original_command": "exec_shell(\"kubectl get endpoints -n test-hotel-reservation -o wide\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation reservation-<POD_SUFFIX> --tail=200\")",
        "type": "probe_command",
        "importance_score": 4,
        "description": "Validate reservation service health and successful registration.",
        "sequence_number": 7,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation reservation-78c9f7976b-ddwmj --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "78c9f7976b-ddwmj",
            "placeholder": "<POD_SUFFIX>",
            "position": 63
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation profile-<POD_SUFFIX> --tail=200\")",
        "type": "probe_command",
        "importance_score": 4,
        "description": "Confirm profile service initialization and registration are successful.",
        "sequence_number": 8,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation profile-8b6dd7c6c-2tw2t --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "8b6dd7c6c-2tw2t",
            "placeholder": "<POD_SUFFIX>",
            "position": 59
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation consul-<POD_SUFFIX> --tail=200\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Review Consul agent logs to verify service discovery stabilized after initial connection refusals.",
        "sequence_number": 9,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation consul-78c8d79bb-bdvlp --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "78c8d79bb-bdvlp",
            "placeholder": "<POD_SUFFIX>",
            "position": 58
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation recommendation-<POD_SUFFIX> --tail=200\")",
        "type": "probe_command",
        "importance_score": 4,
        "description": "Confirm recommendation service is running normally and registered in Consul.",
        "sequence_number": 10,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation recommendation-6879fb56bf-7rkw9 --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "6879fb56bf-7rkw9",
            "placeholder": "<POD_SUFFIX>",
            "position": 66
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl get deploy -n test-hotel-reservation -o wide\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Check deployment status and availability across all components to ensure minimum availability is met.",
        "sequence_number": 11,
        "original_command": "exec_shell(\"kubectl get deploy -n test-hotel-reservation -o wide\")"
      },
      {
        "command": "exec_shell(\"kubectl get svc -n test-hotel-reservation\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "List services to confirm service objects and ports are correctly exposed.",
        "sequence_number": 12,
        "original_command": "exec_shell(\"kubectl get svc -n test-hotel-reservation\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation frontend-<POD_SUFFIX> --tail=200\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Validate frontend health and dependency resolution (e.g., Consul connectivity) after the transient failure.",
        "sequence_number": 13,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation frontend-7fc7ddc9db-9mnzv --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "7fc7ddc9db-9mnzv",
            "placeholder": "<POD_SUFFIX>",
            "position": 60
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation search-<POD_SUFFIX> --tail=200\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Verify the search service is healthy and registered properly post-incident.",
        "sequence_number": 14,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation search-5c64c8f5bc-z8q56 --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "5c64c8f5bc-z8q56",
            "placeholder": "<POD_SUFFIX>",
            "position": 58
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation geo-<POD_SUFFIX> --previous=true\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "Inspect previous logs of the geo service (faulty target) to confirm the prior restart and validate no ongoing errors.",
        "sequence_number": 15,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation geo-84fbc958c7-vdkgj --previous=true\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "84fbc958c7-vdkgj",
            "placeholder": "<POD_SUFFIX>",
            "position": 55
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation user-<POD_SUFFIX> --tail=200\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Check current logs of the user pod to verify successful recovery and normal operation.",
        "sequence_number": 16,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation user-66d5d6f874-qpplv --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "66d5d6f874-qpplv",
            "placeholder": "<POD_SUFFIX>",
            "position": 56
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation user-<POD_SUFFIX> --previous=true\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Inspect previous logs of the user pod to identify crash cause and confirm a prior failure.",
        "sequence_number": 17,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation user-66d5d6f874-qpplv --previous=true\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "66d5d6f874-qpplv",
            "placeholder": "<POD_SUFFIX>",
            "position": 56
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")",
        "type": "probe_command",
        "importance_score": 9,
        "description": "List all pods in the namespace to detect restarts and overall readiness after the container kill event.",
        "sequence_number": 18,
        "original_command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")"
      }
    ]
  },
  {
    "problem_id": "astronomy_shop_payment_service_failure-localization-1",
    "key_commands": [
      {
        "command": "exec_shell(\"kubectl get pods -n astronomy-shop\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "Lists all pods in the astronomy-shop namespace to identify unhealthy components.",
        "sequence_number": 1,
        "original_command": "exec_shell(\"kubectl get pods -n astronomy-shop\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n astronomy-shop fraud-detection-<POD_SUFFIX> --tail=200\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Fetches recent logs from the fraud-detection pod to begin troubleshooting.",
        "sequence_number": 2,
        "original_command": "exec_shell(\"kubectl logs -n astronomy-shop fraud-detection-65868bcdb5-pc7dv --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "65868bcdb5-pc7dv",
            "placeholder": "<POD_SUFFIX>",
            "position": 59
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n astronomy-shop fraud-detection-<POD_SUFFIX> -c fraud<REPLICA_SUFFIX> --tail<REPLICA_SUFFIX>evious\")",
        "type": "probe_command",
        "importance_score": 8,
        "description": "Retrieves logs from the previously terminated fraud-detection container to diagnose crash behavior.",
        "sequence_number": 3,
        "original_command": "exec_shell(\"kubectl logs -n astronomy-shop fraud-detection-65868bcdb5-pc7dv -c fraud-detection --tail=200 --previous\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "65868bcdb5-pc7dv",
            "placeholder": "<POD_SUFFIX>",
            "position": 59
          },
          {
            "type": "k8s_replicaset_suffix",
            "original": "-detection",
            "placeholder": "<REPLICA_SUFFIX>",
            "position": 80
          },
          {
            "type": "k8s_replicaset_suffix",
            "original": "-previous",
            "placeholder": "<REPLICA_SUFFIX>",
            "position": 103
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl describe pod -n astronomy-shop fraud-detection-<POD_SUFFIX>\")",
        "type": "probe_command",
        "importance_score": 9,
        "description": "Provides detailed pod status, events, and resource info to pinpoint restart and exit reasons.",
        "sequence_number": 4,
        "original_command": "exec_shell(\"kubectl describe pod -n astronomy-shop fraud-detection-65868bcdb5-pc7dv\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "65868bcdb5-pc7dv",
            "placeholder": "<POD_SUFFIX>",
            "position": 67
          }
        ]
      },
      {
        "command": "submit([\"fraud<REPLICA_SUFFIX>\"])",
        "type": "execute_command",
        "importance_score": 10,
        "description": "Submits the identified faulty component(s) as the final answer.",
        "sequence_number": 5,
        "original_command": "submit([\"fraud-detection\"])",
        "placeholders_used": [
          {
            "type": "k8s_replicaset_suffix",
            "original": "-detection",
            "placeholder": "<REPLICA_SUFFIX>",
            "position": 14
          }
        ]
      }
    ]
  },
  {
    "problem_id": "wrong_bin_usage-localization-1",
    "key_commands": [
      {
        "command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "List all pods in the test-hotel-reservation namespace to verify component readiness and status.",
        "sequence_number": 1,
        "original_command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")"
      },
      {
        "command": "exec_shell(\"kubectl get svc -n test-hotel-reservation -o wide\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "List services and ports to confirm service exposure and networking details.",
        "sequence_number": 2,
        "original_command": "exec_shell(\"kubectl get svc -n test-hotel-reservation -o wide\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation deployment/search --tail=200\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Inspect recent logs of the search deployment for errors or misconfiguration.",
        "sequence_number": 3,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation deployment/search --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation deployment/recommendation --tail=200\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Inspect recent logs of the recommendation deployment to verify normal operation.",
        "sequence_number": 4,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation deployment/recommendation --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation deployment/frontend --tail=200\")",
        "type": "probe_command",
        "importance_score": 4,
        "description": "Check frontend logs for client-facing errors and dependency connectivity issues.",
        "sequence_number": 5,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation deployment/frontend --tail=200\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation deployment/search --tail=200 --since=5m\")",
        "type": "probe_command",
        "importance_score": 3,
        "description": "Review recent search logs to confirm stability in the last 5 minutes.",
        "sequence_number": 6,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation deployment/search --tail=200 --since=5m\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation deployment/profile --tail=200\")",
        "type": "probe_command",
        "importance_score": 10,
        "description": "Inspect profile service logs; reveals wrong binary execution (geo logs in profile), pinpointing root cause.",
        "sequence_number": 7,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation deployment/profile --tail=200\")"
      },
      {
        "command": "submit([\"profile\"])",
        "type": "execute_command",
        "importance_score": 10,
        "description": "Submit the identified faulty component (profile) as the root cause.",
        "sequence_number": 8,
        "original_command": "submit([\"profile\"])"
      }
    ]
  },
  {
    "problem_id": "revoke_auth_mongodb-localization-1",
    "key_commands": [
      {
        "command": "submit([\"mongodb-geo\"])",
        "type": "execute_command",
        "importance_score": 10,
        "description": "Submit the identified faulty component responsible for the issue.",
        "sequence_number": 1,
        "original_command": "submit([\"mongodb-geo\"])"
      },
      {
        "command": "exec_shell(\"kubectl get configmap -n test-hotel-reservation -o yaml\")",
        "type": "probe_command",
        "importance_score": 8,
        "description": "Retrieve ConfigMaps to find revoke scripts (failure-admin-geo) that remove readWrite on geo-db.",
        "sequence_number": 2,
        "original_command": "exec_shell(\"kubectl get configmap -n test-hotel-reservation -o yaml\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation deploy/mongodb-geo\")",
        "type": "probe_command",
        "importance_score": 9,
        "description": "Inspect mongodb-geo deployment logs to confirm authorization errors when geo connects.",
        "sequence_number": 3,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation deploy/mongodb-geo\")"
      },
      {
        "command": "exec_shell(\"kubectl get deploy -n test-hotel-reservation mongodb-profile -o yaml\")",
        "type": "probe_command",
        "importance_score": 3,
        "description": "Check another MongoDB deployment as a control to compare configurations.",
        "sequence_number": 4,
        "original_command": "exec_shell(\"kubectl get deploy -n test-hotel-reservation mongodb-profile -o yaml\")"
      },
      {
        "command": "exec_shell(\"kubectl get deploy -n test-hotel-reservation mongodb-geo -o yaml\")",
        "type": "probe_command",
        "importance_score": 8,
        "description": "Examine the mongodb-geo deployment to see auth settings and mounted ConfigMaps related to scripts.",
        "sequence_number": 5,
        "original_command": "exec_shell(\"kubectl get deploy -n test-hotel-reservation mongodb-geo -o yaml\")"
      },
      {
        "command": "exec_shell(\"kubectl get deploy -n test-hotel-reservation geo -o yaml\")",
        "type": "probe_command",
        "importance_score": 4,
        "description": "Review the geo deployment configuration for environment and runtime setup.",
        "sequence_number": 6,
        "original_command": "exec_shell(\"kubectl get deploy -n test-hotel-reservation geo -o yaml\")"
      },
      {
        "command": "exec_shell(\"kubectl describe pod -n test-hotel-reservation geo-<POD_SUFFIX>\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Describe the geo pod to confirm crash state and recent restarts.",
        "sequence_number": 7,
        "original_command": "exec_shell(\"kubectl describe pod -n test-hotel-reservation geo-84fbc958c7-p4td2\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "84fbc958c7-p4td2",
            "placeholder": "<POD_SUFFIX>",
            "position": 63
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation geo-<POD_SUFFIX>\")",
        "type": "probe_command",
        "importance_score": 9,
        "description": "Inspect geo service pod logs to see the runtime error indicating MongoDB authorization failure.",
        "sequence_number": 8,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation geo-84fbc958c7-p4td2\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "84fbc958c7-p4td2",
            "placeholder": "<POD_SUFFIX>",
            "position": 55
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "List all pods in the namespace to identify failing components.",
        "sequence_number": 9,
        "original_command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")"
      }
    ]
  },
  {
    "problem_id": "assign_to_non_existent_node_social_net-analysis-1",
    "key_commands": [
      {
        "command": "exec_shell(\"kubectl get pods -n test-social-network\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "List all pods in the test-social-network namespace to identify any pods not running normally (e.g., Pending).",
        "sequence_number": 1,
        "original_command": "exec_shell(\"kubectl get pods -n test-social-network\")"
      },
      {
        "command": "exec_shell(\"kubectl describe pod -n test-social-network user-service-<POD_SUFFIX>\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "Inspect the Pending pod's detailed status, node selector, and scheduler events to pinpoint the scheduling failure (mismatched node selector/taint).",
        "sequence_number": 2,
        "original_command": "exec_shell(\"kubectl describe pod -n test-social-network user-service-5b549cc8dc-gzr6v\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "5b549cc8dc-gzr6v",
            "placeholder": "<POD_SUFFIX>",
            "position": 69
          }
        ]
      }
    ]
  },
  {
    "problem_id": "misconfig_app_hotel_res-analysis-1",
    "key_commands": [
      {
        "command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "List all pods in the namespace to identify failing components (geo pod in Error state).",
        "sequence_number": 1,
        "original_command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")"
      },
      {
        "command": "exec_shell(\"kubectl describe pod geo-<POD_SUFFIX> -n test-hotel-reservation\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Describe the geo pod to inspect container state, restarts, and events indicating backoff/restarts.",
        "sequence_number": 2,
        "original_command": "exec_shell(\"kubectl describe pod geo-c47ff745-qjkqm -n test-hotel-reservation\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "c47ff745-qjkqm",
            "placeholder": "<POD_SUFFIX>",
            "position": 37
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs geo-<POD_SUFFIX> -n test-hotel-reservation -<REPLICA_SUFFIX>\")",
        "type": "probe_command",
        "importance_score": 3,
        "description": "Attempt to retrieve previous container logs for crash details (failed to retrieve but part of diagnostic flow).",
        "sequence_number": 3,
        "original_command": "exec_shell(\"kubectl logs geo-c47ff745-qjkqm -n test-hotel-reservation --previous\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "c47ff745-qjkqm",
            "placeholder": "<POD_SUFFIX>",
            "position": 29
          },
          {
            "type": "k8s_replicaset_suffix",
            "original": "-previous",
            "placeholder": "<REPLICA_SUFFIX>",
            "position": 69
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs geo-<POD_SUFFIX> -n test-hotel-reservation\")",
        "type": "probe_command",
        "importance_score": 9,
        "description": "Get current geo pod logs revealing DB URL misconfiguration (mongodb-geo:27777) and 'no reachable servers' panic.",
        "sequence_number": 4,
        "original_command": "exec_shell(\"kubectl logs geo-c47ff745-qjkqm -n test-hotel-reservation\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "c47ff745-qjkqm",
            "placeholder": "<POD_SUFFIX>",
            "position": 29
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl get svc -n test-hotel-reservation -o wide\")",
        "type": "probe_command",
        "importance_score": 8,
        "description": "List services to verify MongoDB service port (mongodb-geo exposed on 27017, not 27777), confirming mismatch.",
        "sequence_number": 5,
        "original_command": "exec_shell(\"kubectl get svc -n test-hotel-reservation -o wide\")"
      },
      {
        "command": "exec_shell(\"kubectl get deploy geo -n test-hotel-reservation -o yaml\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Inspect geo Deployment spec to review container image, command, and env for potential misconfiguration source.",
        "sequence_number": 6,
        "original_command": "exec_shell(\"kubectl get deploy geo -n test-hotel-reservation -o yaml\")"
      },
      {
        "command": "exec_shell(\"kubectl logs mongodb-geo-<POD_SUFFIX> -n test-hotel-reservation --tail=50\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "Check MongoDB (geo) logs confirming healthy startup and listening on 27017, ruling out DB outage.",
        "sequence_number": 7,
        "original_command": "exec_shell(\"kubectl logs mongodb-geo-5ff578bcb8-7b74f -n test-hotel-reservation --tail=50\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "5ff578bcb8-7b74f",
            "placeholder": "<POD_SUFFIX>",
            "position": 37
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl get configmaps -n test-hotel-reservation -o yaml\")",
        "type": "probe_command",
        "importance_score": 4,
        "description": "Review ConfigMaps for initialization scripts and potential configuration influences (auth/roles), providing context.",
        "sequence_number": 8,
        "original_command": "exec_shell(\"kubectl get configmaps -n test-hotel-reservation -o yaml\")"
      },
      {
        "command": "exec_shell(\"kubectl logs rate-<POD_SUFFIX> -n test-hotel-reservation --tail=50\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Verify another service (rate) connects successfully to MongoDB at 27017, supporting that only geo is misconfigured.",
        "sequence_number": 9,
        "original_command": "exec_shell(\"kubectl logs rate-7bdc978679-z7sq7 -n test-hotel-reservation --tail=50\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "7bdc978679-z7sq7",
            "placeholder": "<POD_SUFFIX>",
            "position": 30
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs profile-<POD_SUFFIX> -n test-hotel-reservation --tail=50\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Verify profile service health and DB connectivity to 27017, further isolating the issue to geo configuration.",
        "sequence_number": 10,
        "original_command": "exec_shell(\"kubectl logs profile-8b6dd7c6c-q9vwx -n test-hotel-reservation --tail=50\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "8b6dd7c6c-q9vwx",
            "placeholder": "<POD_SUFFIX>",
            "position": 33
          }
        ]
      },
      {
        "command": "submit({\"system_level\": \"Application\", \"fault_type\": \"Misconfiguration\"})",
        "type": "execute_command",
        "importance_score": 10,
        "description": "Submit final diagnosis that the issue is an application-level misconfiguration.",
        "sequence_number": 11,
        "original_command": "submit({\"system_level\": \"Application\", \"fault_type\": \"Misconfiguration\"})"
      }
    ]
  },
  {
    "problem_id": "astronomy_shop_payment_service_unreachable-localization-1",
    "key_commands": [
      {
        "command": "exec_shell(\"kubectl get pods -n astronomy-shop\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "List all pods in the astronomy-shop namespace to identify any services with issues.",
        "sequence_number": 1,
        "original_command": "exec_shell(\"kubectl get pods -n astronomy-shop\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n astronomy-shop fraud-detection-<POD_SUFFIX> --tail=200 -<REPLICA_SUFFIX>\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Fetch the previous logs of the fraud-detection pod to investigate recent crash information.",
        "sequence_number": 2,
        "original_command": "exec_shell(\"kubectl logs -n astronomy-shop fraud-detection-65868bcdb5-wb74k --tail=200 --previous\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "65868bcdb5-wb74k",
            "placeholder": "<POD_SUFFIX>",
            "position": 59
          },
          {
            "type": "k8s_replicaset_suffix",
            "original": "-previous",
            "placeholder": "<REPLICA_SUFFIX>",
            "position": 84
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n astronomy-shop fraud-detection-<POD_SUFFIX> --tail=200\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Fetch the current logs of the fraud-detection pod for runtime diagnostics.",
        "sequence_number": 3,
        "original_command": "exec_shell(\"kubectl logs -n astronomy-shop fraud-detection-65868bcdb5-wb74k --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "65868bcdb5-wb74k",
            "placeholder": "<POD_SUFFIX>",
            "position": 59
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl describe pod -n astronomy-shop fraud-detection-<POD_SUFFIX>\")",
        "type": "probe_command",
        "importance_score": 8,
        "description": "Describe the fraud-detection pod to review container state, resource limits, and event history.",
        "sequence_number": 4,
        "original_command": "exec_shell(\"kubectl describe pod -n astronomy-shop fraud-detection-65868bcdb5-wb74k\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "65868bcdb5-wb74k",
            "placeholder": "<POD_SUFFIX>",
            "position": 67
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl get pod -n astronomy-shop fraud-detection-<POD_SUFFIX> -o jsonpath='{.status.containerStatuses[0].state.terminated.reason}:{.status.containerStatuses[0].state.terminated.exitCode}:{.status.containerStatuses[0].lastState.terminated.reason}:{.status.containerStatuses[0].lastState.terminated.exitCode}'\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "Extract termination reasons and exit codes from the fraud-detection pod using jsonpath.",
        "sequence_number": 5,
        "original_command": "exec_shell(\"kubectl get pod -n astronomy-shop fraud-detection-65868bcdb5-wb74k -o jsonpath='{.status.containerStatuses[0].state.terminated.reason}:{.status.containerStatuses[0].state.terminated.exitCode}:{.status.containerStatuses[0].lastState.terminated.reason}:{.status.containerStatuses[0].lastState.terminated.exitCode}'\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "65868bcdb5-wb74k",
            "placeholder": "<POD_SUFFIX>",
            "position": 62
          }
        ]
      },
      {
        "command": "submit([\"fraud<REPLICA_SUFFIX>\"])",
        "type": "execute_command",
        "importance_score": 10,
        "description": "Submit the identified faulty component(s) to the orchestrator.",
        "sequence_number": 6,
        "original_command": "submit([\"fraud-detection\"])",
        "placeholders_used": [
          {
            "type": "k8s_replicaset_suffix",
            "original": "-detection",
            "placeholder": "<REPLICA_SUFFIX>",
            "position": 14
          }
        ]
      }
    ]
  },
  {
    "problem_id": "k8s_target_port-misconfig-detection-3",
    "key_commands": [
      {
        "command": "exec_shell(\"kubectl get pods -n test-social-network\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "List all pods in the namespace to check current workload health and readiness states.",
        "sequence_number": 1,
        "original_command": "exec_shell(\"kubectl get pods -n test-social-network\")"
      },
      {
        "command": "exec_shell(\"kubectl get svc -n test-social-network\")",
        "type": "probe_command",
        "importance_score": 9,
        "description": "List all services and their ports to inspect for possible targetPort/port mismatches.",
        "sequence_number": 2,
        "original_command": "exec_shell(\"kubectl get svc -n test-social-network\")"
      },
      {
        "command": "exec_shell(\"kubectl get events -n test-social-network --sort-by=.metadata.creationTimestamp\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Review chronological Kubernetes events to surface warnings/errors that may indicate misconfigurations or runtime issues.",
        "sequence_number": 3,
        "original_command": "exec_shell(\"kubectl get events -n test-social-network --sort-by=.metadata.creationTimestamp\")"
      },
      {
        "command": "exec_shell(\"kubectl get configmap -n test-social-network\")",
        "type": "probe_command",
        "importance_score": 3,
        "description": "List ConfigMaps in the namespace to verify presence of configuration dependencies referenced by workloads.",
        "sequence_number": 4,
        "original_command": "exec_shell(\"kubectl get configmap -n test-social-network\")"
      }
    ]
  },
  {
    "problem_id": "user_unregistered_mongodb-detection-1",
    "key_commands": [
      {
        "command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "List all pods in the namespace to identify services with errors or restarts.",
        "sequence_number": 1,
        "original_command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")"
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation geo-<POD_SUFFIX> --tail=200\")",
        "type": "probe_command",
        "importance_score": 8,
        "description": "Inspect the geo service logs to identify the specific error causing the pod failure (SASL authentication failure).",
        "sequence_number": 2,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation geo-84fbc958c7-vths5 --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "84fbc958c7-vths5",
            "placeholder": "<POD_SUFFIX>",
            "position": 55
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation mongodb-geo-<POD_SUFFIX> --tail=200\")",
        "type": "probe_command",
        "importance_score": 9,
        "description": "Inspect MongoDB logs for authentication details, confirming 'UserNotFound' for admin on the admin DB.",
        "sequence_number": 3,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation mongodb-geo-5ff578bcb8-chl2b --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "5ff578bcb8-chl2b",
            "placeholder": "<POD_SUFFIX>",
            "position": 63
          }
        ]
      }
    ]
  },
  {
    "problem_id": "astronomy_shop_ad_service_high_cpu-detection-1",
    "key_commands": [
      {
        "command": "exec_shell(\"kubectl get pods -n astronomy-shop\")",
        "type": "probe_command",
        "importance_score": 9,
        "description": "List all pods in the astronomy-shop namespace to quickly identify pods with errors or restarts.",
        "sequence_number": 1,
        "original_command": "exec_shell(\"kubectl get pods -n astronomy-shop\")"
      },
      {
        "command": "exec_shell(\"kubectl describe pod -n astronomy-shop fraud-detection-<POD_SUFFIX>\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "Inspect detailed pod information and events for the failed fraud-detection pod, including exit codes and BackOff.",
        "sequence_number": 2,
        "original_command": "exec_shell(\"kubectl describe pod -n astronomy-shop fraud-detection-65868bcdb5-2xm4r\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "65868bcdb5-2xm4r",
            "placeholder": "<POD_SUFFIX>",
            "position": 67
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n astronomy-shop fraud-detection-<POD_SUFFIX> -c fraud<REPLICA_SUF<REPLICA_SUFFIX>evious\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Retrieve logs from the previous crash of the fraud-detection container to gather failure evidence.",
        "sequence_number": 3,
        "original_command": "exec_shell(\"kubectl logs -n astronomy-shop fraud-detection-65868bcdb5-2xm4r -c fraud-detection --previous\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "65868bcdb5-2xm4r",
            "placeholder": "<POD_SUFFIX>",
            "position": 59
          },
          {
            "type": "k8s_replicaset_suffix",
            "original": "-detection",
            "placeholder": "<REPLICA_SUFFIX>",
            "position": 80
          },
          {
            "type": "k8s_replicaset_suffix",
            "original": "-previous",
            "placeholder": "<REPLICA_SUFFIX>",
            "position": 92
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl get pod -n astronomy-shop fraud-detection-<POD_SUFFIX> -o json\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "Fetch the pod specification and status in JSON to verify restart counts and container states programmatically.",
        "sequence_number": 4,
        "original_command": "exec_shell(\"kubectl get pod -n astronomy-shop fraud-detection-65868bcdb5-2xm4r -o json\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "65868bcdb5-2xm4r",
            "placeholder": "<POD_SUFFIX>",
            "position": 62
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n astronomy-shop fraud-detection-<POD_SUFFIX> -c fraud<REPLICA_SUFFIX> --tail=200\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Check recent logs of the currently running fraud-detection container to confirm ongoing behavior.",
        "sequence_number": 5,
        "original_command": "exec_shell(\"kubectl logs -n astronomy-shop fraud-detection-65868bcdb5-2xm4r -c fraud-detection --tail=200\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "65868bcdb5-2xm4r",
            "placeholder": "<POD_SUFFIX>",
            "position": 59
          },
          {
            "type": "k8s_replicaset_suffix",
            "original": "-detection",
            "placeholder": "<REPLICA_SUFFIX>",
            "position": 80
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl get events -n astronomy-shop --sort-by=.lastTimestamp | tail -n 50\")",
        "type": "probe_command",
        "importance_score": 8,
        "description": "Review recent namespace events to corroborate warnings like BackOff and restarts across services, supporting anomaly detection.",
        "sequence_number": 6,
        "original_command": "exec_shell(\"kubectl get events -n astronomy-shop --sort-by=.lastTimestamp | tail -n 50\")"
      }
    ]
  },
  {
    "problem_id": "misconfig_app_hotel_res-localization-1",
    "key_commands": [
      {
        "command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")",
        "type": "probe_command",
        "importance_score": 6,
        "description": "List all pods in the namespace to identify which service/pod is failing.",
        "sequence_number": 1,
        "original_command": "exec_shell(\"kubectl get pods -n test-hotel-reservation\")"
      },
      {
        "command": "exec_shell(\"kubectl describe pod geo-<POD_SUFFIX> -n test-hotel-reservation\")",
        "type": "probe_command",
        "importance_score": 7,
        "description": "Describe the failing geo pod to inspect container state, restarts, and events.",
        "sequence_number": 2,
        "original_command": "exec_shell(\"kubectl describe pod geo-c47ff745-tnm8x -n test-hotel-reservation\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "c47ff745-tnm8x",
            "placeholder": "<POD_SUFFIX>",
            "position": 37
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl logs -n test-hotel-reservation pod/geo-<POD_SUFFIX> -<REPLICA_SUFFIX>\")",
        "type": "probe_command",
        "importance_score": 9,
        "description": "Fetch previous container logs to see the crash reason; reveals incorrect DB URL port (mongodb-geo:27777) causing 'no reachable servers'.",
        "sequence_number": 3,
        "original_command": "exec_shell(\"kubectl logs -n test-hotel-reservation pod/geo-c47ff745-tnm8x --previous\")",
        "placeholders_used": [
          {
            "type": "k8s_pod_suffix",
            "original": "c47ff745-tnm8x",
            "placeholder": "<POD_SUFFIX>",
            "position": 59
          },
          {
            "type": "k8s_replicaset_suffix",
            "original": "-previous",
            "placeholder": "<REPLICA_SUFFIX>",
            "position": 73
          }
        ]
      },
      {
        "command": "exec_shell(\"kubectl get deploy geo -n test-hotel-reservation -o yaml\")",
        "type": "probe_command",
        "importance_score": 5,
        "description": "Inspect geo deployment configuration (image, command, env) to corroborate runtime settings.",
        "sequence_number": 4,
        "original_command": "exec_shell(\"kubectl get deploy geo -n test-hotel-reservation -o yaml\")"
      },
      {
        "command": "exec_shell(\"kubectl get svc -n test-hotel-reservation -o wide\")",
        "type": "probe_command",
        "importance_score": 8,
        "description": "List services and ports; confirms mongodb-geo exposes port 27017, highlighting mismatch with app's 27777.",
        "sequence_number": 5,
        "original_command": "exec_shell(\"kubectl get svc -n test-hotel-reservation -o wide\")"
      },
      {
        "command": "submit([\"geo\"])",
        "type": "execute_command",
        "importance_score": 10,
        "description": "Submit the identified faulty component (geo) as the root cause.",
        "sequence_number": 6,
        "original_command": "submit([\"geo\"])"
      }
    ]
  }
]